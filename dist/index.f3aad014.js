function $parcel$export(e, n, v, s) {
  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});
}
function $parcel$interopDefault(a) {
  return a && a.__esModule ? a.default : a;
}
var $parcel$global =
typeof globalThis !== 'undefined'
  ? globalThis
  : typeof self !== 'undefined'
  ? self
  : typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
  ? global
  : {};
var $parcel$modules = {};
var $parcel$inits = {};

var parcelRequire = $parcel$global["parcelRequiree8ef"];
if (parcelRequire == null) {
  parcelRequire = function(id) {
    if (id in $parcel$modules) {
      return $parcel$modules[id].exports;
    }
    if (id in $parcel$inits) {
      var init = $parcel$inits[id];
      delete $parcel$inits[id];
      var module = {id: id, exports: {}};
      $parcel$modules[id] = module;
      init.call(module.exports, module, module.exports);
      return module.exports;
    }
    var err = new Error("Cannot find module '" + id + "'");
    err.code = 'MODULE_NOT_FOUND';
    throw err;
  };

  parcelRequire.register = function register(id, init) {
    $parcel$inits[id] = init;
  };

  $parcel$global["parcelRequiree8ef"] = parcelRequire;
}
var $92a5e21e0ca10e4a$exports = {};
parcelRequire.register("010HX", function(module, exports) {

$parcel$export(module.exports, "register", () => $0030a4b35a240793$export$357eb1b4f03c1402, (v) => $0030a4b35a240793$export$357eb1b4f03c1402 = v);
$parcel$export(module.exports, "resolve", () => $0030a4b35a240793$export$40339995e8a21591, (v) => $0030a4b35a240793$export$40339995e8a21591 = v);
var $0030a4b35a240793$export$357eb1b4f03c1402;
var $0030a4b35a240793$export$40339995e8a21591;
"use strict";
var $0030a4b35a240793$var$mapping = {
};
function $0030a4b35a240793$var$register(pairs) {
    var keys = Object.keys(pairs);
    for(var i = 0; i < keys.length; i++)$0030a4b35a240793$var$mapping[keys[i]] = pairs[keys[i]];
}
function $0030a4b35a240793$var$resolve(id) {
    var resolved = $0030a4b35a240793$var$mapping[id];
    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);
    return resolved;
}
$0030a4b35a240793$export$357eb1b4f03c1402 = $0030a4b35a240793$var$register;
$0030a4b35a240793$export$40339995e8a21591 = $0030a4b35a240793$var$resolve;

});


(parcelRequire("010HX")).register(JSON.parse("{\"kFkEV\":\"index.f3aad014.js\",\"1vayL\":\"logo-footer.15094891.svg\",\"646C5\":\"satori-footer.23804d32.svg\",\"br2X8\":\"close.ba526d7d.svg\",\"brEJZ\":\"index.703def76.css\"}"));

var $8873ccd5938d9111$exports = {};
'use strict';
parcelRequire.register("4UMuS", function(module, exports) {

$parcel$export(module.exports, "jsx", () => $394202dc1cca7ef3$export$e9196f6cbe4a9631, (v) => $394202dc1cca7ef3$export$e9196f6cbe4a9631 = v);
$parcel$export(module.exports, "Fragment", () => $394202dc1cca7ef3$export$44f93cb792444969, (v) => $394202dc1cca7ef3$export$44f93cb792444969 = v);
$parcel$export(module.exports, "jsxs", () => $394202dc1cca7ef3$export$a9fd51e9479a5d9a, (v) => $394202dc1cca7ef3$export$a9fd51e9479a5d9a = v);
/** @license React v17.0.1
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $394202dc1cca7ef3$export$44f93cb792444969;
var $394202dc1cca7ef3$export$e9196f6cbe4a9631;
var $394202dc1cca7ef3$export$a9fd51e9479a5d9a;
'use strict';
parcelRequire("lz3cj");

var $gctDA = parcelRequire("gctDA");
var $394202dc1cca7ef3$var$g = 60103;
$394202dc1cca7ef3$export$44f93cb792444969 = 60107;
if ("function" === typeof Symbol && Symbol.for) {
    var $394202dc1cca7ef3$var$h = Symbol.for;
    $394202dc1cca7ef3$var$g = $394202dc1cca7ef3$var$h("react.element");
    $394202dc1cca7ef3$export$44f93cb792444969 = $394202dc1cca7ef3$var$h("react.fragment");
}
var $394202dc1cca7ef3$var$m = $gctDA.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, $394202dc1cca7ef3$var$n = Object.prototype.hasOwnProperty, $394202dc1cca7ef3$var$p = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function $394202dc1cca7ef3$var$q(c, a, k) {
    var b, d = {
    }, e = null, l = null;
    (void 0) !== k && (e = "" + k);
    (void 0) !== a.key && (e = "" + a.key);
    (void 0) !== a.ref && (l = a.ref);
    for(b in a)$394202dc1cca7ef3$var$n.call(a, b) && !$394202dc1cca7ef3$var$p.hasOwnProperty(b) && (d[b] = a[b]);
    if (c && c.defaultProps) for(b in a = c.defaultProps, a)(void 0) === d[b] && (d[b] = a[b]);
    return {
        $$typeof: $394202dc1cca7ef3$var$g,
        type: c,
        key: e,
        ref: l,
        props: d,
        _owner: $394202dc1cca7ef3$var$m.current
    };
}
$394202dc1cca7ef3$export$e9196f6cbe4a9631 = $394202dc1cca7ef3$var$q;
$394202dc1cca7ef3$export$a9fd51e9479a5d9a = $394202dc1cca7ef3$var$q;

});
parcelRequire.register("lz3cj", function(module, exports) {
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/ 'use strict';
/* eslint-disable no-unused-vars */ var $fb2f58d34377c1fd$var$getOwnPropertySymbols = Object.getOwnPropertySymbols;
var $fb2f58d34377c1fd$var$hasOwnProperty = Object.prototype.hasOwnProperty;
var $fb2f58d34377c1fd$var$propIsEnumerable = Object.prototype.propertyIsEnumerable;
function $fb2f58d34377c1fd$var$toObject(val) {
    if (val === null || val === undefined) throw new TypeError('Object.assign cannot be called with null or undefined');
    return Object(val);
}
function $fb2f58d34377c1fd$var$shouldUseNative() {
    try {
        if (!Object.assign) return false;
        // Detect buggy property enumeration order in older V8 versions.
        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
        var test1 = "abc"; // eslint-disable-line no-new-wrappers
        test1[5] = 'de';
        if (Object.getOwnPropertyNames(test1)[0] === '5') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test2 = {
        };
        for(var i = 0; i < 10; i++)test2['_' + String.fromCharCode(i)] = i;
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
            return test2[n];
        });
        if (order2.join('') !== '0123456789') return false;
        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
        var test3 = {
        };
        'abcdefghijklmnopqrst'.split('').forEach(function(letter) {
            test3[letter] = letter;
        });
        if (Object.keys(Object.assign({
        }, test3)).join('') !== 'abcdefghijklmnopqrst') return false;
        return true;
    } catch (err) {
        // We don't expect any of the above to throw, but better to be safe.
        return false;
    }
}
module.exports = $fb2f58d34377c1fd$var$shouldUseNative() ? Object.assign : function(target, source) {
    var from;
    var to = $fb2f58d34377c1fd$var$toObject(target);
    var symbols;
    for(var s = 1; s < arguments.length; s++){
        from = Object(arguments[s]);
        for(var key in from)if ($fb2f58d34377c1fd$var$hasOwnProperty.call(from, key)) to[key] = from[key];
        if ($fb2f58d34377c1fd$var$getOwnPropertySymbols) {
            symbols = $fb2f58d34377c1fd$var$getOwnPropertySymbols(from);
            for(var i = 0; i < symbols.length; i++)if ($fb2f58d34377c1fd$var$propIsEnumerable.call(from, symbols[i])) to[symbols[i]] = from[symbols[i]];
        }
    }
    return to;
};

});

parcelRequire.register("gctDA", function(module, exports) {
'use strict';

module.exports = (parcelRequire("7NnOZ"));

});
parcelRequire.register("7NnOZ", function(module, exports) {

$parcel$export(module.exports, "Suspense", () => $5acf966d65c8a594$export$c48602b94a21f1d, (v) => $5acf966d65c8a594$export$c48602b94a21f1d = v);
$parcel$export(module.exports, "useContext", () => $5acf966d65c8a594$export$d532f802c57568ca, (v) => $5acf966d65c8a594$export$d532f802c57568ca = v);
$parcel$export(module.exports, "useImperativeHandle", () => $5acf966d65c8a594$export$718bc1f42abf35a1, (v) => $5acf966d65c8a594$export$718bc1f42abf35a1 = v);
$parcel$export(module.exports, "useLayoutEffect", () => $5acf966d65c8a594$export$3839ad89c0ec6b31, (v) => $5acf966d65c8a594$export$3839ad89c0ec6b31 = v);
$parcel$export(module.exports, "PureComponent", () => $5acf966d65c8a594$export$1052a189944aaefd, (v) => $5acf966d65c8a594$export$1052a189944aaefd = v);
$parcel$export(module.exports, "lazy", () => $5acf966d65c8a594$export$e7e4e034ac2b3d6d, (v) => $5acf966d65c8a594$export$e7e4e034ac2b3d6d = v);
$parcel$export(module.exports, "StrictMode", () => $5acf966d65c8a594$export$d4be2b174b51d37f, (v) => $5acf966d65c8a594$export$d4be2b174b51d37f = v);
$parcel$export(module.exports, "memo", () => $5acf966d65c8a594$export$ce1de884d18aca73, (v) => $5acf966d65c8a594$export$ce1de884d18aca73 = v);
$parcel$export(module.exports, "createFactory", () => $5acf966d65c8a594$export$1131d5939e335b44, (v) => $5acf966d65c8a594$export$1131d5939e335b44 = v);
$parcel$export(module.exports, "Fragment", () => $5acf966d65c8a594$export$44f93cb792444969, (v) => $5acf966d65c8a594$export$44f93cb792444969 = v);
$parcel$export(module.exports, "useEffect", () => $5acf966d65c8a594$export$7e977b4ca969aabd, (v) => $5acf966d65c8a594$export$7e977b4ca969aabd = v);
$parcel$export(module.exports, "createRef", () => $5acf966d65c8a594$export$7b1b471b02aa30a7, (v) => $5acf966d65c8a594$export$7b1b471b02aa30a7 = v);
$parcel$export(module.exports, "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", () => $5acf966d65c8a594$export$d3a973975d28d962, (v) => $5acf966d65c8a594$export$d3a973975d28d962 = v);
$parcel$export(module.exports, "Profiler", () => $5acf966d65c8a594$export$aebb143d3e9a0538, (v) => $5acf966d65c8a594$export$aebb143d3e9a0538 = v);
$parcel$export(module.exports, "Children", () => $5acf966d65c8a594$export$4a1442b8e7333aeb, (v) => $5acf966d65c8a594$export$4a1442b8e7333aeb = v);
$parcel$export(module.exports, "useCallback", () => $5acf966d65c8a594$export$e04575e0186a275b, (v) => $5acf966d65c8a594$export$e04575e0186a275b = v);
$parcel$export(module.exports, "useDebugValue", () => $5acf966d65c8a594$export$cc6232f21d9652b3, (v) => $5acf966d65c8a594$export$cc6232f21d9652b3 = v);
$parcel$export(module.exports, "useMemo", () => $5acf966d65c8a594$export$fe55aea32a6cbc49, (v) => $5acf966d65c8a594$export$fe55aea32a6cbc49 = v);
$parcel$export(module.exports, "useReducer", () => $5acf966d65c8a594$export$6e55c98e7205a356, (v) => $5acf966d65c8a594$export$6e55c98e7205a356 = v);
$parcel$export(module.exports, "useRef", () => $5acf966d65c8a594$export$575893c07881cfe8, (v) => $5acf966d65c8a594$export$575893c07881cfe8 = v);
$parcel$export(module.exports, "useState", () => $5acf966d65c8a594$export$f54936751fc2c51, (v) => $5acf966d65c8a594$export$f54936751fc2c51 = v);
$parcel$export(module.exports, "cloneElement", () => $5acf966d65c8a594$export$228915fa085e29fe, (v) => $5acf966d65c8a594$export$228915fa085e29fe = v);
$parcel$export(module.exports, "isValidElement", () => $5acf966d65c8a594$export$64e9a1defe72209, (v) => $5acf966d65c8a594$export$64e9a1defe72209 = v);
$parcel$export(module.exports, "createElement", () => $5acf966d65c8a594$export$2f8418d37d4320b9, (v) => $5acf966d65c8a594$export$2f8418d37d4320b9 = v);
$parcel$export(module.exports, "version", () => $5acf966d65c8a594$export$aef83baa0e7093df, (v) => $5acf966d65c8a594$export$aef83baa0e7093df = v);
$parcel$export(module.exports, "Component", () => $5acf966d65c8a594$export$ea71c44d9cb0d048, (v) => $5acf966d65c8a594$export$ea71c44d9cb0d048 = v);
$parcel$export(module.exports, "createContext", () => $5acf966d65c8a594$export$a4ff86cea5c8127e, (v) => $5acf966d65c8a594$export$a4ff86cea5c8127e = v);
$parcel$export(module.exports, "forwardRef", () => $5acf966d65c8a594$export$ac92bb288368c37c, (v) => $5acf966d65c8a594$export$ac92bb288368c37c = v);
/** @license React v17.0.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $5acf966d65c8a594$export$7e977b4ca969aabd;
var $5acf966d65c8a594$export$d4be2b174b51d37f;
var $5acf966d65c8a594$export$aebb143d3e9a0538;
var $5acf966d65c8a594$export$44f93cb792444969;
var $5acf966d65c8a594$export$e04575e0186a275b;
var $5acf966d65c8a594$export$3839ad89c0ec6b31;
var $5acf966d65c8a594$export$4a1442b8e7333aeb;
var $5acf966d65c8a594$export$a4ff86cea5c8127e;
var $5acf966d65c8a594$export$ac92bb288368c37c;
var $5acf966d65c8a594$export$64e9a1defe72209;
var $5acf966d65c8a594$export$1052a189944aaefd;
var $5acf966d65c8a594$export$ce1de884d18aca73;
var $5acf966d65c8a594$export$d532f802c57568ca;
var $5acf966d65c8a594$export$718bc1f42abf35a1;
var $5acf966d65c8a594$export$f54936751fc2c51;
var $5acf966d65c8a594$export$c48602b94a21f1d;
var $5acf966d65c8a594$export$2f8418d37d4320b9;
var $5acf966d65c8a594$export$ea71c44d9cb0d048;
var $5acf966d65c8a594$export$d3a973975d28d962;
var $5acf966d65c8a594$export$228915fa085e29fe;
var $5acf966d65c8a594$export$1131d5939e335b44;
var $5acf966d65c8a594$export$7b1b471b02aa30a7;
var $5acf966d65c8a594$export$e7e4e034ac2b3d6d;
var $5acf966d65c8a594$export$cc6232f21d9652b3;
var $5acf966d65c8a594$export$fe55aea32a6cbc49;
var $5acf966d65c8a594$export$575893c07881cfe8;
var $5acf966d65c8a594$export$aef83baa0e7093df;
var $5acf966d65c8a594$export$6e55c98e7205a356;
'use strict';

var $lz3cj = parcelRequire("lz3cj");
var $5acf966d65c8a594$var$n = 60103, $5acf966d65c8a594$var$p = 60106;
$5acf966d65c8a594$export$44f93cb792444969 = 60107;
$5acf966d65c8a594$export$d4be2b174b51d37f = 60108;
$5acf966d65c8a594$export$aebb143d3e9a0538 = 60114;
var $5acf966d65c8a594$var$q = 60109, $5acf966d65c8a594$var$r = 60110, $5acf966d65c8a594$var$t = 60112;
$5acf966d65c8a594$export$c48602b94a21f1d = 60113;
var $5acf966d65c8a594$var$u = 60115, $5acf966d65c8a594$var$v = 60116;
if ("function" === typeof Symbol && Symbol.for) {
    var $5acf966d65c8a594$var$w = Symbol.for;
    $5acf966d65c8a594$var$n = $5acf966d65c8a594$var$w("react.element");
    $5acf966d65c8a594$var$p = $5acf966d65c8a594$var$w("react.portal");
    $5acf966d65c8a594$export$44f93cb792444969 = $5acf966d65c8a594$var$w("react.fragment");
    $5acf966d65c8a594$export$d4be2b174b51d37f = $5acf966d65c8a594$var$w("react.strict_mode");
    $5acf966d65c8a594$export$aebb143d3e9a0538 = $5acf966d65c8a594$var$w("react.profiler");
    $5acf966d65c8a594$var$q = $5acf966d65c8a594$var$w("react.provider");
    $5acf966d65c8a594$var$r = $5acf966d65c8a594$var$w("react.context");
    $5acf966d65c8a594$var$t = $5acf966d65c8a594$var$w("react.forward_ref");
    $5acf966d65c8a594$export$c48602b94a21f1d = $5acf966d65c8a594$var$w("react.suspense");
    $5acf966d65c8a594$var$u = $5acf966d65c8a594$var$w("react.memo");
    $5acf966d65c8a594$var$v = $5acf966d65c8a594$var$w("react.lazy");
}
var $5acf966d65c8a594$var$x = "function" === typeof Symbol && Symbol.iterator;
function $5acf966d65c8a594$var$y(a) {
    if (null === a || "object" !== typeof a) return null;
    a = $5acf966d65c8a594$var$x && a[$5acf966d65c8a594$var$x] || a["@@iterator"];
    return "function" === typeof a ? a : null;
}
function $5acf966d65c8a594$var$z(a) {
    for(var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)b += "&args[]=" + encodeURIComponent(arguments[c]);
    return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
var $5acf966d65c8a594$var$A = {
    isMounted: function() {
        return !1;
    },
    enqueueForceUpdate: function() {
    },
    enqueueReplaceState: function() {
    },
    enqueueSetState: function() {
    }
}, $5acf966d65c8a594$var$B = {
};
function $5acf966d65c8a594$var$C(a, b, c) {
    this.props = a;
    this.context = b;
    this.refs = $5acf966d65c8a594$var$B;
    this.updater = c || $5acf966d65c8a594$var$A;
}
$5acf966d65c8a594$var$C.prototype.isReactComponent = {
};
$5acf966d65c8a594$var$C.prototype.setState = function(a, b) {
    if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error($5acf966d65c8a594$var$z(85));
    this.updater.enqueueSetState(this, a, b, "setState");
};
$5acf966d65c8a594$var$C.prototype.forceUpdate = function(a) {
    this.updater.enqueueForceUpdate(this, a, "forceUpdate");
};
function $5acf966d65c8a594$var$D() {
}
$5acf966d65c8a594$var$D.prototype = $5acf966d65c8a594$var$C.prototype;
function $5acf966d65c8a594$var$E(a, b, c) {
    this.props = a;
    this.context = b;
    this.refs = $5acf966d65c8a594$var$B;
    this.updater = c || $5acf966d65c8a594$var$A;
}
var $5acf966d65c8a594$var$F = $5acf966d65c8a594$var$E.prototype = new $5acf966d65c8a594$var$D;
$5acf966d65c8a594$var$F.constructor = $5acf966d65c8a594$var$E;
$lz3cj($5acf966d65c8a594$var$F, $5acf966d65c8a594$var$C.prototype);
$5acf966d65c8a594$var$F.isPureReactComponent = !0;
var $5acf966d65c8a594$var$G = {
    current: null
}, $5acf966d65c8a594$var$H = Object.prototype.hasOwnProperty, $5acf966d65c8a594$var$I = {
    key: !0,
    ref: !0,
    __self: !0,
    __source: !0
};
function $5acf966d65c8a594$var$J(a, b, c) {
    var e, d = {
    }, k = null, h = null;
    if (null != b) for(e in (void 0) !== b.ref && (h = b.ref), (void 0) !== b.key && (k = "" + b.key), b)$5acf966d65c8a594$var$H.call(b, e) && !$5acf966d65c8a594$var$I.hasOwnProperty(e) && (d[e] = b[e]);
    var g = arguments.length - 2;
    if (1 === g) d.children = c;
    else if (1 < g) {
        for(var f = Array(g), m = 0; m < g; m++)f[m] = arguments[m + 2];
        d.children = f;
    }
    if (a && a.defaultProps) for(e in g = a.defaultProps, g)(void 0) === d[e] && (d[e] = g[e]);
    return {
        $$typeof: $5acf966d65c8a594$var$n,
        type: a,
        key: k,
        ref: h,
        props: d,
        _owner: $5acf966d65c8a594$var$G.current
    };
}
function $5acf966d65c8a594$var$K(a, b) {
    return {
        $$typeof: $5acf966d65c8a594$var$n,
        type: a.type,
        key: b,
        ref: a.ref,
        props: a.props,
        _owner: a._owner
    };
}
function $5acf966d65c8a594$var$L(a) {
    return "object" === typeof a && null !== a && a.$$typeof === $5acf966d65c8a594$var$n;
}
function $5acf966d65c8a594$var$escape(a) {
    var b = {
        "=": "=0",
        ":": "=2"
    };
    return "$" + a.replace(/[=:]/g, function(a1) {
        return b[a1];
    });
}
var $5acf966d65c8a594$var$M = /\/+/g;
function $5acf966d65c8a594$var$N(a, b) {
    return "object" === typeof a && null !== a && null != a.key ? $5acf966d65c8a594$var$escape("" + a.key) : b.toString(36);
}
function $5acf966d65c8a594$var$O(a, b, c, e, d) {
    var k = typeof a;
    if ("undefined" === k || "boolean" === k) a = null;
    var h = !1;
    if (null === a) h = !0;
    else switch(k){
        case "string":
        case "number":
            h = !0;
            break;
        case "object":
            switch(a.$$typeof){
                case $5acf966d65c8a594$var$n:
                case $5acf966d65c8a594$var$p:
                    h = !0;
            }
    }
    if (h) return h = a, d = d(h), a = "" === e ? "." + $5acf966d65c8a594$var$N(h, 0) : e, Array.isArray(d) ? (c = "", null != a && (c = a.replace($5acf966d65c8a594$var$M, "$&/") + "/"), $5acf966d65c8a594$var$O(d, b, c, "", function(a1) {
        return a1;
    })) : null != d && ($5acf966d65c8a594$var$L(d) && (d = $5acf966d65c8a594$var$K(d, c + (!d.key || h && h.key === d.key ? "" : ("" + d.key).replace($5acf966d65c8a594$var$M, "$&/") + "/") + a)), b.push(d)), 1;
    h = 0;
    e = "" === e ? "." : e + ":";
    if (Array.isArray(a)) for(var g = 0; g < a.length; g++){
        k = a[g];
        var f = e + $5acf966d65c8a594$var$N(k, g);
        h += $5acf966d65c8a594$var$O(k, b, c, f, d);
    }
    else if (f = $5acf966d65c8a594$var$y(a), "function" === typeof f) for(a = f.call(a), g = 0; !(k = a.next()).done;)k = k.value, f = e + $5acf966d65c8a594$var$N(k, g++), h += $5acf966d65c8a594$var$O(k, b, c, f, d);
    else if ("object" === k) throw b = "" + a, Error($5acf966d65c8a594$var$z(31, "[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b));
    return h;
}
function $5acf966d65c8a594$var$P(a, b, c) {
    if (null == a) return a;
    var e = [], d = 0;
    $5acf966d65c8a594$var$O(a, e, "", "", function(a1) {
        return b.call(c, a1, d++);
    });
    return e;
}
function $5acf966d65c8a594$var$Q(a) {
    if (-1 === a._status) {
        var b = a._result;
        b = b();
        a._status = 0;
        a._result = b;
        b.then(function(b1) {
            0 === a._status && (b1 = b1.default, a._status = 1, a._result = b1);
        }, function(b1) {
            0 === a._status && (a._status = 2, a._result = b1);
        });
    }
    if (1 === a._status) return a._result;
    throw a._result;
}
var $5acf966d65c8a594$var$R = {
    current: null
};
function $5acf966d65c8a594$var$S() {
    var a = $5acf966d65c8a594$var$R.current;
    if (null === a) throw Error($5acf966d65c8a594$var$z(321));
    return a;
}
var $5acf966d65c8a594$var$T = {
    ReactCurrentDispatcher: $5acf966d65c8a594$var$R,
    ReactCurrentBatchConfig: {
        transition: 0
    },
    ReactCurrentOwner: $5acf966d65c8a594$var$G,
    IsSomeRendererActing: {
        current: !1
    },
    assign: $lz3cj
};
$5acf966d65c8a594$export$4a1442b8e7333aeb = {
    map: $5acf966d65c8a594$var$P,
    forEach: function(a, b, c) {
        $5acf966d65c8a594$var$P(a, function() {
            b.apply(this, arguments);
        }, c);
    },
    count: function(a) {
        var b = 0;
        $5acf966d65c8a594$var$P(a, function() {
            b++;
        });
        return b;
    },
    toArray: function(a) {
        return $5acf966d65c8a594$var$P(a, function(a1) {
            return a1;
        }) || [];
    },
    only: function(a) {
        if (!$5acf966d65c8a594$var$L(a)) throw Error($5acf966d65c8a594$var$z(143));
        return a;
    }
};
$5acf966d65c8a594$export$ea71c44d9cb0d048 = $5acf966d65c8a594$var$C;
$5acf966d65c8a594$export$1052a189944aaefd = $5acf966d65c8a594$var$E;
$5acf966d65c8a594$export$d3a973975d28d962 = $5acf966d65c8a594$var$T;
$5acf966d65c8a594$export$228915fa085e29fe = function(a, b, c) {
    if (null === a || (void 0) === a) throw Error($5acf966d65c8a594$var$z(267, a));
    var e = $lz3cj({
    }, a.props), d = a.key, k = a.ref, h = a._owner;
    if (null != b) {
        (void 0) !== b.ref && (k = b.ref, h = $5acf966d65c8a594$var$G.current);
        (void 0) !== b.key && (d = "" + b.key);
        if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
        for(f in b)$5acf966d65c8a594$var$H.call(b, f) && !$5acf966d65c8a594$var$I.hasOwnProperty(f) && (e[f] = (void 0) === b[f] && (void 0) !== g ? g[f] : b[f]);
    }
    var f = arguments.length - 2;
    if (1 === f) e.children = c;
    else if (1 < f) {
        g = Array(f);
        for(var m = 0; m < f; m++)g[m] = arguments[m + 2];
        e.children = g;
    }
    return {
        $$typeof: $5acf966d65c8a594$var$n,
        type: a.type,
        key: d,
        ref: k,
        props: e,
        _owner: h
    };
};
$5acf966d65c8a594$export$a4ff86cea5c8127e = function(a, b) {
    (void 0) === b && (b = null);
    a = {
        $$typeof: $5acf966d65c8a594$var$r,
        _calculateChangedBits: b,
        _currentValue: a,
        _currentValue2: a,
        _threadCount: 0,
        Provider: null,
        Consumer: null
    };
    a.Provider = {
        $$typeof: $5acf966d65c8a594$var$q,
        _context: a
    };
    return a.Consumer = a;
};
$5acf966d65c8a594$export$2f8418d37d4320b9 = $5acf966d65c8a594$var$J;
$5acf966d65c8a594$export$1131d5939e335b44 = function(a) {
    var b = $5acf966d65c8a594$var$J.bind(null, a);
    b.type = a;
    return b;
};
$5acf966d65c8a594$export$7b1b471b02aa30a7 = function() {
    return {
        current: null
    };
};
$5acf966d65c8a594$export$ac92bb288368c37c = function(a) {
    return {
        $$typeof: $5acf966d65c8a594$var$t,
        render: a
    };
};
$5acf966d65c8a594$export$64e9a1defe72209 = $5acf966d65c8a594$var$L;
$5acf966d65c8a594$export$e7e4e034ac2b3d6d = function(a) {
    return {
        $$typeof: $5acf966d65c8a594$var$v,
        _payload: {
            _status: -1,
            _result: a
        },
        _init: $5acf966d65c8a594$var$Q
    };
};
$5acf966d65c8a594$export$ce1de884d18aca73 = function(a, b) {
    return {
        $$typeof: $5acf966d65c8a594$var$u,
        type: a,
        compare: (void 0) === b ? null : b
    };
};
$5acf966d65c8a594$export$e04575e0186a275b = function(a, b) {
    return $5acf966d65c8a594$var$S().useCallback(a, b);
};
$5acf966d65c8a594$export$d532f802c57568ca = function(a, b) {
    return $5acf966d65c8a594$var$S().useContext(a, b);
};
$5acf966d65c8a594$export$cc6232f21d9652b3 = function() {
};
$5acf966d65c8a594$export$7e977b4ca969aabd = function(a, b) {
    return $5acf966d65c8a594$var$S().useEffect(a, b);
};
$5acf966d65c8a594$export$718bc1f42abf35a1 = function(a, b, c) {
    return $5acf966d65c8a594$var$S().useImperativeHandle(a, b, c);
};
$5acf966d65c8a594$export$3839ad89c0ec6b31 = function(a, b) {
    return $5acf966d65c8a594$var$S().useLayoutEffect(a, b);
};
$5acf966d65c8a594$export$fe55aea32a6cbc49 = function(a, b) {
    return $5acf966d65c8a594$var$S().useMemo(a, b);
};
$5acf966d65c8a594$export$6e55c98e7205a356 = function(a, b, c) {
    return $5acf966d65c8a594$var$S().useReducer(a, b, c);
};
$5acf966d65c8a594$export$575893c07881cfe8 = function(a) {
    return $5acf966d65c8a594$var$S().useRef(a);
};
$5acf966d65c8a594$export$f54936751fc2c51 = function(a) {
    return $5acf966d65c8a594$var$S().useState(a);
};
$5acf966d65c8a594$export$aef83baa0e7093df = "17.0.1";

});




$8873ccd5938d9111$exports = (parcelRequire("4UMuS"));


parcelRequire("gctDA");
var $657d346a63c24e23$exports = {};
'use strict';
function $657d346a63c24e23$var$checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') return;
    try {
        // Verify that the code above has been dead code eliminated (DCE'd).
        __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE($657d346a63c24e23$var$checkDCE);
    } catch (err) {
        // DevTools shouldn't crash React, no matter what.
        // We should still report in case we break this code.
        console.error(err);
    }
}
// DCE check should happen before ReactDOM bundle executes so that
// DevTools can report bad minification during injection.
$657d346a63c24e23$var$checkDCE();
parcelRequire.register("lPMQT", function(module, exports) {

$parcel$export(module.exports, "version", () => $fe54416e54b68053$export$aef83baa0e7093df, (v) => $fe54416e54b68053$export$aef83baa0e7093df = v);
$parcel$export(module.exports, "render", () => $fe54416e54b68053$export$792a797b69be0d58, (v) => $fe54416e54b68053$export$792a797b69be0d58 = v);
$parcel$export(module.exports, "unmountComponentAtNode", () => $fe54416e54b68053$export$8b551db4c9986cff, (v) => $fe54416e54b68053$export$8b551db4c9986cff = v);
$parcel$export(module.exports, "hydrate", () => $fe54416e54b68053$export$dc71f274e8db783f, (v) => $fe54416e54b68053$export$dc71f274e8db783f = v);
$parcel$export(module.exports, "flushSync", () => $fe54416e54b68053$export$2836d6a43c939b43, (v) => $fe54416e54b68053$export$2836d6a43c939b43 = v);
$parcel$export(module.exports, "unstable_batchedUpdates", () => $fe54416e54b68053$export$bd9f53b4075e6ae5, (v) => $fe54416e54b68053$export$bd9f53b4075e6ae5 = v);
$parcel$export(module.exports, "unstable_createPortal", () => $fe54416e54b68053$export$d0103c6ec7ca9228, (v) => $fe54416e54b68053$export$d0103c6ec7ca9228 = v);
$parcel$export(module.exports, "createPortal", () => $fe54416e54b68053$export$daa207208ae40787, (v) => $fe54416e54b68053$export$daa207208ae40787 = v);
$parcel$export(module.exports, "findDOMNode", () => $fe54416e54b68053$export$1817be7fffc127f2, (v) => $fe54416e54b68053$export$1817be7fffc127f2 = v);
$parcel$export(module.exports, "unstable_renderSubtreeIntoContainer", () => $fe54416e54b68053$export$3ce83da383eb002, (v) => $fe54416e54b68053$export$3ce83da383eb002 = v);
$parcel$export(module.exports, "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", () => $fe54416e54b68053$export$d3a973975d28d962, (v) => $fe54416e54b68053$export$d3a973975d28d962 = v);
/** @license React v17.0.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ /*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/ var $fe54416e54b68053$export$daa207208ae40787;
var $fe54416e54b68053$export$1817be7fffc127f2;
var $fe54416e54b68053$export$dc71f274e8db783f;
var $fe54416e54b68053$export$8b551db4c9986cff;
var $fe54416e54b68053$export$3ce83da383eb002;
var $fe54416e54b68053$export$bd9f53b4075e6ae5;
var $fe54416e54b68053$export$d0103c6ec7ca9228;
var $fe54416e54b68053$export$792a797b69be0d58;
var $fe54416e54b68053$export$2836d6a43c939b43;
var $fe54416e54b68053$export$d3a973975d28d962;
var $fe54416e54b68053$export$aef83baa0e7093df;
'use strict';

var $gctDA = parcelRequire("gctDA");

var $lz3cj = parcelRequire("lz3cj");

var $eZpbl = parcelRequire("eZpbl");
function $fe54416e54b68053$var$y(a) {
    for(var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++)b += "&args[]=" + encodeURIComponent(arguments[c]);
    return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
}
if (!$gctDA) throw Error($fe54416e54b68053$var$y(227));
var $fe54416e54b68053$var$ba = new Set, $fe54416e54b68053$var$ca = {
};
function $fe54416e54b68053$var$da(a, b) {
    $fe54416e54b68053$var$ea(a, b);
    $fe54416e54b68053$var$ea(a + "Capture", b);
}
function $fe54416e54b68053$var$ea(a, b) {
    $fe54416e54b68053$var$ca[a] = b;
    for(a = 0; a < b.length; a++)$fe54416e54b68053$var$ba.add(b[a]);
}
var $fe54416e54b68053$var$fa = !("undefined" === typeof window || "undefined" === typeof window.document || "undefined" === typeof window.document.createElement), $fe54416e54b68053$var$ha = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, $fe54416e54b68053$var$ia = Object.prototype.hasOwnProperty, $fe54416e54b68053$var$ja = {
}, $fe54416e54b68053$var$ka = {
};
function $fe54416e54b68053$var$la(a) {
    if ($fe54416e54b68053$var$ia.call($fe54416e54b68053$var$ka, a)) return !0;
    if ($fe54416e54b68053$var$ia.call($fe54416e54b68053$var$ja, a)) return !1;
    if ($fe54416e54b68053$var$ha.test(a)) return $fe54416e54b68053$var$ka[a] = !0;
    $fe54416e54b68053$var$ja[a] = !0;
    return !1;
}
function $fe54416e54b68053$var$ma(a, b, c, d) {
    if (null !== c && 0 === c.type) return !1;
    switch(typeof b){
        case "function":
        case "symbol":
            return !0;
        case "boolean":
            if (d) return !1;
            if (null !== c) return !c.acceptsBooleans;
            a = a.toLowerCase().slice(0, 5);
            return "data-" !== a && "aria-" !== a;
        default:
            return !1;
    }
}
function $fe54416e54b68053$var$na(a, b, c, d) {
    if (null === b || "undefined" === typeof b || $fe54416e54b68053$var$ma(a, b, c, d)) return !0;
    if (d) return !1;
    if (null !== c) switch(c.type){
        case 3:
            return !b;
        case 4:
            return !1 === b;
        case 5:
            return isNaN(b);
        case 6:
            return isNaN(b) || 1 > b;
    }
    return !1;
}
function $fe54416e54b68053$var$B(a, b, c, d, e, f, g) {
    this.acceptsBooleans = 2 === b || 3 === b || 4 === b;
    this.attributeName = d;
    this.attributeNamespace = e;
    this.mustUseProperty = c;
    this.propertyName = a;
    this.type = b;
    this.sanitizeURL = f;
    this.removeEmptyString = g;
}
var $fe54416e54b68053$var$D = {
};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 0, !1, a, null, !1, !1);
});
[
    [
        "acceptCharset",
        "accept-charset"
    ],
    [
        "className",
        "class"
    ],
    [
        "htmlFor",
        "for"
    ],
    [
        "httpEquiv",
        "http-equiv"
    ]
].forEach(function(a) {
    var b = a[0];
    $fe54416e54b68053$var$D[b] = new $fe54416e54b68053$var$B(b, 1, !1, a[1], null, !1, !1);
});
[
    "contentEditable",
    "draggable",
    "spellCheck",
    "value"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 2, !1, a.toLowerCase(), null, !1, !1);
});
[
    "autoReverse",
    "externalResourcesRequired",
    "focusable",
    "preserveAlpha"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 2, !1, a, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 3, !1, a.toLowerCase(), null, !1, !1);
});
[
    "checked",
    "multiple",
    "muted",
    "selected"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 3, !0, a, null, !1, !1);
});
[
    "capture",
    "download"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 4, !1, a, null, !1, !1);
});
[
    "cols",
    "rows",
    "size",
    "span"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 6, !1, a, null, !1, !1);
});
[
    "rowSpan",
    "start"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 5, !1, a.toLowerCase(), null, !1, !1);
});
var $fe54416e54b68053$var$oa = /[\-:]([a-z])/g;
function $fe54416e54b68053$var$pa(a) {
    return a[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
    var b = a.replace($fe54416e54b68053$var$oa, $fe54416e54b68053$var$pa);
    $fe54416e54b68053$var$D[b] = new $fe54416e54b68053$var$B(b, 1, !1, a, null, !1, !1);
});
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
    var b = a.replace($fe54416e54b68053$var$oa, $fe54416e54b68053$var$pa);
    $fe54416e54b68053$var$D[b] = new $fe54416e54b68053$var$B(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1, !1);
});
[
    "xml:base",
    "xml:lang",
    "xml:space"
].forEach(function(a) {
    var b = a.replace($fe54416e54b68053$var$oa, $fe54416e54b68053$var$pa);
    $fe54416e54b68053$var$D[b] = new $fe54416e54b68053$var$B(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
[
    "tabIndex",
    "crossOrigin"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 1, !1, a.toLowerCase(), null, !1, !1);
});
$fe54416e54b68053$var$D.xlinkHref = new $fe54416e54b68053$var$B("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
[
    "src",
    "href",
    "action",
    "formAction"
].forEach(function(a) {
    $fe54416e54b68053$var$D[a] = new $fe54416e54b68053$var$B(a, 1, !1, a.toLowerCase(), null, !0, !0);
});
function $fe54416e54b68053$var$qa(a, b, c, d) {
    var e = $fe54416e54b68053$var$D.hasOwnProperty(b) ? $fe54416e54b68053$var$D[b] : null;
    var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || "o" !== b[0] && "O" !== b[0] || "n" !== b[1] && "N" !== b[1] ? !1 : !0;
    f || ($fe54416e54b68053$var$na(b, c, e, d) && (c = null), d || null === e ? $fe54416e54b68053$var$la(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : "" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? "" : "" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
}
var $fe54416e54b68053$var$ra = $gctDA.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, $fe54416e54b68053$var$sa = 60103, $fe54416e54b68053$var$ta = 60106, $fe54416e54b68053$var$ua = 60107, $fe54416e54b68053$var$wa = 60108, $fe54416e54b68053$var$xa = 60114, $fe54416e54b68053$var$ya = 60109, $fe54416e54b68053$var$za = 60110, $fe54416e54b68053$var$Aa = 60112, $fe54416e54b68053$var$Ba = 60113, $fe54416e54b68053$var$Ca = 60120, $fe54416e54b68053$var$Da = 60115, $fe54416e54b68053$var$Ea = 60116, $fe54416e54b68053$var$Fa = 60121, $fe54416e54b68053$var$Ga = 60128, $fe54416e54b68053$var$Ha = 60129, $fe54416e54b68053$var$Ia = 60130, $fe54416e54b68053$var$Ja = 60131;
if ("function" === typeof Symbol && Symbol.for) {
    var $fe54416e54b68053$var$E = Symbol.for;
    $fe54416e54b68053$var$sa = $fe54416e54b68053$var$E("react.element");
    $fe54416e54b68053$var$ta = $fe54416e54b68053$var$E("react.portal");
    $fe54416e54b68053$var$ua = $fe54416e54b68053$var$E("react.fragment");
    $fe54416e54b68053$var$wa = $fe54416e54b68053$var$E("react.strict_mode");
    $fe54416e54b68053$var$xa = $fe54416e54b68053$var$E("react.profiler");
    $fe54416e54b68053$var$ya = $fe54416e54b68053$var$E("react.provider");
    $fe54416e54b68053$var$za = $fe54416e54b68053$var$E("react.context");
    $fe54416e54b68053$var$Aa = $fe54416e54b68053$var$E("react.forward_ref");
    $fe54416e54b68053$var$Ba = $fe54416e54b68053$var$E("react.suspense");
    $fe54416e54b68053$var$Ca = $fe54416e54b68053$var$E("react.suspense_list");
    $fe54416e54b68053$var$Da = $fe54416e54b68053$var$E("react.memo");
    $fe54416e54b68053$var$Ea = $fe54416e54b68053$var$E("react.lazy");
    $fe54416e54b68053$var$Fa = $fe54416e54b68053$var$E("react.block");
    $fe54416e54b68053$var$E("react.scope");
    $fe54416e54b68053$var$Ga = $fe54416e54b68053$var$E("react.opaque.id");
    $fe54416e54b68053$var$Ha = $fe54416e54b68053$var$E("react.debug_trace_mode");
    $fe54416e54b68053$var$Ia = $fe54416e54b68053$var$E("react.offscreen");
    $fe54416e54b68053$var$Ja = $fe54416e54b68053$var$E("react.legacy_hidden");
}
var $fe54416e54b68053$var$Ka = "function" === typeof Symbol && Symbol.iterator;
function $fe54416e54b68053$var$La(a) {
    if (null === a || "object" !== typeof a) return null;
    a = $fe54416e54b68053$var$Ka && a[$fe54416e54b68053$var$Ka] || a["@@iterator"];
    return "function" === typeof a ? a : null;
}
var $fe54416e54b68053$var$Ma;
function $fe54416e54b68053$var$Na(a) {
    if ((void 0) === $fe54416e54b68053$var$Ma) try {
        throw Error();
    } catch (c) {
        var b = c.stack.trim().match(/\n( *(at )?)/);
        $fe54416e54b68053$var$Ma = b && b[1] || "";
    }
    return "\n" + $fe54416e54b68053$var$Ma + a;
}
var $fe54416e54b68053$var$Oa = !1;
function $fe54416e54b68053$var$Pa(a, b) {
    if (!a || $fe54416e54b68053$var$Oa) return "";
    $fe54416e54b68053$var$Oa = !0;
    var c = Error.prepareStackTrace;
    Error.prepareStackTrace = void 0;
    try {
        if (b) {
            if (b = function() {
                throw Error();
            }, Object.defineProperty(b.prototype, "props", {
                set: function() {
                    throw Error();
                }
            }), "object" === typeof Reflect && Reflect.construct) {
                try {
                    Reflect.construct(b, []);
                } catch (k) {
                    var d = k;
                }
                Reflect.construct(a, [], b);
            } else {
                try {
                    b.call();
                } catch (k) {
                    d = k;
                }
                a.call(b.prototype);
            }
        } else {
            try {
                throw Error();
            } catch (k) {
                d = k;
            }
            a();
        }
    } catch (k) {
        if (k && d && "string" === typeof k.stack) {
            for(var e = k.stack.split("\n"), f = d.stack.split("\n"), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h];)h--;
            for(; 1 <= g && 0 <= h; g--, h--)if (e[g] !== f[h]) {
                if (1 !== g || 1 !== h) {
                    do if (g--, h--, 0 > h || e[g] !== f[h]) return "\n" + e[g].replace(" at new ", " at ");
                    while (1 <= g && 0 <= h)
                }
                break;
            }
        }
    } finally{
        $fe54416e54b68053$var$Oa = !1, Error.prepareStackTrace = c;
    }
    return (a = a ? a.displayName || a.name : "") ? $fe54416e54b68053$var$Na(a) : "";
}
function $fe54416e54b68053$var$Qa(a) {
    switch(a.tag){
        case 5:
            return $fe54416e54b68053$var$Na(a.type);
        case 16:
            return $fe54416e54b68053$var$Na("Lazy");
        case 13:
            return $fe54416e54b68053$var$Na("Suspense");
        case 19:
            return $fe54416e54b68053$var$Na("SuspenseList");
        case 0:
        case 2:
        case 15:
            return a = $fe54416e54b68053$var$Pa(a.type, !1), a;
        case 11:
            return a = $fe54416e54b68053$var$Pa(a.type.render, !1), a;
        case 22:
            return a = $fe54416e54b68053$var$Pa(a.type._render, !1), a;
        case 1:
            return a = $fe54416e54b68053$var$Pa(a.type, !0), a;
        default:
            return "";
    }
}
function $fe54416e54b68053$var$Ra(a) {
    if (null == a) return null;
    if ("function" === typeof a) return a.displayName || a.name || null;
    if ("string" === typeof a) return a;
    switch(a){
        case $fe54416e54b68053$var$ua:
            return "Fragment";
        case $fe54416e54b68053$var$ta:
            return "Portal";
        case $fe54416e54b68053$var$xa:
            return "Profiler";
        case $fe54416e54b68053$var$wa:
            return "StrictMode";
        case $fe54416e54b68053$var$Ba:
            return "Suspense";
        case $fe54416e54b68053$var$Ca:
            return "SuspenseList";
    }
    if ("object" === typeof a) switch(a.$$typeof){
        case $fe54416e54b68053$var$za:
            return (a.displayName || "Context") + ".Consumer";
        case $fe54416e54b68053$var$ya:
            return (a._context.displayName || "Context") + ".Provider";
        case $fe54416e54b68053$var$Aa:
            var b = a.render;
            b = b.displayName || b.name || "";
            return a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");
        case $fe54416e54b68053$var$Da:
            return $fe54416e54b68053$var$Ra(a.type);
        case $fe54416e54b68053$var$Fa:
            return $fe54416e54b68053$var$Ra(a._render);
        case $fe54416e54b68053$var$Ea:
            b = a._payload;
            a = a._init;
            try {
                return $fe54416e54b68053$var$Ra(a(b));
            } catch (c) {
            }
    }
    return null;
}
function $fe54416e54b68053$var$Sa(a) {
    switch(typeof a){
        case "boolean":
        case "number":
        case "object":
        case "string":
        case "undefined":
            return a;
        default:
            return "";
    }
}
function $fe54416e54b68053$var$Ta(a) {
    var b = a.type;
    return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
}
function $fe54416e54b68053$var$Ua(a) {
    var b = $fe54416e54b68053$var$Ta(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
    if (!a.hasOwnProperty(b) && "undefined" !== typeof c && "function" === typeof c.get && "function" === typeof c.set) {
        var e = c.get, f = c.set;
        Object.defineProperty(a, b, {
            configurable: !0,
            get: function() {
                return e.call(this);
            },
            set: function(a1) {
                d = "" + a1;
                f.call(this, a1);
            }
        });
        Object.defineProperty(a, b, {
            enumerable: c.enumerable
        });
        return {
            getValue: function() {
                return d;
            },
            setValue: function(a1) {
                d = "" + a1;
            },
            stopTracking: function() {
                a._valueTracker = null;
                delete a[b];
            }
        };
    }
}
function $fe54416e54b68053$var$Va(a) {
    a._valueTracker || (a._valueTracker = $fe54416e54b68053$var$Ua(a));
}
function $fe54416e54b68053$var$Wa(a) {
    if (!a) return !1;
    var b = a._valueTracker;
    if (!b) return !0;
    var c = b.getValue();
    var d = "";
    a && (d = $fe54416e54b68053$var$Ta(a) ? a.checked ? "true" : "false" : a.value);
    a = d;
    return a !== c ? (b.setValue(a), !0) : !1;
}
function $fe54416e54b68053$var$Xa(a) {
    a = a || ("undefined" !== typeof document ? document : void 0);
    if ("undefined" === typeof a) return null;
    try {
        return a.activeElement || a.body;
    } catch (b) {
        return a.body;
    }
}
function $fe54416e54b68053$var$Ya(a, b) {
    var c = b.checked;
    return $lz3cj({
    }, b, {
        defaultChecked: void 0,
        defaultValue: void 0,
        value: void 0,
        checked: null != c ? c : a._wrapperState.initialChecked
    });
}
function $fe54416e54b68053$var$Za(a, b) {
    var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
    c = $fe54416e54b68053$var$Sa(null != b.value ? b.value : c);
    a._wrapperState = {
        initialChecked: d,
        initialValue: c,
        controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
    };
}
function $fe54416e54b68053$var$$a(a, b) {
    b = b.checked;
    null != b && $fe54416e54b68053$var$qa(a, "checked", b, !1);
}
function $fe54416e54b68053$var$ab(a, b) {
    $fe54416e54b68053$var$$a(a, b);
    var c = $fe54416e54b68053$var$Sa(b.value), d = b.type;
    if (null != c) {
        if ("number" === d) {
            if (0 === c && "" === a.value || a.value != c) a.value = "" + c;
        } else a.value !== "" + c && (a.value = "" + c);
    } else if ("submit" === d || "reset" === d) {
        a.removeAttribute("value");
        return;
    }
    b.hasOwnProperty("value") ? $fe54416e54b68053$var$bb(a, b.type, c) : b.hasOwnProperty("defaultValue") && $fe54416e54b68053$var$bb(a, b.type, $fe54416e54b68053$var$Sa(b.defaultValue));
    null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
}
function $fe54416e54b68053$var$cb(a, b, c) {
    if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
        var d = b.type;
        if (!("submit" !== d && "reset" !== d || (void 0) !== b.value && null !== b.value)) return;
        b = "" + a._wrapperState.initialValue;
        c || b === a.value || (a.value = b);
        a.defaultValue = b;
    }
    c = a.name;
    "" !== c && (a.name = "");
    a.defaultChecked = !!a._wrapperState.initialChecked;
    "" !== c && (a.name = c);
}
function $fe54416e54b68053$var$bb(a, b, c) {
    if ("number" !== b || $fe54416e54b68053$var$Xa(a.ownerDocument) !== a) null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c);
}
function $fe54416e54b68053$var$db(a) {
    var b = "";
    $gctDA.Children.forEach(a, function(a1) {
        null != a1 && (b += a1);
    });
    return b;
}
function $fe54416e54b68053$var$eb(a, b) {
    a = $lz3cj({
        children: void 0
    }, b);
    if (b = $fe54416e54b68053$var$db(b.children)) a.children = b;
    return a;
}
function $fe54416e54b68053$var$fb(a, b, c, d) {
    a = a.options;
    if (b) {
        b = {
        };
        for(var e = 0; e < c.length; e++)b["$" + c[e]] = !0;
        for(c = 0; c < a.length; c++)e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);
    } else {
        c = "" + $fe54416e54b68053$var$Sa(c);
        b = null;
        for(e = 0; e < a.length; e++){
            if (a[e].value === c) {
                a[e].selected = !0;
                d && (a[e].defaultSelected = !0);
                return;
            }
            null !== b || a[e].disabled || (b = a[e]);
        }
        null !== b && (b.selected = !0);
    }
}
function $fe54416e54b68053$var$gb(a, b) {
    if (null != b.dangerouslySetInnerHTML) throw Error($fe54416e54b68053$var$y(91));
    return $lz3cj({
    }, b, {
        value: void 0,
        defaultValue: void 0,
        children: "" + a._wrapperState.initialValue
    });
}
function $fe54416e54b68053$var$hb(a, b) {
    var c = b.value;
    if (null == c) {
        c = b.children;
        b = b.defaultValue;
        if (null != c) {
            if (null != b) throw Error($fe54416e54b68053$var$y(92));
            if (Array.isArray(c)) {
                if (!(1 >= c.length)) throw Error($fe54416e54b68053$var$y(93));
                c = c[0];
            }
            b = c;
        }
        null == b && (b = "");
        c = b;
    }
    a._wrapperState = {
        initialValue: $fe54416e54b68053$var$Sa(c)
    };
}
function $fe54416e54b68053$var$ib(a, b) {
    var c = $fe54416e54b68053$var$Sa(b.value), d = $fe54416e54b68053$var$Sa(b.defaultValue);
    null != c && (c = "" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));
    null != d && (a.defaultValue = "" + d);
}
function $fe54416e54b68053$var$jb(a) {
    var b = a.textContent;
    b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
}
var $fe54416e54b68053$var$kb = {
    html: "http://www.w3.org/1999/xhtml",
    mathml: "http://www.w3.org/1998/Math/MathML",
    svg: "http://www.w3.org/2000/svg"
};
function $fe54416e54b68053$var$lb(a) {
    switch(a){
        case "svg":
            return "http://www.w3.org/2000/svg";
        case "math":
            return "http://www.w3.org/1998/Math/MathML";
        default:
            return "http://www.w3.org/1999/xhtml";
    }
}
function $fe54416e54b68053$var$mb(a, b) {
    return null == a || "http://www.w3.org/1999/xhtml" === a ? $fe54416e54b68053$var$lb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
}
var $fe54416e54b68053$var$nb, $fe54416e54b68053$var$ob = function(a) {
    return "undefined" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
        MSApp.execUnsafeLocalFunction(function() {
            return a(b, c, d, e);
        });
    } : a;
}(function(a, b) {
    if (a.namespaceURI !== $fe54416e54b68053$var$kb.svg || "innerHTML" in a) a.innerHTML = b;
    else {
        $fe54416e54b68053$var$nb = $fe54416e54b68053$var$nb || document.createElement("div");
        $fe54416e54b68053$var$nb.innerHTML = "<svg>" + b.valueOf().toString() + "</svg>";
        for(b = $fe54416e54b68053$var$nb.firstChild; a.firstChild;)a.removeChild(a.firstChild);
        for(; b.firstChild;)a.appendChild(b.firstChild);
    }
});
function $fe54416e54b68053$var$pb(a, b) {
    if (b) {
        var c = a.firstChild;
        if (c && c === a.lastChild && 3 === c.nodeType) {
            c.nodeValue = b;
            return;
        }
    }
    a.textContent = b;
}
var $fe54416e54b68053$var$qb = {
    animationIterationCount: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0
}, $fe54416e54b68053$var$rb = [
    "Webkit",
    "ms",
    "Moz",
    "O"
];
Object.keys($fe54416e54b68053$var$qb).forEach(function(a) {
    $fe54416e54b68053$var$rb.forEach(function(b) {
        b = b + a.charAt(0).toUpperCase() + a.substring(1);
        $fe54416e54b68053$var$qb[b] = $fe54416e54b68053$var$qb[a];
    });
});
function $fe54416e54b68053$var$sb(a, b, c) {
    return null == b || "boolean" === typeof b || "" === b ? "" : c || "number" !== typeof b || 0 === b || $fe54416e54b68053$var$qb.hasOwnProperty(a) && $fe54416e54b68053$var$qb[a] ? ("" + b).trim() : b + "px";
}
function $fe54416e54b68053$var$tb(a, b) {
    a = a.style;
    for(var c in b)if (b.hasOwnProperty(c)) {
        var d = 0 === c.indexOf("--"), e = $fe54416e54b68053$var$sb(c, b[c], d);
        "float" === c && (c = "cssFloat");
        d ? a.setProperty(c, e) : a[c] = e;
    }
}
var $fe54416e54b68053$var$ub = $lz3cj({
    menuitem: !0
}, {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0
});
function $fe54416e54b68053$var$vb(a, b) {
    if (b) {
        if ($fe54416e54b68053$var$ub[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error($fe54416e54b68053$var$y(137, a));
        if (null != b.dangerouslySetInnerHTML) {
            if (null != b.children) throw Error($fe54416e54b68053$var$y(60));
            if (!("object" === typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML)) throw Error($fe54416e54b68053$var$y(61));
        }
        if (null != b.style && "object" !== typeof b.style) throw Error($fe54416e54b68053$var$y(62));
    }
}
function $fe54416e54b68053$var$wb(a, b) {
    if (-1 === a.indexOf("-")) return "string" === typeof b.is;
    switch(a){
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
            return !1;
        default:
            return !0;
    }
}
function $fe54416e54b68053$var$xb(a) {
    a = a.target || a.srcElement || window;
    a.correspondingUseElement && (a = a.correspondingUseElement);
    return 3 === a.nodeType ? a.parentNode : a;
}
var $fe54416e54b68053$var$yb = null, $fe54416e54b68053$var$zb = null, $fe54416e54b68053$var$Ab = null;
function $fe54416e54b68053$var$Bb(a) {
    if (a = $fe54416e54b68053$var$Cb(a)) {
        if ("function" !== typeof $fe54416e54b68053$var$yb) throw Error($fe54416e54b68053$var$y(280));
        var b = a.stateNode;
        b && (b = $fe54416e54b68053$var$Db(b), $fe54416e54b68053$var$yb(a.stateNode, a.type, b));
    }
}
function $fe54416e54b68053$var$Eb(a) {
    $fe54416e54b68053$var$zb ? $fe54416e54b68053$var$Ab ? $fe54416e54b68053$var$Ab.push(a) : $fe54416e54b68053$var$Ab = [
        a
    ] : $fe54416e54b68053$var$zb = a;
}
function $fe54416e54b68053$var$Fb() {
    if ($fe54416e54b68053$var$zb) {
        var a = $fe54416e54b68053$var$zb, b = $fe54416e54b68053$var$Ab;
        $fe54416e54b68053$var$Ab = $fe54416e54b68053$var$zb = null;
        $fe54416e54b68053$var$Bb(a);
        if (b) for(a = 0; a < b.length; a++)$fe54416e54b68053$var$Bb(b[a]);
    }
}
function $fe54416e54b68053$var$Gb(a, b) {
    return a(b);
}
function $fe54416e54b68053$var$Hb(a, b, c, d, e) {
    return a(b, c, d, e);
}
function $fe54416e54b68053$var$Ib() {
}
var $fe54416e54b68053$var$Jb = $fe54416e54b68053$var$Gb, $fe54416e54b68053$var$Kb = !1, $fe54416e54b68053$var$Lb = !1;
function $fe54416e54b68053$var$Mb() {
    if (null !== $fe54416e54b68053$var$zb || null !== $fe54416e54b68053$var$Ab) $fe54416e54b68053$var$Ib(), $fe54416e54b68053$var$Fb();
}
function $fe54416e54b68053$var$Nb(a, b, c) {
    if ($fe54416e54b68053$var$Lb) return a(b, c);
    $fe54416e54b68053$var$Lb = !0;
    try {
        return $fe54416e54b68053$var$Jb(a, b, c);
    } finally{
        $fe54416e54b68053$var$Lb = !1, $fe54416e54b68053$var$Mb();
    }
}
function $fe54416e54b68053$var$Ob(a, b) {
    var c = a.stateNode;
    if (null === c) return null;
    var d = $fe54416e54b68053$var$Db(c);
    if (null === d) return null;
    c = d[b];
    a: switch(b){
        case "onClick":
        case "onClickCapture":
        case "onDoubleClick":
        case "onDoubleClickCapture":
        case "onMouseDown":
        case "onMouseDownCapture":
        case "onMouseMove":
        case "onMouseMoveCapture":
        case "onMouseUp":
        case "onMouseUpCapture":
        case "onMouseEnter":
            (d = !d.disabled) || (a = a.type, d = !("button" === a || "input" === a || "select" === a || "textarea" === a));
            a = !d;
            break a;
        default:
            a = !1;
    }
    if (a) return null;
    if (c && "function" !== typeof c) throw Error($fe54416e54b68053$var$y(231, b, typeof c));
    return c;
}
var $fe54416e54b68053$var$Pb = !1;
if ($fe54416e54b68053$var$fa) try {
    var $fe54416e54b68053$var$Qb = {
    };
    Object.defineProperty($fe54416e54b68053$var$Qb, "passive", {
        get: function() {
            $fe54416e54b68053$var$Pb = !0;
        }
    });
    window.addEventListener("test", $fe54416e54b68053$var$Qb, $fe54416e54b68053$var$Qb);
    window.removeEventListener("test", $fe54416e54b68053$var$Qb, $fe54416e54b68053$var$Qb);
} catch (a) {
    $fe54416e54b68053$var$Pb = !1;
}
function $fe54416e54b68053$var$Rb(a, b, c, d, e, f, g, h, k) {
    var l = Array.prototype.slice.call(arguments, 3);
    try {
        b.apply(c, l);
    } catch (n) {
        this.onError(n);
    }
}
var $fe54416e54b68053$var$Sb = !1, $fe54416e54b68053$var$Tb = null, $fe54416e54b68053$var$Ub = !1, $fe54416e54b68053$var$Vb = null, $fe54416e54b68053$var$Wb = {
    onError: function(a) {
        $fe54416e54b68053$var$Sb = !0;
        $fe54416e54b68053$var$Tb = a;
    }
};
function $fe54416e54b68053$var$Xb(a, b, c, d, e, f, g, h, k) {
    $fe54416e54b68053$var$Sb = !1;
    $fe54416e54b68053$var$Tb = null;
    $fe54416e54b68053$var$Rb.apply($fe54416e54b68053$var$Wb, arguments);
}
function $fe54416e54b68053$var$Yb(a, b, c, d, e, f, g, h, k) {
    $fe54416e54b68053$var$Xb.apply(this, arguments);
    if ($fe54416e54b68053$var$Sb) {
        if ($fe54416e54b68053$var$Sb) {
            var l = $fe54416e54b68053$var$Tb;
            $fe54416e54b68053$var$Sb = !1;
            $fe54416e54b68053$var$Tb = null;
        } else throw Error($fe54416e54b68053$var$y(198));
        $fe54416e54b68053$var$Ub || ($fe54416e54b68053$var$Ub = !0, $fe54416e54b68053$var$Vb = l);
    }
}
function $fe54416e54b68053$var$Zb(a) {
    var b = a, c = a;
    if (a.alternate) for(; b.return;)b = b.return;
    else {
        a = b;
        do b = a, 0 !== (b.flags & 1026) && (c = b.return), a = b.return;
        while (a)
    }
    return 3 === b.tag ? c : null;
}
function $fe54416e54b68053$var$$b(a) {
    if (13 === a.tag) {
        var b = a.memoizedState;
        null === b && (a = a.alternate, null !== a && (b = a.memoizedState));
        if (null !== b) return b.dehydrated;
    }
    return null;
}
function $fe54416e54b68053$var$ac(a) {
    if ($fe54416e54b68053$var$Zb(a) !== a) throw Error($fe54416e54b68053$var$y(188));
}
function $fe54416e54b68053$var$bc(a) {
    var b = a.alternate;
    if (!b) {
        b = $fe54416e54b68053$var$Zb(a);
        if (null === b) throw Error($fe54416e54b68053$var$y(188));
        return b !== a ? null : a;
    }
    for(var c = a, d = b;;){
        var e = c.return;
        if (null === e) break;
        var f = e.alternate;
        if (null === f) {
            d = e.return;
            if (null !== d) {
                c = d;
                continue;
            }
            break;
        }
        if (e.child === f.child) {
            for(f = e.child; f;){
                if (f === c) return $fe54416e54b68053$var$ac(e), a;
                if (f === d) return $fe54416e54b68053$var$ac(e), b;
                f = f.sibling;
            }
            throw Error($fe54416e54b68053$var$y(188));
        }
        if (c.return !== d.return) c = e, d = f;
        else {
            for(var g = !1, h = e.child; h;){
                if (h === c) {
                    g = !0;
                    c = e;
                    d = f;
                    break;
                }
                if (h === d) {
                    g = !0;
                    d = e;
                    c = f;
                    break;
                }
                h = h.sibling;
            }
            if (!g) {
                for(h = f.child; h;){
                    if (h === c) {
                        g = !0;
                        c = f;
                        d = e;
                        break;
                    }
                    if (h === d) {
                        g = !0;
                        d = f;
                        c = e;
                        break;
                    }
                    h = h.sibling;
                }
                if (!g) throw Error($fe54416e54b68053$var$y(189));
            }
        }
        if (c.alternate !== d) throw Error($fe54416e54b68053$var$y(190));
    }
    if (3 !== c.tag) throw Error($fe54416e54b68053$var$y(188));
    return c.stateNode.current === c ? a : b;
}
function $fe54416e54b68053$var$cc(a) {
    a = $fe54416e54b68053$var$bc(a);
    if (!a) return null;
    for(var b = a;;){
        if (5 === b.tag || 6 === b.tag) return b;
        if (b.child) b.child.return = b, b = b.child;
        else {
            if (b === a) break;
            for(; !b.sibling;){
                if (!b.return || b.return === a) return null;
                b = b.return;
            }
            b.sibling.return = b.return;
            b = b.sibling;
        }
    }
    return null;
}
function $fe54416e54b68053$var$dc(a, b) {
    for(var c = a.alternate; null !== b;){
        if (b === a || b === c) return !0;
        b = b.return;
    }
    return !1;
}
var $fe54416e54b68053$var$ec, $fe54416e54b68053$var$fc, $fe54416e54b68053$var$gc, $fe54416e54b68053$var$hc, $fe54416e54b68053$var$ic = !1, $fe54416e54b68053$var$jc = [], $fe54416e54b68053$var$kc = null, $fe54416e54b68053$var$lc = null, $fe54416e54b68053$var$mc = null, $fe54416e54b68053$var$nc = new Map, $fe54416e54b68053$var$oc = new Map, $fe54416e54b68053$var$pc = [], $fe54416e54b68053$var$qc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
function $fe54416e54b68053$var$rc(a, b, c, d, e) {
    return {
        blockedOn: a,
        domEventName: b,
        eventSystemFlags: c | 16,
        nativeEvent: e,
        targetContainers: [
            d
        ]
    };
}
function $fe54416e54b68053$var$sc(a, b) {
    switch(a){
        case "focusin":
        case "focusout":
            $fe54416e54b68053$var$kc = null;
            break;
        case "dragenter":
        case "dragleave":
            $fe54416e54b68053$var$lc = null;
            break;
        case "mouseover":
        case "mouseout":
            $fe54416e54b68053$var$mc = null;
            break;
        case "pointerover":
        case "pointerout":
            $fe54416e54b68053$var$nc.delete(b.pointerId);
            break;
        case "gotpointercapture":
        case "lostpointercapture":
            $fe54416e54b68053$var$oc.delete(b.pointerId);
    }
}
function $fe54416e54b68053$var$tc(a, b, c, d, e, f) {
    if (null === a || a.nativeEvent !== f) return a = $fe54416e54b68053$var$rc(b, c, d, e, f), null !== b && (b = $fe54416e54b68053$var$Cb(b), null !== b && $fe54416e54b68053$var$fc(b)), a;
    a.eventSystemFlags |= d;
    b = a.targetContainers;
    null !== e && -1 === b.indexOf(e) && b.push(e);
    return a;
}
function $fe54416e54b68053$var$uc(a, b, c, d, e) {
    switch(b){
        case "focusin":
            return $fe54416e54b68053$var$kc = $fe54416e54b68053$var$tc($fe54416e54b68053$var$kc, a, b, c, d, e), !0;
        case "dragenter":
            return $fe54416e54b68053$var$lc = $fe54416e54b68053$var$tc($fe54416e54b68053$var$lc, a, b, c, d, e), !0;
        case "mouseover":
            return $fe54416e54b68053$var$mc = $fe54416e54b68053$var$tc($fe54416e54b68053$var$mc, a, b, c, d, e), !0;
        case "pointerover":
            var f = e.pointerId;
            $fe54416e54b68053$var$nc.set(f, $fe54416e54b68053$var$tc($fe54416e54b68053$var$nc.get(f) || null, a, b, c, d, e));
            return !0;
        case "gotpointercapture":
            return f = e.pointerId, $fe54416e54b68053$var$oc.set(f, $fe54416e54b68053$var$tc($fe54416e54b68053$var$oc.get(f) || null, a, b, c, d, e)), !0;
    }
    return !1;
}
function $fe54416e54b68053$var$vc(a) {
    var b = $fe54416e54b68053$var$wc(a.target);
    if (null !== b) {
        var c = $fe54416e54b68053$var$Zb(b);
        if (null !== c) {
            if (b = c.tag, 13 === b) {
                if (b = $fe54416e54b68053$var$$b(c), null !== b) {
                    a.blockedOn = b;
                    $fe54416e54b68053$var$hc(a.lanePriority, function() {
                        $eZpbl.unstable_runWithPriority(a.priority, function() {
                            $fe54416e54b68053$var$gc(c);
                        });
                    });
                    return;
                }
            } else if (3 === b && c.stateNode.hydrate) {
                a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null;
                return;
            }
        }
    }
    a.blockedOn = null;
}
function $fe54416e54b68053$var$xc(a) {
    if (null !== a.blockedOn) return !1;
    for(var b = a.targetContainers; 0 < b.length;){
        var c = $fe54416e54b68053$var$yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
        if (null !== c) return b = $fe54416e54b68053$var$Cb(c), null !== b && $fe54416e54b68053$var$fc(b), a.blockedOn = c, !1;
        b.shift();
    }
    return !0;
}
function $fe54416e54b68053$var$zc(a, b, c) {
    $fe54416e54b68053$var$xc(a) && c.delete(b);
}
function $fe54416e54b68053$var$Ac() {
    for($fe54416e54b68053$var$ic = !1; 0 < $fe54416e54b68053$var$jc.length;){
        var a = $fe54416e54b68053$var$jc[0];
        if (null !== a.blockedOn) {
            a = $fe54416e54b68053$var$Cb(a.blockedOn);
            null !== a && $fe54416e54b68053$var$ec(a);
            break;
        }
        for(var b = a.targetContainers; 0 < b.length;){
            var c = $fe54416e54b68053$var$yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent);
            if (null !== c) {
                a.blockedOn = c;
                break;
            }
            b.shift();
        }
        null === a.blockedOn && $fe54416e54b68053$var$jc.shift();
    }
    null !== $fe54416e54b68053$var$kc && $fe54416e54b68053$var$xc($fe54416e54b68053$var$kc) && ($fe54416e54b68053$var$kc = null);
    null !== $fe54416e54b68053$var$lc && $fe54416e54b68053$var$xc($fe54416e54b68053$var$lc) && ($fe54416e54b68053$var$lc = null);
    null !== $fe54416e54b68053$var$mc && $fe54416e54b68053$var$xc($fe54416e54b68053$var$mc) && ($fe54416e54b68053$var$mc = null);
    $fe54416e54b68053$var$nc.forEach($fe54416e54b68053$var$zc);
    $fe54416e54b68053$var$oc.forEach($fe54416e54b68053$var$zc);
}
function $fe54416e54b68053$var$Bc(a, b) {
    a.blockedOn === b && (a.blockedOn = null, $fe54416e54b68053$var$ic || ($fe54416e54b68053$var$ic = !0, $eZpbl.unstable_scheduleCallback($eZpbl.unstable_NormalPriority, $fe54416e54b68053$var$Ac)));
}
function $fe54416e54b68053$var$Cc(a) {
    function b(b1) {
        return $fe54416e54b68053$var$Bc(b1, a);
    }
    if (0 < $fe54416e54b68053$var$jc.length) {
        $fe54416e54b68053$var$Bc($fe54416e54b68053$var$jc[0], a);
        for(var c = 1; c < $fe54416e54b68053$var$jc.length; c++){
            var d = $fe54416e54b68053$var$jc[c];
            d.blockedOn === a && (d.blockedOn = null);
        }
    }
    null !== $fe54416e54b68053$var$kc && $fe54416e54b68053$var$Bc($fe54416e54b68053$var$kc, a);
    null !== $fe54416e54b68053$var$lc && $fe54416e54b68053$var$Bc($fe54416e54b68053$var$lc, a);
    null !== $fe54416e54b68053$var$mc && $fe54416e54b68053$var$Bc($fe54416e54b68053$var$mc, a);
    $fe54416e54b68053$var$nc.forEach(b);
    $fe54416e54b68053$var$oc.forEach(b);
    for(c = 0; c < $fe54416e54b68053$var$pc.length; c++)d = $fe54416e54b68053$var$pc[c], d.blockedOn === a && (d.blockedOn = null);
    for(; 0 < $fe54416e54b68053$var$pc.length && (c = $fe54416e54b68053$var$pc[0], null === c.blockedOn);)$fe54416e54b68053$var$vc(c), null === c.blockedOn && $fe54416e54b68053$var$pc.shift();
}
function $fe54416e54b68053$var$Dc(a, b) {
    var c = {
    };
    c[a.toLowerCase()] = b.toLowerCase();
    c["Webkit" + a] = "webkit" + b;
    c["Moz" + a] = "moz" + b;
    return c;
}
var $fe54416e54b68053$var$Ec = {
    animationend: $fe54416e54b68053$var$Dc("Animation", "AnimationEnd"),
    animationiteration: $fe54416e54b68053$var$Dc("Animation", "AnimationIteration"),
    animationstart: $fe54416e54b68053$var$Dc("Animation", "AnimationStart"),
    transitionend: $fe54416e54b68053$var$Dc("Transition", "TransitionEnd")
}, $fe54416e54b68053$var$Fc = {
}, $fe54416e54b68053$var$Gc = {
};
$fe54416e54b68053$var$fa && ($fe54416e54b68053$var$Gc = document.createElement("div").style, "AnimationEvent" in window || (delete $fe54416e54b68053$var$Ec.animationend.animation, delete $fe54416e54b68053$var$Ec.animationiteration.animation, delete $fe54416e54b68053$var$Ec.animationstart.animation), "TransitionEvent" in window || delete $fe54416e54b68053$var$Ec.transitionend.transition);
function $fe54416e54b68053$var$Hc(a) {
    if ($fe54416e54b68053$var$Fc[a]) return $fe54416e54b68053$var$Fc[a];
    if (!$fe54416e54b68053$var$Ec[a]) return a;
    var b = $fe54416e54b68053$var$Ec[a], c;
    for(c in b)if (b.hasOwnProperty(c) && c in $fe54416e54b68053$var$Gc) return $fe54416e54b68053$var$Fc[a] = b[c];
    return a;
}
var $fe54416e54b68053$var$Ic = $fe54416e54b68053$var$Hc("animationend"), $fe54416e54b68053$var$Jc = $fe54416e54b68053$var$Hc("animationiteration"), $fe54416e54b68053$var$Kc = $fe54416e54b68053$var$Hc("animationstart"), $fe54416e54b68053$var$Lc = $fe54416e54b68053$var$Hc("transitionend"), $fe54416e54b68053$var$Mc = new Map, $fe54416e54b68053$var$Nc = new Map, $fe54416e54b68053$var$Oc = [
    "abort",
    "abort",
    $fe54416e54b68053$var$Ic,
    "animationEnd",
    $fe54416e54b68053$var$Jc,
    "animationIteration",
    $fe54416e54b68053$var$Kc,
    "animationStart",
    "canplay",
    "canPlay",
    "canplaythrough",
    "canPlayThrough",
    "durationchange",
    "durationChange",
    "emptied",
    "emptied",
    "encrypted",
    "encrypted",
    "ended",
    "ended",
    "error",
    "error",
    "gotpointercapture",
    "gotPointerCapture",
    "load",
    "load",
    "loadeddata",
    "loadedData",
    "loadedmetadata",
    "loadedMetadata",
    "loadstart",
    "loadStart",
    "lostpointercapture",
    "lostPointerCapture",
    "playing",
    "playing",
    "progress",
    "progress",
    "seeking",
    "seeking",
    "stalled",
    "stalled",
    "suspend",
    "suspend",
    "timeupdate",
    "timeUpdate",
    $fe54416e54b68053$var$Lc,
    "transitionEnd",
    "waiting",
    "waiting"
];
function $fe54416e54b68053$var$Pc(a, b) {
    for(var c = 0; c < a.length; c += 2){
        var d = a[c], e = a[c + 1];
        e = "on" + (e[0].toUpperCase() + e.slice(1));
        $fe54416e54b68053$var$Nc.set(d, b);
        $fe54416e54b68053$var$Mc.set(d, e);
        $fe54416e54b68053$var$da(e, [
            d
        ]);
    }
}
var $fe54416e54b68053$var$Qc = $eZpbl.unstable_now;
$fe54416e54b68053$var$Qc();
var $fe54416e54b68053$var$F = 8;
function $fe54416e54b68053$var$Rc(a) {
    if (0 !== (1 & a)) return $fe54416e54b68053$var$F = 15, 1;
    if (0 !== (2 & a)) return $fe54416e54b68053$var$F = 14, 2;
    if (0 !== (4 & a)) return $fe54416e54b68053$var$F = 13, 4;
    var b = 24 & a;
    if (0 !== b) return $fe54416e54b68053$var$F = 12, b;
    if (0 !== (a & 32)) return $fe54416e54b68053$var$F = 11, 32;
    b = 192 & a;
    if (0 !== b) return $fe54416e54b68053$var$F = 10, b;
    if (0 !== (a & 256)) return $fe54416e54b68053$var$F = 9, 256;
    b = 3584 & a;
    if (0 !== b) return $fe54416e54b68053$var$F = 8, b;
    if (0 !== (a & 4096)) return $fe54416e54b68053$var$F = 7, 4096;
    b = 4186112 & a;
    if (0 !== b) return $fe54416e54b68053$var$F = 6, b;
    b = 62914560 & a;
    if (0 !== b) return $fe54416e54b68053$var$F = 5, b;
    if (a & 67108864) return $fe54416e54b68053$var$F = 4, 67108864;
    if (0 !== (a & 134217728)) return $fe54416e54b68053$var$F = 3, 134217728;
    b = 805306368 & a;
    if (0 !== b) return $fe54416e54b68053$var$F = 2, b;
    if (0 !== (1073741824 & a)) return $fe54416e54b68053$var$F = 1, 1073741824;
    $fe54416e54b68053$var$F = 8;
    return a;
}
function $fe54416e54b68053$var$Sc(a) {
    switch(a){
        case 99:
            return 15;
        case 98:
            return 10;
        case 97:
        case 96:
            return 8;
        case 95:
            return 2;
        default:
            return 0;
    }
}
function $fe54416e54b68053$var$Tc(a) {
    switch(a){
        case 15:
        case 14:
            return 99;
        case 13:
        case 12:
        case 11:
        case 10:
            return 98;
        case 9:
        case 8:
        case 7:
        case 6:
        case 4:
        case 5:
            return 97;
        case 3:
        case 2:
        case 1:
            return 95;
        case 0:
            return 90;
        default:
            throw Error($fe54416e54b68053$var$y(358, a));
    }
}
function $fe54416e54b68053$var$Uc(a, b) {
    var c = a.pendingLanes;
    if (0 === c) return $fe54416e54b68053$var$F = 0;
    var d = 0, e = 0, f = a.expiredLanes, g = a.suspendedLanes, h = a.pingedLanes;
    if (0 !== f) d = f, e = $fe54416e54b68053$var$F = 15;
    else if (f = c & 134217727, 0 !== f) {
        var k = f & ~g;
        0 !== k ? (d = $fe54416e54b68053$var$Rc(k), e = $fe54416e54b68053$var$F) : (h &= f, 0 !== h && (d = $fe54416e54b68053$var$Rc(h), e = $fe54416e54b68053$var$F));
    } else f = c & ~g, 0 !== f ? (d = $fe54416e54b68053$var$Rc(f), e = $fe54416e54b68053$var$F) : 0 !== h && (d = $fe54416e54b68053$var$Rc(h), e = $fe54416e54b68053$var$F);
    if (0 === d) return 0;
    d = 31 - $fe54416e54b68053$var$Vc(d);
    d = c & ((0 > d ? 0 : 1 << d) << 1) - 1;
    if (0 !== b && b !== d && 0 === (b & g)) {
        $fe54416e54b68053$var$Rc(b);
        if (e <= $fe54416e54b68053$var$F) return b;
        $fe54416e54b68053$var$F = e;
    }
    b = a.entangledLanes;
    if (0 !== b) for(a = a.entanglements, b &= d; 0 < b;)c = 31 - $fe54416e54b68053$var$Vc(b), e = 1 << c, d |= a[c], b &= ~e;
    return d;
}
function $fe54416e54b68053$var$Wc(a) {
    a = a.pendingLanes & -1073741825;
    return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0;
}
function $fe54416e54b68053$var$Xc(a, b) {
    switch(a){
        case 15:
            return 1;
        case 14:
            return 2;
        case 12:
            return a = $fe54416e54b68053$var$Yc(24 & ~b), 0 === a ? $fe54416e54b68053$var$Xc(10, b) : a;
        case 10:
            return a = $fe54416e54b68053$var$Yc(192 & ~b), 0 === a ? $fe54416e54b68053$var$Xc(8, b) : a;
        case 8:
            return a = $fe54416e54b68053$var$Yc(3584 & ~b), 0 === a && (a = $fe54416e54b68053$var$Yc(4186112 & ~b), 0 === a && (a = 512)), a;
        case 2:
            return b = $fe54416e54b68053$var$Yc(805306368 & ~b), 0 === b && (b = 268435456), b;
    }
    throw Error($fe54416e54b68053$var$y(358, a));
}
function $fe54416e54b68053$var$Yc(a) {
    return a & -a;
}
function $fe54416e54b68053$var$Zc(a) {
    for(var b = [], c = 0; 31 > c; c++)b.push(a);
    return b;
}
function $fe54416e54b68053$var$$c(a, b, c) {
    a.pendingLanes |= b;
    var d = b - 1;
    a.suspendedLanes &= d;
    a.pingedLanes &= d;
    a = a.eventTimes;
    b = 31 - $fe54416e54b68053$var$Vc(b);
    a[b] = c;
}
var $fe54416e54b68053$var$Vc = Math.clz32 ? Math.clz32 : $fe54416e54b68053$var$ad, $fe54416e54b68053$var$bd = Math.log, $fe54416e54b68053$var$cd = Math.LN2;
function $fe54416e54b68053$var$ad(a) {
    return 0 === a ? 32 : 31 - ($fe54416e54b68053$var$bd(a) / $fe54416e54b68053$var$cd | 0) | 0;
}
var $fe54416e54b68053$var$dd = $eZpbl.unstable_UserBlockingPriority, $fe54416e54b68053$var$ed = $eZpbl.unstable_runWithPriority, $fe54416e54b68053$var$fd = !0;
function $fe54416e54b68053$var$gd(a, b, c, d) {
    $fe54416e54b68053$var$Kb || $fe54416e54b68053$var$Ib();
    var e = $fe54416e54b68053$var$hd, f = $fe54416e54b68053$var$Kb;
    $fe54416e54b68053$var$Kb = !0;
    try {
        $fe54416e54b68053$var$Hb(e, a, b, c, d);
    } finally{
        ($fe54416e54b68053$var$Kb = f) || $fe54416e54b68053$var$Mb();
    }
}
function $fe54416e54b68053$var$id(a, b, c, d) {
    $fe54416e54b68053$var$ed($fe54416e54b68053$var$dd, $fe54416e54b68053$var$hd.bind(null, a, b, c, d));
}
function $fe54416e54b68053$var$hd(a, b, c, d) {
    if ($fe54416e54b68053$var$fd) {
        var e;
        if ((e = 0 === (b & 4)) && 0 < $fe54416e54b68053$var$jc.length && -1 < $fe54416e54b68053$var$qc.indexOf(a)) a = $fe54416e54b68053$var$rc(null, a, b, c, d), $fe54416e54b68053$var$jc.push(a);
        else {
            var f = $fe54416e54b68053$var$yc(a, b, c, d);
            if (null === f) e && $fe54416e54b68053$var$sc(a, d);
            else {
                if (e) {
                    if (-1 < $fe54416e54b68053$var$qc.indexOf(a)) {
                        a = $fe54416e54b68053$var$rc(f, a, b, c, d);
                        $fe54416e54b68053$var$jc.push(a);
                        return;
                    }
                    if ($fe54416e54b68053$var$uc(f, a, b, c, d)) return;
                    $fe54416e54b68053$var$sc(a, d);
                }
                $fe54416e54b68053$var$jd(a, b, d, null, c);
            }
        }
    }
}
function $fe54416e54b68053$var$yc(a, b, c, d) {
    var e = $fe54416e54b68053$var$xb(d);
    e = $fe54416e54b68053$var$wc(e);
    if (null !== e) {
        var f = $fe54416e54b68053$var$Zb(e);
        if (null === f) e = null;
        else {
            var g = f.tag;
            if (13 === g) {
                e = $fe54416e54b68053$var$$b(f);
                if (null !== e) return e;
                e = null;
            } else if (3 === g) {
                if (f.stateNode.hydrate) return 3 === f.tag ? f.stateNode.containerInfo : null;
                e = null;
            } else f !== e && (e = null);
        }
    }
    $fe54416e54b68053$var$jd(a, b, d, e, c);
    return null;
}
var $fe54416e54b68053$var$kd = null, $fe54416e54b68053$var$ld = null, $fe54416e54b68053$var$md = null;
function $fe54416e54b68053$var$nd() {
    if ($fe54416e54b68053$var$md) return $fe54416e54b68053$var$md;
    var a, b = $fe54416e54b68053$var$ld, c = b.length, d, e = "value" in $fe54416e54b68053$var$kd ? $fe54416e54b68053$var$kd.value : $fe54416e54b68053$var$kd.textContent, f = e.length;
    for(a = 0; a < c && b[a] === e[a]; a++);
    var g = c - a;
    for(d = 1; d <= g && b[c - d] === e[f - d]; d++);
    return $fe54416e54b68053$var$md = e.slice(a, 1 < d ? 1 - d : void 0);
}
function $fe54416e54b68053$var$od(a) {
    var b = a.keyCode;
    "charCode" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;
    10 === a && (a = 13);
    return 32 <= a || 13 === a ? a : 0;
}
function $fe54416e54b68053$var$pd() {
    return !0;
}
function $fe54416e54b68053$var$qd() {
    return !1;
}
function $fe54416e54b68053$var$rd(a) {
    function b(b1, d, e, f, g) {
        this._reactName = b1;
        this._targetInst = e;
        this.type = d;
        this.nativeEvent = f;
        this.target = g;
        this.currentTarget = null;
        for(var c in a)a.hasOwnProperty(c) && (b1 = a[c], this[c] = b1 ? b1(f) : f[c]);
        this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? $fe54416e54b68053$var$pd : $fe54416e54b68053$var$qd;
        this.isPropagationStopped = $fe54416e54b68053$var$qd;
        return this;
    }
    $lz3cj(b.prototype, {
        preventDefault: function() {
            this.defaultPrevented = !0;
            var a1 = this.nativeEvent;
            a1 && (a1.preventDefault ? a1.preventDefault() : "unknown" !== typeof a1.returnValue && (a1.returnValue = !1), this.isDefaultPrevented = $fe54416e54b68053$var$pd);
        },
        stopPropagation: function() {
            var a1 = this.nativeEvent;
            a1 && (a1.stopPropagation ? a1.stopPropagation() : "unknown" !== typeof a1.cancelBubble && (a1.cancelBubble = !0), this.isPropagationStopped = $fe54416e54b68053$var$pd);
        },
        persist: function() {
        },
        isPersistent: $fe54416e54b68053$var$pd
    });
    return b;
}
var $fe54416e54b68053$var$sd = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function(a) {
        return a.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0
}, $fe54416e54b68053$var$td = $fe54416e54b68053$var$rd($fe54416e54b68053$var$sd), $fe54416e54b68053$var$ud = $lz3cj({
}, $fe54416e54b68053$var$sd, {
    view: 0,
    detail: 0
}), $fe54416e54b68053$var$vd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$ud), $fe54416e54b68053$var$wd, $fe54416e54b68053$var$xd, $fe54416e54b68053$var$yd, $fe54416e54b68053$var$Ad = $lz3cj({
}, $fe54416e54b68053$var$ud, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: $fe54416e54b68053$var$zd,
    button: 0,
    buttons: 0,
    relatedTarget: function(a) {
        return (void 0) === a.relatedTarget ? a.fromElement === a.srcElement ? a.toElement : a.fromElement : a.relatedTarget;
    },
    movementX: function(a) {
        if ("movementX" in a) return a.movementX;
        a !== $fe54416e54b68053$var$yd && ($fe54416e54b68053$var$yd && "mousemove" === a.type ? ($fe54416e54b68053$var$wd = a.screenX - $fe54416e54b68053$var$yd.screenX, $fe54416e54b68053$var$xd = a.screenY - $fe54416e54b68053$var$yd.screenY) : $fe54416e54b68053$var$xd = $fe54416e54b68053$var$wd = 0, $fe54416e54b68053$var$yd = a);
        return $fe54416e54b68053$var$wd;
    },
    movementY: function(a) {
        return "movementY" in a ? a.movementY : $fe54416e54b68053$var$xd;
    }
}), $fe54416e54b68053$var$Bd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Ad), $fe54416e54b68053$var$Cd = $lz3cj({
}, $fe54416e54b68053$var$Ad, {
    dataTransfer: 0
}), $fe54416e54b68053$var$Dd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Cd), $fe54416e54b68053$var$Ed = $lz3cj({
}, $fe54416e54b68053$var$ud, {
    relatedTarget: 0
}), $fe54416e54b68053$var$Fd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Ed), $fe54416e54b68053$var$Gd = $lz3cj({
}, $fe54416e54b68053$var$sd, {
    animationName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), $fe54416e54b68053$var$Hd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Gd), $fe54416e54b68053$var$Id = $lz3cj({
}, $fe54416e54b68053$var$sd, {
    clipboardData: function(a) {
        return "clipboardData" in a ? a.clipboardData : window.clipboardData;
    }
}), $fe54416e54b68053$var$Jd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Id), $fe54416e54b68053$var$Kd = $lz3cj({
}, $fe54416e54b68053$var$sd, {
    data: 0
}), $fe54416e54b68053$var$Ld = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Kd), $fe54416e54b68053$var$Md = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified"
}, $fe54416e54b68053$var$Nd = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta"
}, $fe54416e54b68053$var$Od = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey"
};
function $fe54416e54b68053$var$Pd(a) {
    var b = this.nativeEvent;
    return b.getModifierState ? b.getModifierState(a) : (a = $fe54416e54b68053$var$Od[a]) ? !!b[a] : !1;
}
function $fe54416e54b68053$var$zd() {
    return $fe54416e54b68053$var$Pd;
}
var $fe54416e54b68053$var$Qd = $lz3cj({
}, $fe54416e54b68053$var$ud, {
    key: function(a) {
        if (a.key) {
            var b = $fe54416e54b68053$var$Md[a.key] || a.key;
            if ("Unidentified" !== b) return b;
        }
        return "keypress" === a.type ? (a = $fe54416e54b68053$var$od(a), 13 === a ? "Enter" : String.fromCharCode(a)) : "keydown" === a.type || "keyup" === a.type ? $fe54416e54b68053$var$Nd[a.keyCode] || "Unidentified" : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: $fe54416e54b68053$var$zd,
    charCode: function(a) {
        return "keypress" === a.type ? $fe54416e54b68053$var$od(a) : 0;
    },
    keyCode: function(a) {
        return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    },
    which: function(a) {
        return "keypress" === a.type ? $fe54416e54b68053$var$od(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
    }
}), $fe54416e54b68053$var$Rd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Qd), $fe54416e54b68053$var$Sd = $lz3cj({
}, $fe54416e54b68053$var$Ad, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0
}), $fe54416e54b68053$var$Td = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Sd), $fe54416e54b68053$var$Ud = $lz3cj({
}, $fe54416e54b68053$var$ud, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: $fe54416e54b68053$var$zd
}), $fe54416e54b68053$var$Vd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Ud), $fe54416e54b68053$var$Wd = $lz3cj({
}, $fe54416e54b68053$var$sd, {
    propertyName: 0,
    elapsedTime: 0,
    pseudoElement: 0
}), $fe54416e54b68053$var$Xd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Wd), $fe54416e54b68053$var$Yd = $lz3cj({
}, $fe54416e54b68053$var$Ad, {
    deltaX: function(a) {
        return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
    },
    deltaY: function(a) {
        return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
    },
    deltaZ: 0,
    deltaMode: 0
}), $fe54416e54b68053$var$Zd = $fe54416e54b68053$var$rd($fe54416e54b68053$var$Yd), $fe54416e54b68053$var$$d = [
    9,
    13,
    27,
    32
], $fe54416e54b68053$var$ae = $fe54416e54b68053$var$fa && "CompositionEvent" in window, $fe54416e54b68053$var$be = null;
$fe54416e54b68053$var$fa && "documentMode" in document && ($fe54416e54b68053$var$be = document.documentMode);
var $fe54416e54b68053$var$ce = $fe54416e54b68053$var$fa && "TextEvent" in window && !$fe54416e54b68053$var$be, $fe54416e54b68053$var$de = $fe54416e54b68053$var$fa && (!$fe54416e54b68053$var$ae || $fe54416e54b68053$var$be && 8 < $fe54416e54b68053$var$be && 11 >= $fe54416e54b68053$var$be), $fe54416e54b68053$var$ee = String.fromCharCode(32), $fe54416e54b68053$var$fe = !1;
function $fe54416e54b68053$var$ge(a, b) {
    switch(a){
        case "keyup":
            return -1 !== $fe54416e54b68053$var$$d.indexOf(b.keyCode);
        case "keydown":
            return 229 !== b.keyCode;
        case "keypress":
        case "mousedown":
        case "focusout":
            return !0;
        default:
            return !1;
    }
}
function $fe54416e54b68053$var$he(a) {
    a = a.detail;
    return "object" === typeof a && "data" in a ? a.data : null;
}
var $fe54416e54b68053$var$ie = !1;
function $fe54416e54b68053$var$je(a, b) {
    switch(a){
        case "compositionend":
            return $fe54416e54b68053$var$he(b);
        case "keypress":
            if (32 !== b.which) return null;
            $fe54416e54b68053$var$fe = !0;
            return $fe54416e54b68053$var$ee;
        case "textInput":
            return a = b.data, a === $fe54416e54b68053$var$ee && $fe54416e54b68053$var$fe ? null : a;
        default:
            return null;
    }
}
function $fe54416e54b68053$var$ke(a, b) {
    if ($fe54416e54b68053$var$ie) return "compositionend" === a || !$fe54416e54b68053$var$ae && $fe54416e54b68053$var$ge(a, b) ? (a = $fe54416e54b68053$var$nd(), $fe54416e54b68053$var$md = $fe54416e54b68053$var$ld = $fe54416e54b68053$var$kd = null, $fe54416e54b68053$var$ie = !1, a) : null;
    switch(a){
        case "paste":
            return null;
        case "keypress":
            if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
                if (b.char && 1 < b.char.length) return b.char;
                if (b.which) return String.fromCharCode(b.which);
            }
            return null;
        case "compositionend":
            return $fe54416e54b68053$var$de && "ko" !== b.locale ? null : b.data;
        default:
            return null;
    }
}
var $fe54416e54b68053$var$le = {
    color: !0,
    date: !0,
    datetime: !0,
    "datetime-local": !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0
};
function $fe54416e54b68053$var$me(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();
    return "input" === b ? !!$fe54416e54b68053$var$le[a.type] : "textarea" === b ? !0 : !1;
}
function $fe54416e54b68053$var$ne(a, b, c, d) {
    $fe54416e54b68053$var$Eb(d);
    b = $fe54416e54b68053$var$oe(b, "onChange");
    0 < b.length && (c = new $fe54416e54b68053$var$td("onChange", "change", null, c, d), a.push({
        event: c,
        listeners: b
    }));
}
var $fe54416e54b68053$var$pe = null, $fe54416e54b68053$var$qe = null;
function $fe54416e54b68053$var$re(a) {
    $fe54416e54b68053$var$se(a, 0);
}
function $fe54416e54b68053$var$te(a) {
    var b = $fe54416e54b68053$var$ue(a);
    if ($fe54416e54b68053$var$Wa(b)) return a;
}
function $fe54416e54b68053$var$ve(a, b) {
    if ("change" === a) return b;
}
var $fe54416e54b68053$var$we = !1;
if ($fe54416e54b68053$var$fa) {
    var $fe54416e54b68053$var$xe;
    if ($fe54416e54b68053$var$fa) {
        var $fe54416e54b68053$var$ye = "oninput" in document;
        if (!$fe54416e54b68053$var$ye) {
            var $fe54416e54b68053$var$ze = document.createElement("div");
            $fe54416e54b68053$var$ze.setAttribute("oninput", "return;");
            $fe54416e54b68053$var$ye = "function" === typeof $fe54416e54b68053$var$ze.oninput;
        }
        $fe54416e54b68053$var$xe = $fe54416e54b68053$var$ye;
    } else $fe54416e54b68053$var$xe = !1;
    $fe54416e54b68053$var$we = $fe54416e54b68053$var$xe && (!document.documentMode || 9 < document.documentMode);
}
function $fe54416e54b68053$var$Ae() {
    $fe54416e54b68053$var$pe && ($fe54416e54b68053$var$pe.detachEvent("onpropertychange", $fe54416e54b68053$var$Be), $fe54416e54b68053$var$qe = $fe54416e54b68053$var$pe = null);
}
function $fe54416e54b68053$var$Be(a) {
    if ("value" === a.propertyName && $fe54416e54b68053$var$te($fe54416e54b68053$var$qe)) {
        var b = [];
        $fe54416e54b68053$var$ne(b, $fe54416e54b68053$var$qe, a, $fe54416e54b68053$var$xb(a));
        a = $fe54416e54b68053$var$re;
        if ($fe54416e54b68053$var$Kb) a(b);
        else {
            $fe54416e54b68053$var$Kb = !0;
            try {
                $fe54416e54b68053$var$Gb(a, b);
            } finally{
                $fe54416e54b68053$var$Kb = !1, $fe54416e54b68053$var$Mb();
            }
        }
    }
}
function $fe54416e54b68053$var$Ce(a, b, c) {
    "focusin" === a ? ($fe54416e54b68053$var$Ae(), $fe54416e54b68053$var$pe = b, $fe54416e54b68053$var$qe = c, $fe54416e54b68053$var$pe.attachEvent("onpropertychange", $fe54416e54b68053$var$Be)) : "focusout" === a && $fe54416e54b68053$var$Ae();
}
function $fe54416e54b68053$var$De(a) {
    if ("selectionchange" === a || "keyup" === a || "keydown" === a) return $fe54416e54b68053$var$te($fe54416e54b68053$var$qe);
}
function $fe54416e54b68053$var$Ee(a, b) {
    if ("click" === a) return $fe54416e54b68053$var$te(b);
}
function $fe54416e54b68053$var$Fe(a, b) {
    if ("input" === a || "change" === a) return $fe54416e54b68053$var$te(b);
}
function $fe54416e54b68053$var$Ge(a, b) {
    return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;
}
var $fe54416e54b68053$var$He = "function" === typeof Object.is ? Object.is : $fe54416e54b68053$var$Ge, $fe54416e54b68053$var$Ie = Object.prototype.hasOwnProperty;
function $fe54416e54b68053$var$Je(a, b) {
    if ($fe54416e54b68053$var$He(a, b)) return !0;
    if ("object" !== typeof a || null === a || "object" !== typeof b || null === b) return !1;
    var c = Object.keys(a), d = Object.keys(b);
    if (c.length !== d.length) return !1;
    for(d = 0; d < c.length; d++)if (!$fe54416e54b68053$var$Ie.call(b, c[d]) || !$fe54416e54b68053$var$He(a[c[d]], b[c[d]])) return !1;
    return !0;
}
function $fe54416e54b68053$var$Ke(a) {
    for(; a && a.firstChild;)a = a.firstChild;
    return a;
}
function $fe54416e54b68053$var$Le(a, b) {
    var c = $fe54416e54b68053$var$Ke(a);
    a = 0;
    for(var d; c;){
        if (3 === c.nodeType) {
            d = a + c.textContent.length;
            if (a <= b && d >= b) return {
                node: c,
                offset: b - a
            };
            a = d;
        }
        a: {
            for(; c;){
                if (c.nextSibling) {
                    c = c.nextSibling;
                    break a;
                }
                c = c.parentNode;
            }
            c = void 0;
        }
        c = $fe54416e54b68053$var$Ke(c);
    }
}
function $fe54416e54b68053$var$Me(a, b) {
    return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? $fe54416e54b68053$var$Me(a, b.parentNode) : "contains" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;
}
function $fe54416e54b68053$var$Ne() {
    for(var a = window, b = $fe54416e54b68053$var$Xa(); b instanceof a.HTMLIFrameElement;){
        try {
            var c = "string" === typeof b.contentWindow.location.href;
        } catch (d) {
            c = !1;
        }
        if (c) a = b.contentWindow;
        else break;
        b = $fe54416e54b68053$var$Xa(a.document);
    }
    return b;
}
function $fe54416e54b68053$var$Oe(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase();
    return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
}
var $fe54416e54b68053$var$Pe = $fe54416e54b68053$var$fa && "documentMode" in document && 11 >= document.documentMode, $fe54416e54b68053$var$Qe = null, $fe54416e54b68053$var$Re = null, $fe54416e54b68053$var$Se = null, $fe54416e54b68053$var$Te = !1;
function $fe54416e54b68053$var$Ue(a, b, c) {
    var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument;
    $fe54416e54b68053$var$Te || null == $fe54416e54b68053$var$Qe || $fe54416e54b68053$var$Qe !== $fe54416e54b68053$var$Xa(d) || (d = $fe54416e54b68053$var$Qe, "selectionStart" in d && $fe54416e54b68053$var$Oe(d) ? d = {
        start: d.selectionStart,
        end: d.selectionEnd
    } : (d = (d.ownerDocument && d.ownerDocument.defaultView || window).getSelection(), d = {
        anchorNode: d.anchorNode,
        anchorOffset: d.anchorOffset,
        focusNode: d.focusNode,
        focusOffset: d.focusOffset
    }), $fe54416e54b68053$var$Se && $fe54416e54b68053$var$Je($fe54416e54b68053$var$Se, d) || ($fe54416e54b68053$var$Se = d, d = $fe54416e54b68053$var$oe($fe54416e54b68053$var$Re, "onSelect"), 0 < d.length && (b = new $fe54416e54b68053$var$td("onSelect", "select", null, b, c), a.push({
        event: b,
        listeners: d
    }), b.target = $fe54416e54b68053$var$Qe)));
}
$fe54416e54b68053$var$Pc("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "), 0);
$fe54416e54b68053$var$Pc("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "), 1);
$fe54416e54b68053$var$Pc($fe54416e54b68053$var$Oc, 2);
for(var $fe54416e54b68053$var$Ve = "change selectionchange textInput compositionstart compositionend compositionupdate".split(" "), $fe54416e54b68053$var$We = 0; $fe54416e54b68053$var$We < $fe54416e54b68053$var$Ve.length; $fe54416e54b68053$var$We++)$fe54416e54b68053$var$Nc.set($fe54416e54b68053$var$Ve[$fe54416e54b68053$var$We], 0);
$fe54416e54b68053$var$ea("onMouseEnter", [
    "mouseout",
    "mouseover"
]);
$fe54416e54b68053$var$ea("onMouseLeave", [
    "mouseout",
    "mouseover"
]);
$fe54416e54b68053$var$ea("onPointerEnter", [
    "pointerout",
    "pointerover"
]);
$fe54416e54b68053$var$ea("onPointerLeave", [
    "pointerout",
    "pointerover"
]);
$fe54416e54b68053$var$da("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
$fe54416e54b68053$var$da("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
$fe54416e54b68053$var$da("onBeforeInput", [
    "compositionend",
    "keypress",
    "textInput",
    "paste"
]);
$fe54416e54b68053$var$da("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
$fe54416e54b68053$var$da("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
$fe54416e54b68053$var$da("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
var $fe54416e54b68053$var$Xe = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), $fe54416e54b68053$var$Ye = new Set("cancel close invalid load scroll toggle".split(" ").concat($fe54416e54b68053$var$Xe));
function $fe54416e54b68053$var$Ze(a, b, c) {
    var d = a.type || "unknown-event";
    a.currentTarget = c;
    $fe54416e54b68053$var$Yb(d, b, void 0, a);
    a.currentTarget = null;
}
function $fe54416e54b68053$var$se(a, b) {
    b = 0 !== (b & 4);
    for(var c = 0; c < a.length; c++){
        var d = a[c], e = d.event;
        d = d.listeners;
        a: {
            var f = void 0;
            if (b) for(var g = d.length - 1; 0 <= g; g--){
                var h = d[g], k = h.instance, l = h.currentTarget;
                h = h.listener;
                if (k !== f && e.isPropagationStopped()) break a;
                $fe54416e54b68053$var$Ze(e, h, l);
                f = k;
            }
            else for(g = 0; g < d.length; g++){
                h = d[g];
                k = h.instance;
                l = h.currentTarget;
                h = h.listener;
                if (k !== f && e.isPropagationStopped()) break a;
                $fe54416e54b68053$var$Ze(e, h, l);
                f = k;
            }
        }
    }
    if ($fe54416e54b68053$var$Ub) throw a = $fe54416e54b68053$var$Vb, $fe54416e54b68053$var$Ub = !1, $fe54416e54b68053$var$Vb = null, a;
}
function $fe54416e54b68053$var$G(a, b) {
    var c = $fe54416e54b68053$var$$e(b), d = a + "__bubble";
    c.has(d) || ($fe54416e54b68053$var$af(b, a, 2, !1), c.add(d));
}
var $fe54416e54b68053$var$bf = "_reactListening" + Math.random().toString(36).slice(2);
function $fe54416e54b68053$var$cf(a) {
    a[$fe54416e54b68053$var$bf] || (a[$fe54416e54b68053$var$bf] = !0, $fe54416e54b68053$var$ba.forEach(function(b) {
        $fe54416e54b68053$var$Ye.has(b) || $fe54416e54b68053$var$df(b, !1, a, null);
        $fe54416e54b68053$var$df(b, !0, a, null);
    }));
}
function $fe54416e54b68053$var$df(a, b, c, d) {
    var e = 4 < arguments.length && (void 0) !== arguments[4] ? arguments[4] : 0, f = c;
    "selectionchange" === a && 9 !== c.nodeType && (f = c.ownerDocument);
    if (null !== d && !b && $fe54416e54b68053$var$Ye.has(a)) {
        if ("scroll" !== a) return;
        e |= 2;
        f = d;
    }
    var g = $fe54416e54b68053$var$$e(f), h = a + "__" + (b ? "capture" : "bubble");
    g.has(h) || (b && (e |= 4), $fe54416e54b68053$var$af(f, a, e, b), g.add(h));
}
function $fe54416e54b68053$var$af(a, b, c, d) {
    var e = $fe54416e54b68053$var$Nc.get(b);
    switch((void 0) === e ? 2 : e){
        case 0:
            e = $fe54416e54b68053$var$gd;
            break;
        case 1:
            e = $fe54416e54b68053$var$id;
            break;
        default:
            e = $fe54416e54b68053$var$hd;
    }
    c = e.bind(null, b, c, a);
    e = void 0;
    !$fe54416e54b68053$var$Pb || "touchstart" !== b && "touchmove" !== b && "wheel" !== b || (e = !0);
    d ? (void 0) !== e ? a.addEventListener(b, c, {
        capture: !0,
        passive: e
    }) : a.addEventListener(b, c, !0) : (void 0) !== e ? a.addEventListener(b, c, {
        passive: e
    }) : a.addEventListener(b, c, !1);
}
function $fe54416e54b68053$var$jd(a, b, c, d, e) {
    var f = d;
    if (0 === (b & 1) && 0 === (b & 2) && null !== d) a: for(;;){
        if (null === d) return;
        var g = d.tag;
        if (3 === g || 4 === g) {
            var h = d.stateNode.containerInfo;
            if (h === e || 8 === h.nodeType && h.parentNode === e) break;
            if (4 === g) for(g = d.return; null !== g;){
                var k = g.tag;
                if (3 === k || 4 === k) {
                    if (k = g.stateNode.containerInfo, k === e || 8 === k.nodeType && k.parentNode === e) return;
                }
                g = g.return;
            }
            for(; null !== h;){
                g = $fe54416e54b68053$var$wc(h);
                if (null === g) return;
                k = g.tag;
                if (5 === k || 6 === k) {
                    d = f = g;
                    continue a;
                }
                h = h.parentNode;
            }
        }
        d = d.return;
    }
    $fe54416e54b68053$var$Nb(function() {
        var d1 = f, e1 = $fe54416e54b68053$var$xb(c), g = [];
        a: {
            var h = $fe54416e54b68053$var$Mc.get(a);
            if ((void 0) !== h) {
                var k = $fe54416e54b68053$var$td, x = a;
                switch(a){
                    case "keypress":
                        if (0 === $fe54416e54b68053$var$od(c)) break a;
                    case "keydown":
                    case "keyup":
                        k = $fe54416e54b68053$var$Rd;
                        break;
                    case "focusin":
                        x = "focus";
                        k = $fe54416e54b68053$var$Fd;
                        break;
                    case "focusout":
                        x = "blur";
                        k = $fe54416e54b68053$var$Fd;
                        break;
                    case "beforeblur":
                    case "afterblur":
                        k = $fe54416e54b68053$var$Fd;
                        break;
                    case "click":
                        if (2 === c.button) break a;
                    case "auxclick":
                    case "dblclick":
                    case "mousedown":
                    case "mousemove":
                    case "mouseup":
                    case "mouseout":
                    case "mouseover":
                    case "contextmenu":
                        k = $fe54416e54b68053$var$Bd;
                        break;
                    case "drag":
                    case "dragend":
                    case "dragenter":
                    case "dragexit":
                    case "dragleave":
                    case "dragover":
                    case "dragstart":
                    case "drop":
                        k = $fe54416e54b68053$var$Dd;
                        break;
                    case "touchcancel":
                    case "touchend":
                    case "touchmove":
                    case "touchstart":
                        k = $fe54416e54b68053$var$Vd;
                        break;
                    case $fe54416e54b68053$var$Ic:
                    case $fe54416e54b68053$var$Jc:
                    case $fe54416e54b68053$var$Kc:
                        k = $fe54416e54b68053$var$Hd;
                        break;
                    case $fe54416e54b68053$var$Lc:
                        k = $fe54416e54b68053$var$Xd;
                        break;
                    case "scroll":
                        k = $fe54416e54b68053$var$vd;
                        break;
                    case "wheel":
                        k = $fe54416e54b68053$var$Zd;
                        break;
                    case "copy":
                    case "cut":
                    case "paste":
                        k = $fe54416e54b68053$var$Jd;
                        break;
                    case "gotpointercapture":
                    case "lostpointercapture":
                    case "pointercancel":
                    case "pointerdown":
                    case "pointermove":
                    case "pointerout":
                    case "pointerover":
                    case "pointerup":
                        k = $fe54416e54b68053$var$Td;
                }
                var w = 0 !== (b & 4), z = !w && "scroll" === a, u = w ? null !== h ? h + "Capture" : null : h;
                w = [];
                for(var t = d1, q; null !== t;){
                    q = t;
                    var v = q.stateNode;
                    5 === q.tag && null !== v && (q = v, null !== u && (v = $fe54416e54b68053$var$Ob(t, u), null != v && w.push($fe54416e54b68053$var$ef(t, v, q))));
                    if (z) break;
                    t = t.return;
                }
                0 < w.length && (h = new k(h, x, null, c, e1), g.push({
                    event: h,
                    listeners: w
                }));
            }
        }
        if (0 === (b & 7)) {
            a: {
                h = "mouseover" === a || "pointerover" === a;
                k = "mouseout" === a || "pointerout" === a;
                if (h && 0 === (b & 16) && (x = c.relatedTarget || c.fromElement) && ($fe54416e54b68053$var$wc(x) || x[$fe54416e54b68053$var$ff])) break a;
                if (k || h) {
                    h = e1.window === e1 ? e1 : (h = e1.ownerDocument) ? h.defaultView || h.parentWindow : window;
                    if (k) {
                        if (x = c.relatedTarget || c.toElement, k = d1, x = x ? $fe54416e54b68053$var$wc(x) : null, null !== x && (z = $fe54416e54b68053$var$Zb(x), x !== z || 5 !== x.tag && 6 !== x.tag)) x = null;
                    } else k = null, x = d1;
                    if (k !== x) {
                        w = $fe54416e54b68053$var$Bd;
                        v = "onMouseLeave";
                        u = "onMouseEnter";
                        t = "mouse";
                        if ("pointerout" === a || "pointerover" === a) w = $fe54416e54b68053$var$Td, v = "onPointerLeave", u = "onPointerEnter", t = "pointer";
                        z = null == k ? h : $fe54416e54b68053$var$ue(k);
                        q = null == x ? h : $fe54416e54b68053$var$ue(x);
                        h = new w(v, t + "leave", k, c, e1);
                        h.target = z;
                        h.relatedTarget = q;
                        v = null;
                        $fe54416e54b68053$var$wc(e1) === d1 && (w = new w(u, t + "enter", x, c, e1), w.target = q, w.relatedTarget = z, v = w);
                        z = v;
                        if (k && x) b: {
                            w = k;
                            u = x;
                            t = 0;
                            for(q = w; q; q = $fe54416e54b68053$var$gf(q))t++;
                            q = 0;
                            for(v = u; v; v = $fe54416e54b68053$var$gf(v))q++;
                            for(; 0 < t - q;)w = $fe54416e54b68053$var$gf(w), t--;
                            for(; 0 < q - t;)u = $fe54416e54b68053$var$gf(u), q--;
                            for(; t--;){
                                if (w === u || null !== u && w === u.alternate) break b;
                                w = $fe54416e54b68053$var$gf(w);
                                u = $fe54416e54b68053$var$gf(u);
                            }
                            w = null;
                        }
                        else w = null;
                        null !== k && $fe54416e54b68053$var$hf(g, h, k, w, !1);
                        null !== x && null !== z && $fe54416e54b68053$var$hf(g, z, x, w, !0);
                    }
                }
            }
            a: {
                h = d1 ? $fe54416e54b68053$var$ue(d1) : window;
                k = h.nodeName && h.nodeName.toLowerCase();
                if ("select" === k || "input" === k && "file" === h.type) var J = $fe54416e54b68053$var$ve;
                else if ($fe54416e54b68053$var$me(h)) {
                    if ($fe54416e54b68053$var$we) J = $fe54416e54b68053$var$Fe;
                    else {
                        J = $fe54416e54b68053$var$De;
                        var K = $fe54416e54b68053$var$Ce;
                    }
                } else (k = h.nodeName) && "input" === k.toLowerCase() && ("checkbox" === h.type || "radio" === h.type) && (J = $fe54416e54b68053$var$Ee);
                if (J && (J = J(a, d1))) {
                    $fe54416e54b68053$var$ne(g, J, c, e1);
                    break a;
                }
                K && K(a, h, d1);
                "focusout" === a && (K = h._wrapperState) && K.controlled && "number" === h.type && $fe54416e54b68053$var$bb(h, "number", h.value);
            }
            K = d1 ? $fe54416e54b68053$var$ue(d1) : window;
            switch(a){
                case "focusin":
                    if ($fe54416e54b68053$var$me(K) || "true" === K.contentEditable) $fe54416e54b68053$var$Qe = K, $fe54416e54b68053$var$Re = d1, $fe54416e54b68053$var$Se = null;
                    break;
                case "focusout":
                    $fe54416e54b68053$var$Se = $fe54416e54b68053$var$Re = $fe54416e54b68053$var$Qe = null;
                    break;
                case "mousedown":
                    $fe54416e54b68053$var$Te = !0;
                    break;
                case "contextmenu":
                case "mouseup":
                case "dragend":
                    $fe54416e54b68053$var$Te = !1;
                    $fe54416e54b68053$var$Ue(g, c, e1);
                    break;
                case "selectionchange":
                    if ($fe54416e54b68053$var$Pe) break;
                case "keydown":
                case "keyup":
                    $fe54416e54b68053$var$Ue(g, c, e1);
            }
            var Q;
            if ($fe54416e54b68053$var$ae) b: {
                switch(a){
                    case "compositionstart":
                        var L = "onCompositionStart";
                        break b;
                    case "compositionend":
                        L = "onCompositionEnd";
                        break b;
                    case "compositionupdate":
                        L = "onCompositionUpdate";
                        break b;
                }
                L = void 0;
            }
            else $fe54416e54b68053$var$ie ? $fe54416e54b68053$var$ge(a, c) && (L = "onCompositionEnd") : "keydown" === a && 229 === c.keyCode && (L = "onCompositionStart");
            L && ($fe54416e54b68053$var$de && "ko" !== c.locale && ($fe54416e54b68053$var$ie || "onCompositionStart" !== L ? "onCompositionEnd" === L && $fe54416e54b68053$var$ie && (Q = $fe54416e54b68053$var$nd()) : ($fe54416e54b68053$var$kd = e1, $fe54416e54b68053$var$ld = "value" in $fe54416e54b68053$var$kd ? $fe54416e54b68053$var$kd.value : $fe54416e54b68053$var$kd.textContent, $fe54416e54b68053$var$ie = !0)), K = $fe54416e54b68053$var$oe(d1, L), 0 < K.length && (L = new $fe54416e54b68053$var$Ld(L, a, null, c, e1), g.push({
                event: L,
                listeners: K
            }), Q ? L.data = Q : (Q = $fe54416e54b68053$var$he(c), null !== Q && (L.data = Q))));
            if (Q = $fe54416e54b68053$var$ce ? $fe54416e54b68053$var$je(a, c) : $fe54416e54b68053$var$ke(a, c)) d1 = $fe54416e54b68053$var$oe(d1, "onBeforeInput"), 0 < d1.length && (e1 = new $fe54416e54b68053$var$Ld("onBeforeInput", "beforeinput", null, c, e1), g.push({
                event: e1,
                listeners: d1
            }), e1.data = Q);
        }
        $fe54416e54b68053$var$se(g, b);
    });
}
function $fe54416e54b68053$var$ef(a, b, c) {
    return {
        instance: a,
        listener: b,
        currentTarget: c
    };
}
function $fe54416e54b68053$var$oe(a, b) {
    for(var c = b + "Capture", d = []; null !== a;){
        var e = a, f = e.stateNode;
        5 === e.tag && null !== f && (e = f, f = $fe54416e54b68053$var$Ob(a, c), null != f && d.unshift($fe54416e54b68053$var$ef(a, f, e)), f = $fe54416e54b68053$var$Ob(a, b), null != f && d.push($fe54416e54b68053$var$ef(a, f, e)));
        a = a.return;
    }
    return d;
}
function $fe54416e54b68053$var$gf(a) {
    if (null === a) return null;
    do a = a.return;
    while (a && 5 !== a.tag)
    return a ? a : null;
}
function $fe54416e54b68053$var$hf(a, b, c, d, e) {
    for(var f = b._reactName, g = []; null !== c && c !== d;){
        var h = c, k = h.alternate, l = h.stateNode;
        if (null !== k && k === d) break;
        5 === h.tag && null !== l && (h = l, e ? (k = $fe54416e54b68053$var$Ob(c, f), null != k && g.unshift($fe54416e54b68053$var$ef(c, k, h))) : e || (k = $fe54416e54b68053$var$Ob(c, f), null != k && g.push($fe54416e54b68053$var$ef(c, k, h))));
        c = c.return;
    }
    0 !== g.length && a.push({
        event: b,
        listeners: g
    });
}
function $fe54416e54b68053$var$jf() {
}
var $fe54416e54b68053$var$kf = null, $fe54416e54b68053$var$lf = null;
function $fe54416e54b68053$var$mf(a, b) {
    switch(a){
        case "button":
        case "input":
        case "select":
        case "textarea":
            return !!b.autoFocus;
    }
    return !1;
}
function $fe54416e54b68053$var$nf(a, b) {
    return "textarea" === a || "option" === a || "noscript" === a || "string" === typeof b.children || "number" === typeof b.children || "object" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
}
var $fe54416e54b68053$var$of = "function" === typeof setTimeout ? setTimeout : void 0, $fe54416e54b68053$var$pf = "function" === typeof clearTimeout ? clearTimeout : void 0;
function $fe54416e54b68053$var$qf(a) {
    1 === a.nodeType ? a.textContent = "" : 9 === a.nodeType && (a = a.body, null != a && (a.textContent = ""));
}
function $fe54416e54b68053$var$rf(a) {
    for(; null != a; a = a.nextSibling){
        var b = a.nodeType;
        if (1 === b || 3 === b) break;
    }
    return a;
}
function $fe54416e54b68053$var$sf(a) {
    a = a.previousSibling;
    for(var b = 0; a;){
        if (8 === a.nodeType) {
            var c = a.data;
            if ("$" === c || "$!" === c || "$?" === c) {
                if (0 === b) return a;
                b--;
            } else "/$" === c && b++;
        }
        a = a.previousSibling;
    }
    return null;
}
var $fe54416e54b68053$var$tf = 0;
function $fe54416e54b68053$var$uf(a) {
    return {
        $$typeof: $fe54416e54b68053$var$Ga,
        toString: a,
        valueOf: a
    };
}
var $fe54416e54b68053$var$vf = Math.random().toString(36).slice(2), $fe54416e54b68053$var$wf = "__reactFiber$" + $fe54416e54b68053$var$vf, $fe54416e54b68053$var$xf = "__reactProps$" + $fe54416e54b68053$var$vf, $fe54416e54b68053$var$ff = "__reactContainer$" + $fe54416e54b68053$var$vf, $fe54416e54b68053$var$yf = "__reactEvents$" + $fe54416e54b68053$var$vf;
function $fe54416e54b68053$var$wc(a) {
    var b = a[$fe54416e54b68053$var$wf];
    if (b) return b;
    for(var c = a.parentNode; c;){
        if (b = c[$fe54416e54b68053$var$ff] || c[$fe54416e54b68053$var$wf]) {
            c = b.alternate;
            if (null !== b.child || null !== c && null !== c.child) for(a = $fe54416e54b68053$var$sf(a); null !== a;){
                if (c = a[$fe54416e54b68053$var$wf]) return c;
                a = $fe54416e54b68053$var$sf(a);
            }
            return b;
        }
        a = c;
        c = a.parentNode;
    }
    return null;
}
function $fe54416e54b68053$var$Cb(a) {
    a = a[$fe54416e54b68053$var$wf] || a[$fe54416e54b68053$var$ff];
    return !a || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
}
function $fe54416e54b68053$var$ue(a) {
    if (5 === a.tag || 6 === a.tag) return a.stateNode;
    throw Error($fe54416e54b68053$var$y(33));
}
function $fe54416e54b68053$var$Db(a) {
    return a[$fe54416e54b68053$var$xf] || null;
}
function $fe54416e54b68053$var$$e(a) {
    var b = a[$fe54416e54b68053$var$yf];
    (void 0) === b && (b = a[$fe54416e54b68053$var$yf] = new Set);
    return b;
}
var $fe54416e54b68053$var$zf = [], $fe54416e54b68053$var$Af = -1;
function $fe54416e54b68053$var$Bf(a) {
    return {
        current: a
    };
}
function $fe54416e54b68053$var$H(a) {
    0 > $fe54416e54b68053$var$Af || (a.current = $fe54416e54b68053$var$zf[$fe54416e54b68053$var$Af], $fe54416e54b68053$var$zf[$fe54416e54b68053$var$Af] = null, $fe54416e54b68053$var$Af--);
}
function $fe54416e54b68053$var$I(a, b) {
    $fe54416e54b68053$var$Af++;
    $fe54416e54b68053$var$zf[$fe54416e54b68053$var$Af] = a.current;
    a.current = b;
}
var $fe54416e54b68053$var$Cf = {
}, $fe54416e54b68053$var$M = $fe54416e54b68053$var$Bf($fe54416e54b68053$var$Cf), $fe54416e54b68053$var$N = $fe54416e54b68053$var$Bf(!1), $fe54416e54b68053$var$Df = $fe54416e54b68053$var$Cf;
function $fe54416e54b68053$var$Ef(a, b) {
    var c = a.type.contextTypes;
    if (!c) return $fe54416e54b68053$var$Cf;
    var d = a.stateNode;
    if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
    var e = {
    }, f;
    for(f in c)e[f] = b[f];
    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);
    return e;
}
function $fe54416e54b68053$var$Ff(a) {
    a = a.childContextTypes;
    return null !== a && (void 0) !== a;
}
function $fe54416e54b68053$var$Gf() {
    $fe54416e54b68053$var$H($fe54416e54b68053$var$N);
    $fe54416e54b68053$var$H($fe54416e54b68053$var$M);
}
function $fe54416e54b68053$var$Hf(a, b, c) {
    if ($fe54416e54b68053$var$M.current !== $fe54416e54b68053$var$Cf) throw Error($fe54416e54b68053$var$y(168));
    $fe54416e54b68053$var$I($fe54416e54b68053$var$M, b);
    $fe54416e54b68053$var$I($fe54416e54b68053$var$N, c);
}
function $fe54416e54b68053$var$If(a, b, c) {
    var d = a.stateNode;
    a = b.childContextTypes;
    if ("function" !== typeof d.getChildContext) return c;
    d = d.getChildContext();
    for(var e in d)if (!(e in a)) throw Error($fe54416e54b68053$var$y(108, $fe54416e54b68053$var$Ra(b) || "Unknown", e));
    return $lz3cj({
    }, c, d);
}
function $fe54416e54b68053$var$Jf(a) {
    a = (a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext || $fe54416e54b68053$var$Cf;
    $fe54416e54b68053$var$Df = $fe54416e54b68053$var$M.current;
    $fe54416e54b68053$var$I($fe54416e54b68053$var$M, a);
    $fe54416e54b68053$var$I($fe54416e54b68053$var$N, $fe54416e54b68053$var$N.current);
    return !0;
}
function $fe54416e54b68053$var$Kf(a, b, c) {
    var d = a.stateNode;
    if (!d) throw Error($fe54416e54b68053$var$y(169));
    c ? (a = $fe54416e54b68053$var$If(a, b, $fe54416e54b68053$var$Df), d.__reactInternalMemoizedMergedChildContext = a, $fe54416e54b68053$var$H($fe54416e54b68053$var$N), $fe54416e54b68053$var$H($fe54416e54b68053$var$M), $fe54416e54b68053$var$I($fe54416e54b68053$var$M, a)) : $fe54416e54b68053$var$H($fe54416e54b68053$var$N);
    $fe54416e54b68053$var$I($fe54416e54b68053$var$N, c);
}
var $fe54416e54b68053$var$Lf = null, $fe54416e54b68053$var$Mf = null, $fe54416e54b68053$var$Nf = $eZpbl.unstable_runWithPriority, $fe54416e54b68053$var$Of = $eZpbl.unstable_scheduleCallback, $fe54416e54b68053$var$Pf = $eZpbl.unstable_cancelCallback, $fe54416e54b68053$var$Qf = $eZpbl.unstable_shouldYield, $fe54416e54b68053$var$Rf = $eZpbl.unstable_requestPaint, $fe54416e54b68053$var$Sf = $eZpbl.unstable_now, $fe54416e54b68053$var$Tf = $eZpbl.unstable_getCurrentPriorityLevel, $fe54416e54b68053$var$Uf = $eZpbl.unstable_ImmediatePriority, $fe54416e54b68053$var$Vf = $eZpbl.unstable_UserBlockingPriority, $fe54416e54b68053$var$Wf = $eZpbl.unstable_NormalPriority, $fe54416e54b68053$var$Xf = $eZpbl.unstable_LowPriority, $fe54416e54b68053$var$Yf = $eZpbl.unstable_IdlePriority, $fe54416e54b68053$var$Zf = {
}, $fe54416e54b68053$var$$f = (void 0) !== $fe54416e54b68053$var$Rf ? $fe54416e54b68053$var$Rf : function() {
}, $fe54416e54b68053$var$ag = null, $fe54416e54b68053$var$bg = null, $fe54416e54b68053$var$cg = !1, $fe54416e54b68053$var$dg = $fe54416e54b68053$var$Sf(), $fe54416e54b68053$var$O = 10000 > $fe54416e54b68053$var$dg ? $fe54416e54b68053$var$Sf : function() {
    return $fe54416e54b68053$var$Sf() - $fe54416e54b68053$var$dg;
};
function $fe54416e54b68053$var$eg() {
    switch($fe54416e54b68053$var$Tf()){
        case $fe54416e54b68053$var$Uf:
            return 99;
        case $fe54416e54b68053$var$Vf:
            return 98;
        case $fe54416e54b68053$var$Wf:
            return 97;
        case $fe54416e54b68053$var$Xf:
            return 96;
        case $fe54416e54b68053$var$Yf:
            return 95;
        default:
            throw Error($fe54416e54b68053$var$y(332));
    }
}
function $fe54416e54b68053$var$fg(a) {
    switch(a){
        case 99:
            return $fe54416e54b68053$var$Uf;
        case 98:
            return $fe54416e54b68053$var$Vf;
        case 97:
            return $fe54416e54b68053$var$Wf;
        case 96:
            return $fe54416e54b68053$var$Xf;
        case 95:
            return $fe54416e54b68053$var$Yf;
        default:
            throw Error($fe54416e54b68053$var$y(332));
    }
}
function $fe54416e54b68053$var$gg(a, b) {
    a = $fe54416e54b68053$var$fg(a);
    return $fe54416e54b68053$var$Nf(a, b);
}
function $fe54416e54b68053$var$hg(a, b, c) {
    a = $fe54416e54b68053$var$fg(a);
    return $fe54416e54b68053$var$Of(a, b, c);
}
function $fe54416e54b68053$var$ig() {
    if (null !== $fe54416e54b68053$var$bg) {
        var a = $fe54416e54b68053$var$bg;
        $fe54416e54b68053$var$bg = null;
        $fe54416e54b68053$var$Pf(a);
    }
    $fe54416e54b68053$var$jg();
}
function $fe54416e54b68053$var$jg() {
    if (!$fe54416e54b68053$var$cg && null !== $fe54416e54b68053$var$ag) {
        $fe54416e54b68053$var$cg = !0;
        var a = 0;
        try {
            var b = $fe54416e54b68053$var$ag;
            $fe54416e54b68053$var$gg(99, function() {
                for(; a < b.length; a++){
                    var c = b[a];
                    do c = c(!0);
                    while (null !== c)
                }
            });
            $fe54416e54b68053$var$ag = null;
        } catch (c) {
            throw null !== $fe54416e54b68053$var$ag && ($fe54416e54b68053$var$ag = $fe54416e54b68053$var$ag.slice(a + 1)), $fe54416e54b68053$var$Of($fe54416e54b68053$var$Uf, $fe54416e54b68053$var$ig), c;
        } finally{
            $fe54416e54b68053$var$cg = !1;
        }
    }
}
var $fe54416e54b68053$var$kg = $fe54416e54b68053$var$ra.ReactCurrentBatchConfig;
function $fe54416e54b68053$var$lg(a, b) {
    if (a && a.defaultProps) {
        b = $lz3cj({
        }, b);
        a = a.defaultProps;
        for(var c in a)(void 0) === b[c] && (b[c] = a[c]);
        return b;
    }
    return b;
}
var $fe54416e54b68053$var$mg = $fe54416e54b68053$var$Bf(null), $fe54416e54b68053$var$ng = null, $fe54416e54b68053$var$og = null, $fe54416e54b68053$var$pg = null;
function $fe54416e54b68053$var$qg() {
    $fe54416e54b68053$var$pg = $fe54416e54b68053$var$og = $fe54416e54b68053$var$ng = null;
}
function $fe54416e54b68053$var$rg(a) {
    var b = $fe54416e54b68053$var$mg.current;
    $fe54416e54b68053$var$H($fe54416e54b68053$var$mg);
    a.type._context._currentValue = b;
}
function $fe54416e54b68053$var$sg(a, b) {
    for(; null !== a;){
        var c = a.alternate;
        if ((a.childLanes & b) === b) {
            if (null === c || (c.childLanes & b) === b) break;
            else c.childLanes |= b;
        } else a.childLanes |= b, null !== c && (c.childLanes |= b);
        a = a.return;
    }
}
function $fe54416e54b68053$var$tg(a, b) {
    $fe54416e54b68053$var$ng = a;
    $fe54416e54b68053$var$pg = $fe54416e54b68053$var$og = null;
    a = a.dependencies;
    null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && ($fe54416e54b68053$var$ug = !0), a.firstContext = null);
}
function $fe54416e54b68053$var$vg(a, b) {
    if ($fe54416e54b68053$var$pg !== a && !1 !== b && 0 !== b) {
        if ("number" !== typeof b || 1073741823 === b) $fe54416e54b68053$var$pg = a, b = 1073741823;
        b = {
            context: a,
            observedBits: b,
            next: null
        };
        if (null === $fe54416e54b68053$var$og) {
            if (null === $fe54416e54b68053$var$ng) throw Error($fe54416e54b68053$var$y(308));
            $fe54416e54b68053$var$og = b;
            $fe54416e54b68053$var$ng.dependencies = {
                lanes: 0,
                firstContext: b,
                responders: null
            };
        } else $fe54416e54b68053$var$og = $fe54416e54b68053$var$og.next = b;
    }
    return a._currentValue;
}
var $fe54416e54b68053$var$wg = !1;
function $fe54416e54b68053$var$xg(a) {
    a.updateQueue = {
        baseState: a.memoizedState,
        firstBaseUpdate: null,
        lastBaseUpdate: null,
        shared: {
            pending: null
        },
        effects: null
    };
}
function $fe54416e54b68053$var$yg(a, b) {
    a = a.updateQueue;
    b.updateQueue === a && (b.updateQueue = {
        baseState: a.baseState,
        firstBaseUpdate: a.firstBaseUpdate,
        lastBaseUpdate: a.lastBaseUpdate,
        shared: a.shared,
        effects: a.effects
    });
}
function $fe54416e54b68053$var$zg(a, b) {
    return {
        eventTime: a,
        lane: b,
        tag: 0,
        payload: null,
        callback: null,
        next: null
    };
}
function $fe54416e54b68053$var$Ag(a, b) {
    a = a.updateQueue;
    if (null !== a) {
        a = a.shared;
        var c = a.pending;
        null === c ? b.next = b : (b.next = c.next, c.next = b);
        a.pending = b;
    }
}
function $fe54416e54b68053$var$Bg(a, b) {
    var c = a.updateQueue, d = a.alternate;
    if (null !== d && (d = d.updateQueue, c === d)) {
        var e = null, f = null;
        c = c.firstBaseUpdate;
        if (null !== c) {
            do {
                var g = {
                    eventTime: c.eventTime,
                    lane: c.lane,
                    tag: c.tag,
                    payload: c.payload,
                    callback: c.callback,
                    next: null
                };
                null === f ? e = f = g : f = f.next = g;
                c = c.next;
            }while (null !== c)
            null === f ? e = f = b : f = f.next = b;
        } else e = f = b;
        c = {
            baseState: d.baseState,
            firstBaseUpdate: e,
            lastBaseUpdate: f,
            shared: d.shared,
            effects: d.effects
        };
        a.updateQueue = c;
        return;
    }
    a = c.lastBaseUpdate;
    null === a ? c.firstBaseUpdate = b : a.next = b;
    c.lastBaseUpdate = b;
}
function $fe54416e54b68053$var$Cg(a, b, c, d) {
    var e = a.updateQueue;
    $fe54416e54b68053$var$wg = !1;
    var f = e.firstBaseUpdate, g = e.lastBaseUpdate, h = e.shared.pending;
    if (null !== h) {
        e.shared.pending = null;
        var k = h, l = k.next;
        k.next = null;
        null === g ? f = l : g.next = l;
        g = k;
        var n = a.alternate;
        if (null !== n) {
            n = n.updateQueue;
            var A = n.lastBaseUpdate;
            A !== g && (null === A ? n.firstBaseUpdate = l : A.next = l, n.lastBaseUpdate = k);
        }
    }
    if (null !== f) {
        A = e.baseState;
        g = 0;
        n = l = k = null;
        do {
            h = f.lane;
            var p = f.eventTime;
            if ((d & h) === h) {
                null !== n && (n = n.next = {
                    eventTime: p,
                    lane: 0,
                    tag: f.tag,
                    payload: f.payload,
                    callback: f.callback,
                    next: null
                });
                a: {
                    var C = a, x = f;
                    h = b;
                    p = c;
                    switch(x.tag){
                        case 1:
                            C = x.payload;
                            if ("function" === typeof C) {
                                A = C.call(p, A, h);
                                break a;
                            }
                            A = C;
                            break a;
                        case 3:
                            C.flags = C.flags & -4097 | 64;
                        case 0:
                            C = x.payload;
                            h = "function" === typeof C ? C.call(p, A, h) : C;
                            if (null === h || (void 0) === h) break a;
                            A = $lz3cj({
                            }, A, h);
                            break a;
                        case 2:
                            $fe54416e54b68053$var$wg = !0;
                    }
                }
                null !== f.callback && (a.flags |= 32, h = e.effects, null === h ? e.effects = [
                    f
                ] : h.push(f));
            } else p = {
                eventTime: p,
                lane: h,
                tag: f.tag,
                payload: f.payload,
                callback: f.callback,
                next: null
            }, null === n ? (l = n = p, k = A) : n = n.next = p, g |= h;
            f = f.next;
            if (null === f) {
                if (h = e.shared.pending, null === h) break;
                else f = h.next, h.next = null, e.lastBaseUpdate = h, e.shared.pending = null;
            }
        }while (1)
        null === n && (k = A);
        e.baseState = k;
        e.firstBaseUpdate = l;
        e.lastBaseUpdate = n;
        $fe54416e54b68053$var$Dg |= g;
        a.lanes = g;
        a.memoizedState = A;
    }
}
function $fe54416e54b68053$var$Eg(a, b, c) {
    a = b.effects;
    b.effects = null;
    if (null !== a) for(b = 0; b < a.length; b++){
        var d = a[b], e = d.callback;
        if (null !== e) {
            d.callback = null;
            d = c;
            if ("function" !== typeof e) throw Error($fe54416e54b68053$var$y(191, e));
            e.call(d);
        }
    }
}
var $fe54416e54b68053$var$Fg = (new $gctDA.Component).refs;
function $fe54416e54b68053$var$Gg(a, b, c, d) {
    b = a.memoizedState;
    c = c(d, b);
    c = null === c || (void 0) === c ? b : $lz3cj({
    }, b, c);
    a.memoizedState = c;
    0 === a.lanes && (a.updateQueue.baseState = c);
}
var $fe54416e54b68053$var$Kg = {
    isMounted: function(a) {
        return (a = a._reactInternals) ? $fe54416e54b68053$var$Zb(a) === a : !1;
    },
    enqueueSetState: function(a, b, c) {
        a = a._reactInternals;
        var d = $fe54416e54b68053$var$Hg(), e = $fe54416e54b68053$var$Ig(a), f = $fe54416e54b68053$var$zg(d, e);
        f.payload = b;
        (void 0) !== c && null !== c && (f.callback = c);
        $fe54416e54b68053$var$Ag(a, f);
        $fe54416e54b68053$var$Jg(a, e, d);
    },
    enqueueReplaceState: function(a, b, c) {
        a = a._reactInternals;
        var d = $fe54416e54b68053$var$Hg(), e = $fe54416e54b68053$var$Ig(a), f = $fe54416e54b68053$var$zg(d, e);
        f.tag = 1;
        f.payload = b;
        (void 0) !== c && null !== c && (f.callback = c);
        $fe54416e54b68053$var$Ag(a, f);
        $fe54416e54b68053$var$Jg(a, e, d);
    },
    enqueueForceUpdate: function(a, b) {
        a = a._reactInternals;
        var c = $fe54416e54b68053$var$Hg(), d = $fe54416e54b68053$var$Ig(a), e = $fe54416e54b68053$var$zg(c, d);
        e.tag = 2;
        (void 0) !== b && null !== b && (e.callback = b);
        $fe54416e54b68053$var$Ag(a, e);
        $fe54416e54b68053$var$Jg(a, d, c);
    }
};
function $fe54416e54b68053$var$Lg(a, b, c, d, e, f, g) {
    a = a.stateNode;
    return "function" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !$fe54416e54b68053$var$Je(c, d) || !$fe54416e54b68053$var$Je(e, f) : !0;
}
function $fe54416e54b68053$var$Mg(a, b, c) {
    var d = !1, e = $fe54416e54b68053$var$Cf;
    var f = b.contextType;
    "object" === typeof f && null !== f ? f = $fe54416e54b68053$var$vg(f) : (e = $fe54416e54b68053$var$Ff(b) ? $fe54416e54b68053$var$Df : $fe54416e54b68053$var$M.current, d = b.contextTypes, f = (d = null !== d && (void 0) !== d) ? $fe54416e54b68053$var$Ef(a, e) : $fe54416e54b68053$var$Cf);
    b = new b(c, f);
    a.memoizedState = null !== b.state && (void 0) !== b.state ? b.state : null;
    b.updater = $fe54416e54b68053$var$Kg;
    a.stateNode = b;
    b._reactInternals = a;
    d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);
    return b;
}
function $fe54416e54b68053$var$Ng(a, b, c, d) {
    a = b.state;
    "function" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);
    "function" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);
    b.state !== a && $fe54416e54b68053$var$Kg.enqueueReplaceState(b, b.state, null);
}
function $fe54416e54b68053$var$Og(a, b, c, d) {
    var e = a.stateNode;
    e.props = c;
    e.state = a.memoizedState;
    e.refs = $fe54416e54b68053$var$Fg;
    $fe54416e54b68053$var$xg(a);
    var f = b.contextType;
    "object" === typeof f && null !== f ? e.context = $fe54416e54b68053$var$vg(f) : (f = $fe54416e54b68053$var$Ff(b) ? $fe54416e54b68053$var$Df : $fe54416e54b68053$var$M.current, e.context = $fe54416e54b68053$var$Ef(a, f));
    $fe54416e54b68053$var$Cg(a, c, e, d);
    e.state = a.memoizedState;
    f = b.getDerivedStateFromProps;
    "function" === typeof f && ($fe54416e54b68053$var$Gg(a, b, f, c), e.state = a.memoizedState);
    "function" === typeof b.getDerivedStateFromProps || "function" === typeof e.getSnapshotBeforeUpdate || "function" !== typeof e.UNSAFE_componentWillMount && "function" !== typeof e.componentWillMount || (b = e.state, "function" === typeof e.componentWillMount && e.componentWillMount(), "function" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && $fe54416e54b68053$var$Kg.enqueueReplaceState(e, e.state, null), $fe54416e54b68053$var$Cg(a, c, e, d), e.state = a.memoizedState);
    "function" === typeof e.componentDidMount && (a.flags |= 4);
}
var $fe54416e54b68053$var$Pg = Array.isArray;
function $fe54416e54b68053$var$Qg(a, b, c) {
    a = c.ref;
    if (null !== a && "function" !== typeof a && "object" !== typeof a) {
        if (c._owner) {
            c = c._owner;
            if (c) {
                if (1 !== c.tag) throw Error($fe54416e54b68053$var$y(309));
                var d = c.stateNode;
            }
            if (!d) throw Error($fe54416e54b68053$var$y(147, a));
            var e = "" + a;
            if (null !== b && null !== b.ref && "function" === typeof b.ref && b.ref._stringRef === e) return b.ref;
            b = function(a1) {
                var b1 = d.refs;
                b1 === $fe54416e54b68053$var$Fg && (b1 = d.refs = {
                });
                null === a1 ? delete b1[e] : b1[e] = a1;
            };
            b._stringRef = e;
            return b;
        }
        if ("string" !== typeof a) throw Error($fe54416e54b68053$var$y(284));
        if (!c._owner) throw Error($fe54416e54b68053$var$y(290, a));
    }
    return a;
}
function $fe54416e54b68053$var$Rg(a, b) {
    if ("textarea" !== a.type) throw Error($fe54416e54b68053$var$y(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b));
}
function $fe54416e54b68053$var$Sg(a) {
    function b(b1, c) {
        if (a) {
            var d = b1.lastEffect;
            null !== d ? (d.nextEffect = c, b1.lastEffect = c) : b1.firstEffect = b1.lastEffect = c;
            c.nextEffect = null;
            c.flags = 8;
        }
    }
    function c(c1, d) {
        if (!a) return null;
        for(; null !== d;)b(c1, d), d = d.sibling;
        return null;
    }
    function d(a1, b1) {
        for(a1 = new Map; null !== b1;)null !== b1.key ? a1.set(b1.key, b1) : a1.set(b1.index, b1), b1 = b1.sibling;
        return a1;
    }
    function e(a1, b1) {
        a1 = $fe54416e54b68053$var$Tg(a1, b1);
        a1.index = 0;
        a1.sibling = null;
        return a1;
    }
    function f(b1, c1, d1) {
        b1.index = d1;
        if (!a) return c1;
        d1 = b1.alternate;
        if (null !== d1) return d1 = d1.index, d1 < c1 ? (b1.flags = 2, c1) : d1;
        b1.flags = 2;
        return c1;
    }
    function g(b1) {
        a && null === b1.alternate && (b1.flags = 2);
        return b1;
    }
    function h(a1, b1, c1, d1) {
        if (null === b1 || 6 !== b1.tag) return b1 = $fe54416e54b68053$var$Ug(c1, a1.mode, d1), b1.return = a1, b1;
        b1 = e(b1, c1);
        b1.return = a1;
        return b1;
    }
    function k(a1, b1, c1, d1) {
        if (null !== b1 && b1.elementType === c1.type) return d1 = e(b1, c1.props), d1.ref = $fe54416e54b68053$var$Qg(a1, b1, c1), d1.return = a1, d1;
        d1 = $fe54416e54b68053$var$Vg(c1.type, c1.key, c1.props, null, a1.mode, d1);
        d1.ref = $fe54416e54b68053$var$Qg(a1, b1, c1);
        d1.return = a1;
        return d1;
    }
    function l(a1, b1, c1, d1) {
        if (null === b1 || 4 !== b1.tag || b1.stateNode.containerInfo !== c1.containerInfo || b1.stateNode.implementation !== c1.implementation) return b1 = $fe54416e54b68053$var$Wg(c1, a1.mode, d1), b1.return = a1, b1;
        b1 = e(b1, c1.children || []);
        b1.return = a1;
        return b1;
    }
    function n(a1, b1, c1, d1, f1) {
        if (null === b1 || 7 !== b1.tag) return b1 = $fe54416e54b68053$var$Xg(c1, a1.mode, d1, f1), b1.return = a1, b1;
        b1 = e(b1, c1);
        b1.return = a1;
        return b1;
    }
    function A(a1, b1, c1) {
        if ("string" === typeof b1 || "number" === typeof b1) return b1 = $fe54416e54b68053$var$Ug("" + b1, a1.mode, c1), b1.return = a1, b1;
        if ("object" === typeof b1 && null !== b1) {
            switch(b1.$$typeof){
                case $fe54416e54b68053$var$sa:
                    return c1 = $fe54416e54b68053$var$Vg(b1.type, b1.key, b1.props, null, a1.mode, c1), c1.ref = $fe54416e54b68053$var$Qg(a1, null, b1), c1.return = a1, c1;
                case $fe54416e54b68053$var$ta:
                    return b1 = $fe54416e54b68053$var$Wg(b1, a1.mode, c1), b1.return = a1, b1;
            }
            if ($fe54416e54b68053$var$Pg(b1) || $fe54416e54b68053$var$La(b1)) return b1 = $fe54416e54b68053$var$Xg(b1, a1.mode, c1, null), b1.return = a1, b1;
            $fe54416e54b68053$var$Rg(a1, b1);
        }
        return null;
    }
    function p(a1, b1, c1, d1) {
        var e1 = null !== b1 ? b1.key : null;
        if ("string" === typeof c1 || "number" === typeof c1) return null !== e1 ? null : h(a1, b1, "" + c1, d1);
        if ("object" === typeof c1 && null !== c1) {
            switch(c1.$$typeof){
                case $fe54416e54b68053$var$sa:
                    return c1.key === e1 ? c1.type === $fe54416e54b68053$var$ua ? n(a1, b1, c1.props.children, d1, e1) : k(a1, b1, c1, d1) : null;
                case $fe54416e54b68053$var$ta:
                    return c1.key === e1 ? l(a1, b1, c1, d1) : null;
            }
            if ($fe54416e54b68053$var$Pg(c1) || $fe54416e54b68053$var$La(c1)) return null !== e1 ? null : n(a1, b1, c1, d1, null);
            $fe54416e54b68053$var$Rg(a1, c1);
        }
        return null;
    }
    function C(a1, b1, c1, d1, e1) {
        if ("string" === typeof d1 || "number" === typeof d1) return a1 = a1.get(c1) || null, h(b1, a1, "" + d1, e1);
        if ("object" === typeof d1 && null !== d1) {
            switch(d1.$$typeof){
                case $fe54416e54b68053$var$sa:
                    return a1 = a1.get(null === d1.key ? c1 : d1.key) || null, d1.type === $fe54416e54b68053$var$ua ? n(b1, a1, d1.props.children, e1, d1.key) : k(b1, a1, d1, e1);
                case $fe54416e54b68053$var$ta:
                    return a1 = a1.get(null === d1.key ? c1 : d1.key) || null, l(b1, a1, d1, e1);
            }
            if ($fe54416e54b68053$var$Pg(d1) || $fe54416e54b68053$var$La(d1)) return a1 = a1.get(c1) || null, n(b1, a1, d1, e1, null);
            $fe54416e54b68053$var$Rg(b1, d1);
        }
        return null;
    }
    function x(e1, g1, h1, k1) {
        for(var l1 = null, t = null, u = g1, z = g1 = 0, q = null; null !== u && z < h1.length; z++){
            u.index > z ? (q = u, u = null) : q = u.sibling;
            var n1 = p(e1, u, h1[z], k1);
            if (null === n1) {
                null === u && (u = q);
                break;
            }
            a && u && null === n1.alternate && b(e1, u);
            g1 = f(n1, g1, z);
            null === t ? l1 = n1 : t.sibling = n1;
            t = n1;
            u = q;
        }
        if (z === h1.length) return c(e1, u), l1;
        if (null === u) {
            for(; z < h1.length; z++)u = A(e1, h1[z], k1), null !== u && (g1 = f(u, g1, z), null === t ? l1 = u : t.sibling = u, t = u);
            return l1;
        }
        for(u = d(e1, u); z < h1.length; z++)q = C(u, e1, z, h1[z], k1), null !== q && (a && null !== q.alternate && u.delete(null === q.key ? z : q.key), g1 = f(q, g1, z), null === t ? l1 = q : t.sibling = q, t = q);
        a && u.forEach(function(a1) {
            return b(e1, a1);
        });
        return l1;
    }
    function w(e1, g1, h1, k1) {
        var l1 = $fe54416e54b68053$var$La(h1);
        if ("function" !== typeof l1) throw Error($fe54416e54b68053$var$y(150));
        h1 = l1.call(h1);
        if (null == h1) throw Error($fe54416e54b68053$var$y(151));
        for(var t = l1 = null, u = g1, z = g1 = 0, q = null, n2 = h1.next(); null !== u && !n2.done; z++, n2 = h1.next()){
            u.index > z ? (q = u, u = null) : q = u.sibling;
            var w1 = p(e1, u, n2.value, k1);
            if (null === w1) {
                null === u && (u = q);
                break;
            }
            a && u && null === w1.alternate && b(e1, u);
            g1 = f(w1, g1, z);
            null === t ? l1 = w1 : t.sibling = w1;
            t = w1;
            u = q;
        }
        if (n2.done) return c(e1, u), l1;
        if (null === u) {
            for(; !n2.done; z++, n2 = h1.next())n2 = A(e1, n2.value, k1), null !== n2 && (g1 = f(n2, g1, z), null === t ? l1 = n2 : t.sibling = n2, t = n2);
            return l1;
        }
        for(u = d(e1, u); !n2.done; z++, n2 = h1.next())n2 = C(u, e1, z, n2.value, k1), null !== n2 && (a && null !== n2.alternate && u.delete(null === n2.key ? z : n2.key), g1 = f(n2, g1, z), null === t ? l1 = n2 : t.sibling = n2, t = n2);
        a && u.forEach(function(a1) {
            return b(e1, a1);
        });
        return l1;
    }
    return function(a1, d1, f1, h1) {
        var k1 = "object" === typeof f1 && null !== f1 && f1.type === $fe54416e54b68053$var$ua && null === f1.key;
        k1 && (f1 = f1.props.children);
        var l1 = "object" === typeof f1 && null !== f1;
        if (l1) switch(f1.$$typeof){
            case $fe54416e54b68053$var$sa:
                a: {
                    l1 = f1.key;
                    for(k1 = d1; null !== k1;){
                        if (k1.key === l1) {
                            switch(k1.tag){
                                case 7:
                                    if (f1.type === $fe54416e54b68053$var$ua) {
                                        c(a1, k1.sibling);
                                        d1 = e(k1, f1.props.children);
                                        d1.return = a1;
                                        a1 = d1;
                                        break a;
                                    }
                                    break;
                                default:
                                    if (k1.elementType === f1.type) {
                                        c(a1, k1.sibling);
                                        d1 = e(k1, f1.props);
                                        d1.ref = $fe54416e54b68053$var$Qg(a1, k1, f1);
                                        d1.return = a1;
                                        a1 = d1;
                                        break a;
                                    }
                            }
                            c(a1, k1);
                            break;
                        } else b(a1, k1);
                        k1 = k1.sibling;
                    }
                    f1.type === $fe54416e54b68053$var$ua ? (d1 = $fe54416e54b68053$var$Xg(f1.props.children, a1.mode, h1, f1.key), d1.return = a1, a1 = d1) : (h1 = $fe54416e54b68053$var$Vg(f1.type, f1.key, f1.props, null, a1.mode, h1), h1.ref = $fe54416e54b68053$var$Qg(a1, d1, f1), h1.return = a1, a1 = h1);
                }
                return g(a1);
            case $fe54416e54b68053$var$ta:
                a: {
                    for(k1 = f1.key; null !== d1;){
                        if (d1.key === k1) {
                            if (4 === d1.tag && d1.stateNode.containerInfo === f1.containerInfo && d1.stateNode.implementation === f1.implementation) {
                                c(a1, d1.sibling);
                                d1 = e(d1, f1.children || []);
                                d1.return = a1;
                                a1 = d1;
                                break a;
                            } else {
                                c(a1, d1);
                                break;
                            }
                        } else b(a1, d1);
                        d1 = d1.sibling;
                    }
                    d1 = $fe54416e54b68053$var$Wg(f1, a1.mode, h1);
                    d1.return = a1;
                    a1 = d1;
                }
                return g(a1);
        }
        if ("string" === typeof f1 || "number" === typeof f1) return f1 = "" + f1, null !== d1 && 6 === d1.tag ? (c(a1, d1.sibling), d1 = e(d1, f1), d1.return = a1, a1 = d1) : (c(a1, d1), d1 = $fe54416e54b68053$var$Ug(f1, a1.mode, h1), d1.return = a1, a1 = d1), g(a1);
        if ($fe54416e54b68053$var$Pg(f1)) return x(a1, d1, f1, h1);
        if ($fe54416e54b68053$var$La(f1)) return w(a1, d1, f1, h1);
        l1 && $fe54416e54b68053$var$Rg(a1, f1);
        if ("undefined" === typeof f1 && !k1) switch(a1.tag){
            case 1:
            case 22:
            case 0:
            case 11:
            case 15:
                throw Error($fe54416e54b68053$var$y(152, $fe54416e54b68053$var$Ra(a1.type) || "Component"));
        }
        return c(a1, d1);
    };
}
var $fe54416e54b68053$var$Yg = $fe54416e54b68053$var$Sg(!0), $fe54416e54b68053$var$Zg = $fe54416e54b68053$var$Sg(!1), $fe54416e54b68053$var$$g = {
}, $fe54416e54b68053$var$ah = $fe54416e54b68053$var$Bf($fe54416e54b68053$var$$g), $fe54416e54b68053$var$bh = $fe54416e54b68053$var$Bf($fe54416e54b68053$var$$g), $fe54416e54b68053$var$ch = $fe54416e54b68053$var$Bf($fe54416e54b68053$var$$g);
function $fe54416e54b68053$var$dh(a) {
    if (a === $fe54416e54b68053$var$$g) throw Error($fe54416e54b68053$var$y(174));
    return a;
}
function $fe54416e54b68053$var$eh(a, b) {
    $fe54416e54b68053$var$I($fe54416e54b68053$var$ch, b);
    $fe54416e54b68053$var$I($fe54416e54b68053$var$bh, a);
    $fe54416e54b68053$var$I($fe54416e54b68053$var$ah, $fe54416e54b68053$var$$g);
    a = b.nodeType;
    switch(a){
        case 9:
        case 11:
            b = (b = b.documentElement) ? b.namespaceURI : $fe54416e54b68053$var$mb(null, "");
            break;
        default:
            a = 8 === a ? b.parentNode : b, b = a.namespaceURI || null, a = a.tagName, b = $fe54416e54b68053$var$mb(b, a);
    }
    $fe54416e54b68053$var$H($fe54416e54b68053$var$ah);
    $fe54416e54b68053$var$I($fe54416e54b68053$var$ah, b);
}
function $fe54416e54b68053$var$fh() {
    $fe54416e54b68053$var$H($fe54416e54b68053$var$ah);
    $fe54416e54b68053$var$H($fe54416e54b68053$var$bh);
    $fe54416e54b68053$var$H($fe54416e54b68053$var$ch);
}
function $fe54416e54b68053$var$gh(a) {
    $fe54416e54b68053$var$dh($fe54416e54b68053$var$ch.current);
    var b = $fe54416e54b68053$var$dh($fe54416e54b68053$var$ah.current);
    var c = $fe54416e54b68053$var$mb(b, a.type);
    b !== c && ($fe54416e54b68053$var$I($fe54416e54b68053$var$bh, a), $fe54416e54b68053$var$I($fe54416e54b68053$var$ah, c));
}
function $fe54416e54b68053$var$hh(a) {
    $fe54416e54b68053$var$bh.current === a && ($fe54416e54b68053$var$H($fe54416e54b68053$var$ah), $fe54416e54b68053$var$H($fe54416e54b68053$var$bh));
}
var $fe54416e54b68053$var$P = $fe54416e54b68053$var$Bf(0);
function $fe54416e54b68053$var$ih(a) {
    for(var b = a; null !== b;){
        if (13 === b.tag) {
            var c = b.memoizedState;
            if (null !== c && (c = c.dehydrated, null === c || "$?" === c.data || "$!" === c.data)) return b;
        } else if (19 === b.tag && (void 0) !== b.memoizedProps.revealOrder) {
            if (0 !== (b.flags & 64)) return b;
        } else if (null !== b.child) {
            b.child.return = b;
            b = b.child;
            continue;
        }
        if (b === a) break;
        for(; null === b.sibling;){
            if (null === b.return || b.return === a) return null;
            b = b.return;
        }
        b.sibling.return = b.return;
        b = b.sibling;
    }
    return null;
}
var $fe54416e54b68053$var$jh = null, $fe54416e54b68053$var$kh = null, $fe54416e54b68053$var$lh = !1;
function $fe54416e54b68053$var$mh(a, b) {
    var c = $fe54416e54b68053$var$nh(5, null, null, 0);
    c.elementType = "DELETED";
    c.type = "DELETED";
    c.stateNode = b;
    c.return = a;
    c.flags = 8;
    null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
}
function $fe54416e54b68053$var$oh(a, b) {
    switch(a.tag){
        case 5:
            var c = a.type;
            b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;
            return null !== b ? (a.stateNode = b, !0) : !1;
        case 6:
            return b = "" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;
        case 13:
            return !1;
        default:
            return !1;
    }
}
function $fe54416e54b68053$var$ph(a) {
    if ($fe54416e54b68053$var$lh) {
        var b = $fe54416e54b68053$var$kh;
        if (b) {
            var c = b;
            if (!$fe54416e54b68053$var$oh(a, b)) {
                b = $fe54416e54b68053$var$rf(c.nextSibling);
                if (!b || !$fe54416e54b68053$var$oh(a, b)) {
                    a.flags = a.flags & -1025 | 2;
                    $fe54416e54b68053$var$lh = !1;
                    $fe54416e54b68053$var$jh = a;
                    return;
                }
                $fe54416e54b68053$var$mh($fe54416e54b68053$var$jh, c);
            }
            $fe54416e54b68053$var$jh = a;
            $fe54416e54b68053$var$kh = $fe54416e54b68053$var$rf(b.firstChild);
        } else a.flags = a.flags & -1025 | 2, $fe54416e54b68053$var$lh = !1, $fe54416e54b68053$var$jh = a;
    }
}
function $fe54416e54b68053$var$qh(a) {
    for(a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag;)a = a.return;
    $fe54416e54b68053$var$jh = a;
}
function $fe54416e54b68053$var$rh(a) {
    if (a !== $fe54416e54b68053$var$jh) return !1;
    if (!$fe54416e54b68053$var$lh) return $fe54416e54b68053$var$qh(a), $fe54416e54b68053$var$lh = !0, !1;
    var b = a.type;
    if (5 !== a.tag || "head" !== b && "body" !== b && !$fe54416e54b68053$var$nf(b, a.memoizedProps)) for(b = $fe54416e54b68053$var$kh; b;)$fe54416e54b68053$var$mh(a, b), b = $fe54416e54b68053$var$rf(b.nextSibling);
    $fe54416e54b68053$var$qh(a);
    if (13 === a.tag) {
        a = a.memoizedState;
        a = null !== a ? a.dehydrated : null;
        if (!a) throw Error($fe54416e54b68053$var$y(317));
        a: {
            a = a.nextSibling;
            for(b = 0; a;){
                if (8 === a.nodeType) {
                    var c = a.data;
                    if ("/$" === c) {
                        if (0 === b) {
                            $fe54416e54b68053$var$kh = $fe54416e54b68053$var$rf(a.nextSibling);
                            break a;
                        }
                        b--;
                    } else "$" !== c && "$!" !== c && "$?" !== c || b++;
                }
                a = a.nextSibling;
            }
            $fe54416e54b68053$var$kh = null;
        }
    } else $fe54416e54b68053$var$kh = $fe54416e54b68053$var$jh ? $fe54416e54b68053$var$rf(a.stateNode.nextSibling) : null;
    return !0;
}
function $fe54416e54b68053$var$sh() {
    $fe54416e54b68053$var$kh = $fe54416e54b68053$var$jh = null;
    $fe54416e54b68053$var$lh = !1;
}
var $fe54416e54b68053$var$th = [];
function $fe54416e54b68053$var$uh() {
    for(var a = 0; a < $fe54416e54b68053$var$th.length; a++)$fe54416e54b68053$var$th[a]._workInProgressVersionPrimary = null;
    $fe54416e54b68053$var$th.length = 0;
}
var $fe54416e54b68053$var$vh = $fe54416e54b68053$var$ra.ReactCurrentDispatcher, $fe54416e54b68053$var$wh = $fe54416e54b68053$var$ra.ReactCurrentBatchConfig, $fe54416e54b68053$var$xh = 0, $fe54416e54b68053$var$R = null, $fe54416e54b68053$var$S = null, $fe54416e54b68053$var$T = null, $fe54416e54b68053$var$yh = !1, $fe54416e54b68053$var$zh = !1;
function $fe54416e54b68053$var$Ah() {
    throw Error($fe54416e54b68053$var$y(321));
}
function $fe54416e54b68053$var$Bh(a, b) {
    if (null === b) return !1;
    for(var c = 0; c < b.length && c < a.length; c++)if (!$fe54416e54b68053$var$He(a[c], b[c])) return !1;
    return !0;
}
function $fe54416e54b68053$var$Ch(a, b, c, d, e, f) {
    $fe54416e54b68053$var$xh = f;
    $fe54416e54b68053$var$R = b;
    b.memoizedState = null;
    b.updateQueue = null;
    b.lanes = 0;
    $fe54416e54b68053$var$vh.current = null === a || null === a.memoizedState ? $fe54416e54b68053$var$Dh : $fe54416e54b68053$var$Eh;
    a = c(d, e);
    if ($fe54416e54b68053$var$zh) {
        f = 0;
        do {
            $fe54416e54b68053$var$zh = !1;
            if (!(25 > f)) throw Error($fe54416e54b68053$var$y(301));
            f += 1;
            $fe54416e54b68053$var$T = $fe54416e54b68053$var$S = null;
            b.updateQueue = null;
            $fe54416e54b68053$var$vh.current = $fe54416e54b68053$var$Fh;
            a = c(d, e);
        }while ($fe54416e54b68053$var$zh)
    }
    $fe54416e54b68053$var$vh.current = $fe54416e54b68053$var$Gh;
    b = null !== $fe54416e54b68053$var$S && null !== $fe54416e54b68053$var$S.next;
    $fe54416e54b68053$var$xh = 0;
    $fe54416e54b68053$var$T = $fe54416e54b68053$var$S = $fe54416e54b68053$var$R = null;
    $fe54416e54b68053$var$yh = !1;
    if (b) throw Error($fe54416e54b68053$var$y(300));
    return a;
}
function $fe54416e54b68053$var$Hh() {
    var a = {
        memoizedState: null,
        baseState: null,
        baseQueue: null,
        queue: null,
        next: null
    };
    null === $fe54416e54b68053$var$T ? $fe54416e54b68053$var$R.memoizedState = $fe54416e54b68053$var$T = a : $fe54416e54b68053$var$T = $fe54416e54b68053$var$T.next = a;
    return $fe54416e54b68053$var$T;
}
function $fe54416e54b68053$var$Ih() {
    if (null === $fe54416e54b68053$var$S) {
        var a = $fe54416e54b68053$var$R.alternate;
        a = null !== a ? a.memoizedState : null;
    } else a = $fe54416e54b68053$var$S.next;
    var b = null === $fe54416e54b68053$var$T ? $fe54416e54b68053$var$R.memoizedState : $fe54416e54b68053$var$T.next;
    if (null !== b) $fe54416e54b68053$var$T = b, $fe54416e54b68053$var$S = a;
    else {
        if (null === a) throw Error($fe54416e54b68053$var$y(310));
        $fe54416e54b68053$var$S = a;
        a = {
            memoizedState: $fe54416e54b68053$var$S.memoizedState,
            baseState: $fe54416e54b68053$var$S.baseState,
            baseQueue: $fe54416e54b68053$var$S.baseQueue,
            queue: $fe54416e54b68053$var$S.queue,
            next: null
        };
        null === $fe54416e54b68053$var$T ? $fe54416e54b68053$var$R.memoizedState = $fe54416e54b68053$var$T = a : $fe54416e54b68053$var$T = $fe54416e54b68053$var$T.next = a;
    }
    return $fe54416e54b68053$var$T;
}
function $fe54416e54b68053$var$Jh(a, b) {
    return "function" === typeof b ? b(a) : b;
}
function $fe54416e54b68053$var$Kh(a) {
    var b = $fe54416e54b68053$var$Ih(), c = b.queue;
    if (null === c) throw Error($fe54416e54b68053$var$y(311));
    c.lastRenderedReducer = a;
    var d = $fe54416e54b68053$var$S, e = d.baseQueue, f = c.pending;
    if (null !== f) {
        if (null !== e) {
            var g = e.next;
            e.next = f.next;
            f.next = g;
        }
        d.baseQueue = e = f;
        c.pending = null;
    }
    if (null !== e) {
        e = e.next;
        d = d.baseState;
        var h = g = f = null, k = e;
        do {
            var l = k.lane;
            if (($fe54416e54b68053$var$xh & l) === l) null !== h && (h = h.next = {
                lane: 0,
                action: k.action,
                eagerReducer: k.eagerReducer,
                eagerState: k.eagerState,
                next: null
            }), d = k.eagerReducer === a ? k.eagerState : a(d, k.action);
            else {
                var n2 = {
                    lane: l,
                    action: k.action,
                    eagerReducer: k.eagerReducer,
                    eagerState: k.eagerState,
                    next: null
                };
                null === h ? (g = h = n2, f = d) : h = h.next = n2;
                $fe54416e54b68053$var$R.lanes |= l;
                $fe54416e54b68053$var$Dg |= l;
            }
            k = k.next;
        }while (null !== k && k !== e)
        null === h ? f = d : h.next = g;
        $fe54416e54b68053$var$He(d, b.memoizedState) || ($fe54416e54b68053$var$ug = !0);
        b.memoizedState = d;
        b.baseState = f;
        b.baseQueue = h;
        c.lastRenderedState = d;
    }
    return [
        b.memoizedState,
        c.dispatch
    ];
}
function $fe54416e54b68053$var$Lh(a) {
    var b = $fe54416e54b68053$var$Ih(), c = b.queue;
    if (null === c) throw Error($fe54416e54b68053$var$y(311));
    c.lastRenderedReducer = a;
    var d = c.dispatch, e = c.pending, f = b.memoizedState;
    if (null !== e) {
        c.pending = null;
        var g = e = e.next;
        do f = a(f, g.action), g = g.next;
        while (g !== e)
        $fe54416e54b68053$var$He(f, b.memoizedState) || ($fe54416e54b68053$var$ug = !0);
        b.memoizedState = f;
        null === b.baseQueue && (b.baseState = f);
        c.lastRenderedState = f;
    }
    return [
        f,
        d
    ];
}
function $fe54416e54b68053$var$Mh(a, b, c) {
    var d = b._getVersion;
    d = d(b._source);
    var e = b._workInProgressVersionPrimary;
    if (null !== e) a = e === d;
    else if (a = a.mutableReadLanes, a = ($fe54416e54b68053$var$xh & a) === a) b._workInProgressVersionPrimary = d, $fe54416e54b68053$var$th.push(b);
    if (a) return c(b._source);
    $fe54416e54b68053$var$th.push(b);
    throw Error($fe54416e54b68053$var$y(350));
}
function $fe54416e54b68053$var$Nh(a, b, c, d) {
    var e = $fe54416e54b68053$var$U;
    if (null === e) throw Error($fe54416e54b68053$var$y(349));
    var f = b._getVersion, g = f(b._source), h = $fe54416e54b68053$var$vh.current, k = h.useState(function() {
        return $fe54416e54b68053$var$Mh(e, b, c);
    }), l = k[1], n3 = k[0];
    k = $fe54416e54b68053$var$T;
    var A = a.memoizedState, p = A.refs, C = p.getSnapshot, x = A.source;
    A = A.subscribe;
    var w2 = $fe54416e54b68053$var$R;
    a.memoizedState = {
        refs: p,
        source: b,
        subscribe: d
    };
    h.useEffect(function() {
        p.getSnapshot = c;
        p.setSnapshot = l;
        var a1 = f(b._source);
        if (!$fe54416e54b68053$var$He(g, a1)) {
            a1 = c(b._source);
            $fe54416e54b68053$var$He(n3, a1) || (l(a1), a1 = $fe54416e54b68053$var$Ig(w2), e.mutableReadLanes |= a1 & e.pendingLanes);
            a1 = e.mutableReadLanes;
            e.entangledLanes |= a1;
            for(var d1 = e.entanglements, h1 = a1; 0 < h1;){
                var k1 = 31 - $fe54416e54b68053$var$Vc(h1), v = 1 << k1;
                d1[k1] |= a1;
                h1 &= ~v;
            }
        }
    }, [
        c,
        b,
        d
    ]);
    h.useEffect(function() {
        return d(b._source, function() {
            var a1 = p.getSnapshot, c1 = p.setSnapshot;
            try {
                c1(a1(b._source));
                var d2 = $fe54416e54b68053$var$Ig(w2);
                e.mutableReadLanes |= d2 & e.pendingLanes;
            } catch (q) {
                c1(function() {
                    throw q;
                });
            }
        });
    }, [
        b,
        d
    ]);
    $fe54416e54b68053$var$He(C, c) && $fe54416e54b68053$var$He(x, b) && $fe54416e54b68053$var$He(A, d) || (a = {
        pending: null,
        dispatch: null,
        lastRenderedReducer: $fe54416e54b68053$var$Jh,
        lastRenderedState: n3
    }, a.dispatch = l = $fe54416e54b68053$var$Oh.bind(null, $fe54416e54b68053$var$R, a), k.queue = a, k.baseQueue = null, n3 = $fe54416e54b68053$var$Mh(e, b, c), k.memoizedState = k.baseState = n3);
    return n3;
}
function $fe54416e54b68053$var$Ph(a, b, c) {
    var d2 = $fe54416e54b68053$var$Ih();
    return $fe54416e54b68053$var$Nh(d2, a, b, c);
}
function $fe54416e54b68053$var$Qh(a) {
    var b = $fe54416e54b68053$var$Hh();
    "function" === typeof a && (a = a());
    b.memoizedState = b.baseState = a;
    a = b.queue = {
        pending: null,
        dispatch: null,
        lastRenderedReducer: $fe54416e54b68053$var$Jh,
        lastRenderedState: a
    };
    a = a.dispatch = $fe54416e54b68053$var$Oh.bind(null, $fe54416e54b68053$var$R, a);
    return [
        b.memoizedState,
        a
    ];
}
function $fe54416e54b68053$var$Rh(a, b, c, d2) {
    a = {
        tag: a,
        create: b,
        destroy: c,
        deps: d2,
        next: null
    };
    b = $fe54416e54b68053$var$R.updateQueue;
    null === b ? (b = {
        lastEffect: null
    }, $fe54416e54b68053$var$R.updateQueue = b, b.lastEffect = a.next = a) : (c = b.lastEffect, null === c ? b.lastEffect = a.next = a : (d2 = c.next, c.next = a, a.next = d2, b.lastEffect = a));
    return a;
}
function $fe54416e54b68053$var$Sh(a) {
    var b = $fe54416e54b68053$var$Hh();
    a = {
        current: a
    };
    return b.memoizedState = a;
}
function $fe54416e54b68053$var$Th() {
    return $fe54416e54b68053$var$Ih().memoizedState;
}
function $fe54416e54b68053$var$Uh(a, b, c, d2) {
    var e = $fe54416e54b68053$var$Hh();
    $fe54416e54b68053$var$R.flags |= a;
    e.memoizedState = $fe54416e54b68053$var$Rh(1 | b, c, void 0, (void 0) === d2 ? null : d2);
}
function $fe54416e54b68053$var$Vh(a, b, c, d2) {
    var e = $fe54416e54b68053$var$Ih();
    d2 = (void 0) === d2 ? null : d2;
    var f = void 0;
    if (null !== $fe54416e54b68053$var$S) {
        var g = $fe54416e54b68053$var$S.memoizedState;
        f = g.destroy;
        if (null !== d2 && $fe54416e54b68053$var$Bh(d2, g.deps)) {
            $fe54416e54b68053$var$Rh(b, c, f, d2);
            return;
        }
    }
    $fe54416e54b68053$var$R.flags |= a;
    e.memoizedState = $fe54416e54b68053$var$Rh(1 | b, c, f, d2);
}
function $fe54416e54b68053$var$Wh(a, b) {
    return $fe54416e54b68053$var$Uh(516, 4, a, b);
}
function $fe54416e54b68053$var$Xh(a, b) {
    return $fe54416e54b68053$var$Vh(516, 4, a, b);
}
function $fe54416e54b68053$var$Yh(a, b) {
    return $fe54416e54b68053$var$Vh(4, 2, a, b);
}
function $fe54416e54b68053$var$Zh(a, b) {
    if ("function" === typeof b) return a = a(), b(a), function() {
        b(null);
    };
    if (null !== b && (void 0) !== b) return a = a(), b.current = a, function() {
        b.current = null;
    };
}
function $fe54416e54b68053$var$$h(a, b, c) {
    c = null !== c && (void 0) !== c ? c.concat([
        a
    ]) : null;
    return $fe54416e54b68053$var$Vh(4, 2, $fe54416e54b68053$var$Zh.bind(null, b, a), c);
}
function $fe54416e54b68053$var$ai() {
}
function $fe54416e54b68053$var$bi(a, b) {
    var c = $fe54416e54b68053$var$Ih();
    b = (void 0) === b ? null : b;
    var d2 = c.memoizedState;
    if (null !== d2 && null !== b && $fe54416e54b68053$var$Bh(b, d2[1])) return d2[0];
    c.memoizedState = [
        a,
        b
    ];
    return a;
}
function $fe54416e54b68053$var$ci(a, b) {
    var c = $fe54416e54b68053$var$Ih();
    b = (void 0) === b ? null : b;
    var d2 = c.memoizedState;
    if (null !== d2 && null !== b && $fe54416e54b68053$var$Bh(b, d2[1])) return d2[0];
    a = a();
    c.memoizedState = [
        a,
        b
    ];
    return a;
}
function $fe54416e54b68053$var$di(a, b) {
    var c = $fe54416e54b68053$var$eg();
    $fe54416e54b68053$var$gg(98 > c ? 98 : c, function() {
        a(!0);
    });
    $fe54416e54b68053$var$gg(97 < c ? 97 : c, function() {
        var c1 = $fe54416e54b68053$var$wh.transition;
        $fe54416e54b68053$var$wh.transition = 1;
        try {
            a(!1), b();
        } finally{
            $fe54416e54b68053$var$wh.transition = c1;
        }
    });
}
function $fe54416e54b68053$var$Oh(a, b, c) {
    var d2 = $fe54416e54b68053$var$Hg(), e = $fe54416e54b68053$var$Ig(a), f = {
        lane: e,
        action: c,
        eagerReducer: null,
        eagerState: null,
        next: null
    }, g = b.pending;
    null === g ? f.next = f : (f.next = g.next, g.next = f);
    b.pending = f;
    g = a.alternate;
    if (a === $fe54416e54b68053$var$R || null !== g && g === $fe54416e54b68053$var$R) $fe54416e54b68053$var$zh = $fe54416e54b68053$var$yh = !0;
    else {
        if (0 === a.lanes && (null === g || 0 === g.lanes) && (g = b.lastRenderedReducer, null !== g)) try {
            var h2 = b.lastRenderedState, k2 = g(h2, c);
            f.eagerReducer = g;
            f.eagerState = k2;
            if ($fe54416e54b68053$var$He(k2, h2)) return;
        } catch (l) {
        } finally{
        }
        $fe54416e54b68053$var$Jg(a, e, d2);
    }
}
var $fe54416e54b68053$var$Gh = {
    readContext: $fe54416e54b68053$var$vg,
    useCallback: $fe54416e54b68053$var$Ah,
    useContext: $fe54416e54b68053$var$Ah,
    useEffect: $fe54416e54b68053$var$Ah,
    useImperativeHandle: $fe54416e54b68053$var$Ah,
    useLayoutEffect: $fe54416e54b68053$var$Ah,
    useMemo: $fe54416e54b68053$var$Ah,
    useReducer: $fe54416e54b68053$var$Ah,
    useRef: $fe54416e54b68053$var$Ah,
    useState: $fe54416e54b68053$var$Ah,
    useDebugValue: $fe54416e54b68053$var$Ah,
    useDeferredValue: $fe54416e54b68053$var$Ah,
    useTransition: $fe54416e54b68053$var$Ah,
    useMutableSource: $fe54416e54b68053$var$Ah,
    useOpaqueIdentifier: $fe54416e54b68053$var$Ah,
    unstable_isNewReconciler: !1
}, $fe54416e54b68053$var$Dh = {
    readContext: $fe54416e54b68053$var$vg,
    useCallback: function(a, b) {
        $fe54416e54b68053$var$Hh().memoizedState = [
            a,
            (void 0) === b ? null : b
        ];
        return a;
    },
    useContext: $fe54416e54b68053$var$vg,
    useEffect: $fe54416e54b68053$var$Wh,
    useImperativeHandle: function(a, b, c) {
        c = null !== c && (void 0) !== c ? c.concat([
            a
        ]) : null;
        return $fe54416e54b68053$var$Uh(4, 2, $fe54416e54b68053$var$Zh.bind(null, b, a), c);
    },
    useLayoutEffect: function(a, b) {
        return $fe54416e54b68053$var$Uh(4, 2, a, b);
    },
    useMemo: function(a, b) {
        var c = $fe54416e54b68053$var$Hh();
        b = (void 0) === b ? null : b;
        a = a();
        c.memoizedState = [
            a,
            b
        ];
        return a;
    },
    useReducer: function(a, b, c) {
        var d2 = $fe54416e54b68053$var$Hh();
        b = (void 0) !== c ? c(b) : b;
        d2.memoizedState = d2.baseState = b;
        a = d2.queue = {
            pending: null,
            dispatch: null,
            lastRenderedReducer: a,
            lastRenderedState: b
        };
        a = a.dispatch = $fe54416e54b68053$var$Oh.bind(null, $fe54416e54b68053$var$R, a);
        return [
            d2.memoizedState,
            a
        ];
    },
    useRef: $fe54416e54b68053$var$Sh,
    useState: $fe54416e54b68053$var$Qh,
    useDebugValue: $fe54416e54b68053$var$ai,
    useDeferredValue: function(a) {
        var b = $fe54416e54b68053$var$Qh(a), c = b[0], d2 = b[1];
        $fe54416e54b68053$var$Wh(function() {
            var b1 = $fe54416e54b68053$var$wh.transition;
            $fe54416e54b68053$var$wh.transition = 1;
            try {
                d2(a);
            } finally{
                $fe54416e54b68053$var$wh.transition = b1;
            }
        }, [
            a
        ]);
        return c;
    },
    useTransition: function() {
        var a = $fe54416e54b68053$var$Qh(!1), b = a[0];
        a = $fe54416e54b68053$var$di.bind(null, a[1]);
        $fe54416e54b68053$var$Sh(a);
        return [
            a,
            b
        ];
    },
    useMutableSource: function(a, b, c) {
        var d2 = $fe54416e54b68053$var$Hh();
        d2.memoizedState = {
            refs: {
                getSnapshot: b,
                setSnapshot: null
            },
            source: a,
            subscribe: c
        };
        return $fe54416e54b68053$var$Nh(d2, a, b, c);
    },
    useOpaqueIdentifier: function() {
        if ($fe54416e54b68053$var$lh) {
            var a = !1, b = $fe54416e54b68053$var$uf(function() {
                a || (a = !0, c("r:" + ($fe54416e54b68053$var$tf++).toString(36)));
                throw Error($fe54416e54b68053$var$y(355));
            }), c = $fe54416e54b68053$var$Qh(b)[1];
            0 === ($fe54416e54b68053$var$R.mode & 2) && ($fe54416e54b68053$var$R.flags |= 516, $fe54416e54b68053$var$Rh(5, function() {
                c("r:" + ($fe54416e54b68053$var$tf++).toString(36));
            }, void 0, null));
            return b;
        }
        b = "r:" + ($fe54416e54b68053$var$tf++).toString(36);
        $fe54416e54b68053$var$Qh(b);
        return b;
    },
    unstable_isNewReconciler: !1
}, $fe54416e54b68053$var$Eh = {
    readContext: $fe54416e54b68053$var$vg,
    useCallback: $fe54416e54b68053$var$bi,
    useContext: $fe54416e54b68053$var$vg,
    useEffect: $fe54416e54b68053$var$Xh,
    useImperativeHandle: $fe54416e54b68053$var$$h,
    useLayoutEffect: $fe54416e54b68053$var$Yh,
    useMemo: $fe54416e54b68053$var$ci,
    useReducer: $fe54416e54b68053$var$Kh,
    useRef: $fe54416e54b68053$var$Th,
    useState: function() {
        return $fe54416e54b68053$var$Kh($fe54416e54b68053$var$Jh);
    },
    useDebugValue: $fe54416e54b68053$var$ai,
    useDeferredValue: function(a) {
        var b = $fe54416e54b68053$var$Kh($fe54416e54b68053$var$Jh), c = b[0], d2 = b[1];
        $fe54416e54b68053$var$Xh(function() {
            var b1 = $fe54416e54b68053$var$wh.transition;
            $fe54416e54b68053$var$wh.transition = 1;
            try {
                d2(a);
            } finally{
                $fe54416e54b68053$var$wh.transition = b1;
            }
        }, [
            a
        ]);
        return c;
    },
    useTransition: function() {
        var a = $fe54416e54b68053$var$Kh($fe54416e54b68053$var$Jh)[0];
        return [
            $fe54416e54b68053$var$Th().current,
            a
        ];
    },
    useMutableSource: $fe54416e54b68053$var$Ph,
    useOpaqueIdentifier: function() {
        return $fe54416e54b68053$var$Kh($fe54416e54b68053$var$Jh)[0];
    },
    unstable_isNewReconciler: !1
}, $fe54416e54b68053$var$Fh = {
    readContext: $fe54416e54b68053$var$vg,
    useCallback: $fe54416e54b68053$var$bi,
    useContext: $fe54416e54b68053$var$vg,
    useEffect: $fe54416e54b68053$var$Xh,
    useImperativeHandle: $fe54416e54b68053$var$$h,
    useLayoutEffect: $fe54416e54b68053$var$Yh,
    useMemo: $fe54416e54b68053$var$ci,
    useReducer: $fe54416e54b68053$var$Lh,
    useRef: $fe54416e54b68053$var$Th,
    useState: function() {
        return $fe54416e54b68053$var$Lh($fe54416e54b68053$var$Jh);
    },
    useDebugValue: $fe54416e54b68053$var$ai,
    useDeferredValue: function(a) {
        var b = $fe54416e54b68053$var$Lh($fe54416e54b68053$var$Jh), c = b[0], d2 = b[1];
        $fe54416e54b68053$var$Xh(function() {
            var b1 = $fe54416e54b68053$var$wh.transition;
            $fe54416e54b68053$var$wh.transition = 1;
            try {
                d2(a);
            } finally{
                $fe54416e54b68053$var$wh.transition = b1;
            }
        }, [
            a
        ]);
        return c;
    },
    useTransition: function() {
        var a = $fe54416e54b68053$var$Lh($fe54416e54b68053$var$Jh)[0];
        return [
            $fe54416e54b68053$var$Th().current,
            a
        ];
    },
    useMutableSource: $fe54416e54b68053$var$Ph,
    useOpaqueIdentifier: function() {
        return $fe54416e54b68053$var$Lh($fe54416e54b68053$var$Jh)[0];
    },
    unstable_isNewReconciler: !1
}, $fe54416e54b68053$var$ei = $fe54416e54b68053$var$ra.ReactCurrentOwner, $fe54416e54b68053$var$ug = !1;
function $fe54416e54b68053$var$fi(a, b, c, d2) {
    b.child = null === a ? $fe54416e54b68053$var$Zg(b, null, c, d2) : $fe54416e54b68053$var$Yg(b, a.child, c, d2);
}
function $fe54416e54b68053$var$gi(a, b, c, d2, e) {
    c = c.render;
    var f = b.ref;
    $fe54416e54b68053$var$tg(b, e);
    d2 = $fe54416e54b68053$var$Ch(a, b, c, d2, f, e);
    if (null !== a && !$fe54416e54b68053$var$ug) return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, $fe54416e54b68053$var$hi(a, b, e);
    b.flags |= 1;
    $fe54416e54b68053$var$fi(a, b, d2, e);
    return b.child;
}
function $fe54416e54b68053$var$ii(a, b, c, d2, e, f) {
    if (null === a) {
        var g = c.type;
        if ("function" === typeof g && !$fe54416e54b68053$var$ji(g) && (void 0) === g.defaultProps && null === c.compare && (void 0) === c.defaultProps) return b.tag = 15, b.type = g, $fe54416e54b68053$var$ki(a, b, g, d2, e, f);
        a = $fe54416e54b68053$var$Vg(c.type, null, d2, b, b.mode, f);
        a.ref = b.ref;
        a.return = b;
        return b.child = a;
    }
    g = a.child;
    if (0 === (e & f) && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : $fe54416e54b68053$var$Je, c(e, d2) && a.ref === b.ref)) return $fe54416e54b68053$var$hi(a, b, f);
    b.flags |= 1;
    a = $fe54416e54b68053$var$Tg(g, d2);
    a.ref = b.ref;
    a.return = b;
    return b.child = a;
}
function $fe54416e54b68053$var$ki(a, b, c, d2, e, f) {
    if (null !== a && $fe54416e54b68053$var$Je(a.memoizedProps, d2) && a.ref === b.ref) {
        if ($fe54416e54b68053$var$ug = !1, 0 !== (f & e)) 0 !== (a.flags & 16384) && ($fe54416e54b68053$var$ug = !0);
        else return b.lanes = a.lanes, $fe54416e54b68053$var$hi(a, b, f);
    }
    return $fe54416e54b68053$var$li(a, b, c, d2, f);
}
function $fe54416e54b68053$var$mi(a, b, c) {
    var d2 = b.pendingProps, e = d2.children, f = null !== a ? a.memoizedState : null;
    if ("hidden" === d2.mode || "unstable-defer-without-hiding" === d2.mode) {
        if (0 === (b.mode & 4)) b.memoizedState = {
            baseLanes: 0
        }, $fe54416e54b68053$var$ni(b, c);
        else if (0 !== (c & 1073741824)) b.memoizedState = {
            baseLanes: 0
        }, $fe54416e54b68053$var$ni(b, null !== f ? f.baseLanes : c);
        else return a = null !== f ? f.baseLanes | c : c, b.lanes = b.childLanes = 1073741824, b.memoizedState = {
            baseLanes: a
        }, $fe54416e54b68053$var$ni(b, a), null;
    } else null !== f ? (d2 = f.baseLanes | c, b.memoizedState = null) : d2 = c, $fe54416e54b68053$var$ni(b, d2);
    $fe54416e54b68053$var$fi(a, b, e, c);
    return b.child;
}
function $fe54416e54b68053$var$oi(a, b) {
    var c = b.ref;
    if (null === a && null !== c || null !== a && a.ref !== c) b.flags |= 128;
}
function $fe54416e54b68053$var$li(a, b, c, d2, e) {
    var f = $fe54416e54b68053$var$Ff(c) ? $fe54416e54b68053$var$Df : $fe54416e54b68053$var$M.current;
    f = $fe54416e54b68053$var$Ef(b, f);
    $fe54416e54b68053$var$tg(b, e);
    c = $fe54416e54b68053$var$Ch(a, b, c, d2, f, e);
    if (null !== a && !$fe54416e54b68053$var$ug) return b.updateQueue = a.updateQueue, b.flags &= -517, a.lanes &= ~e, $fe54416e54b68053$var$hi(a, b, e);
    b.flags |= 1;
    $fe54416e54b68053$var$fi(a, b, c, e);
    return b.child;
}
function $fe54416e54b68053$var$pi(a, b, c, d2, e) {
    if ($fe54416e54b68053$var$Ff(c)) {
        var f = !0;
        $fe54416e54b68053$var$Jf(b);
    } else f = !1;
    $fe54416e54b68053$var$tg(b, e);
    if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), $fe54416e54b68053$var$Mg(b, c, d2), $fe54416e54b68053$var$Og(b, c, d2, e), d2 = !0;
    else if (null === a) {
        var g = b.stateNode, h3 = b.memoizedProps;
        g.props = h3;
        var k3 = g.context, l = c.contextType;
        "object" === typeof l && null !== l ? l = $fe54416e54b68053$var$vg(l) : (l = $fe54416e54b68053$var$Ff(c) ? $fe54416e54b68053$var$Df : $fe54416e54b68053$var$M.current, l = $fe54416e54b68053$var$Ef(b, l));
        var n3 = c.getDerivedStateFromProps, A = "function" === typeof n3 || "function" === typeof g.getSnapshotBeforeUpdate;
        A || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h3 !== d2 || k3 !== l) && $fe54416e54b68053$var$Ng(b, g, d2, l);
        $fe54416e54b68053$var$wg = !1;
        var p = b.memoizedState;
        g.state = p;
        $fe54416e54b68053$var$Cg(b, d2, g, e);
        k3 = b.memoizedState;
        h3 !== d2 || p !== k3 || $fe54416e54b68053$var$N.current || $fe54416e54b68053$var$wg ? ("function" === typeof n3 && ($fe54416e54b68053$var$Gg(b, c, n3, d2), k3 = b.memoizedState), (h3 = $fe54416e54b68053$var$wg || $fe54416e54b68053$var$Lg(b, c, h3, d2, p, k3, l)) ? (A || "function" !== typeof g.UNSAFE_componentWillMount && "function" !== typeof g.componentWillMount || ("function" === typeof g.componentWillMount && g.componentWillMount(), "function" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), "function" === typeof g.componentDidMount && (b.flags |= 4)) : ("function" === typeof g.componentDidMount && (b.flags |= 4), b.memoizedProps = d2, b.memoizedState = k3), g.props = d2, g.state = k3, g.context = l, d2 = h3) : ("function" === typeof g.componentDidMount && (b.flags |= 4), d2 = !1);
    } else {
        g = b.stateNode;
        $fe54416e54b68053$var$yg(a, b);
        h3 = b.memoizedProps;
        l = b.type === b.elementType ? h3 : $fe54416e54b68053$var$lg(b.type, h3);
        g.props = l;
        A = b.pendingProps;
        p = g.context;
        k3 = c.contextType;
        "object" === typeof k3 && null !== k3 ? k3 = $fe54416e54b68053$var$vg(k3) : (k3 = $fe54416e54b68053$var$Ff(c) ? $fe54416e54b68053$var$Df : $fe54416e54b68053$var$M.current, k3 = $fe54416e54b68053$var$Ef(b, k3));
        var C = c.getDerivedStateFromProps;
        (n3 = "function" === typeof C || "function" === typeof g.getSnapshotBeforeUpdate) || "function" !== typeof g.UNSAFE_componentWillReceiveProps && "function" !== typeof g.componentWillReceiveProps || (h3 !== A || p !== k3) && $fe54416e54b68053$var$Ng(b, g, d2, k3);
        $fe54416e54b68053$var$wg = !1;
        p = b.memoizedState;
        g.state = p;
        $fe54416e54b68053$var$Cg(b, d2, g, e);
        var x = b.memoizedState;
        h3 !== A || p !== x || $fe54416e54b68053$var$N.current || $fe54416e54b68053$var$wg ? ("function" === typeof C && ($fe54416e54b68053$var$Gg(b, c, C, d2), x = b.memoizedState), (l = $fe54416e54b68053$var$wg || $fe54416e54b68053$var$Lg(b, c, l, d2, p, x, k3)) ? (n3 || "function" !== typeof g.UNSAFE_componentWillUpdate && "function" !== typeof g.componentWillUpdate || ("function" === typeof g.componentWillUpdate && g.componentWillUpdate(d2, x, k3), "function" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d2, x, k3)), "function" === typeof g.componentDidUpdate && (b.flags |= 4), "function" === typeof g.getSnapshotBeforeUpdate && (b.flags |= 256)) : ("function" !== typeof g.componentDidUpdate || h3 === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h3 === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), b.memoizedProps = d2, b.memoizedState = x), g.props = d2, g.state = x, g.context = k3, d2 = l) : ("function" !== typeof g.componentDidUpdate || h3 === a.memoizedProps && p === a.memoizedState || (b.flags |= 4), "function" !== typeof g.getSnapshotBeforeUpdate || h3 === a.memoizedProps && p === a.memoizedState || (b.flags |= 256), d2 = !1);
    }
    return $fe54416e54b68053$var$qi(a, b, c, d2, f, e);
}
function $fe54416e54b68053$var$qi(a, b, c, d2, e, f) {
    $fe54416e54b68053$var$oi(a, b);
    var g = 0 !== (b.flags & 64);
    if (!d2 && !g) return e && $fe54416e54b68053$var$Kf(b, c, !1), $fe54416e54b68053$var$hi(a, b, f);
    d2 = b.stateNode;
    $fe54416e54b68053$var$ei.current = b;
    var h4 = g && "function" !== typeof c.getDerivedStateFromError ? null : d2.render();
    b.flags |= 1;
    null !== a && g ? (b.child = $fe54416e54b68053$var$Yg(b, a.child, null, f), b.child = $fe54416e54b68053$var$Yg(b, null, h4, f)) : $fe54416e54b68053$var$fi(a, b, h4, f);
    b.memoizedState = d2.state;
    e && $fe54416e54b68053$var$Kf(b, c, !0);
    return b.child;
}
function $fe54416e54b68053$var$ri(a) {
    var b = a.stateNode;
    b.pendingContext ? $fe54416e54b68053$var$Hf(a, b.pendingContext, b.pendingContext !== b.context) : b.context && $fe54416e54b68053$var$Hf(a, b.context, !1);
    $fe54416e54b68053$var$eh(a, b.containerInfo);
}
var $fe54416e54b68053$var$si = {
    dehydrated: null,
    retryLane: 0
};
function $fe54416e54b68053$var$ti(a, b, c) {
    var d2 = b.pendingProps, e = $fe54416e54b68053$var$P.current, f = !1, g;
    (g = 0 !== (b.flags & 64)) || (g = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2));
    g ? (f = !0, b.flags &= -65) : null !== a && null === a.memoizedState || (void 0) === d2.fallback || !0 === d2.unstable_avoidThisFallback || (e |= 1);
    $fe54416e54b68053$var$I($fe54416e54b68053$var$P, e & 1);
    if (null === a) {
        (void 0) !== d2.fallback && $fe54416e54b68053$var$ph(b);
        a = d2.children;
        e = d2.fallback;
        if (f) return a = $fe54416e54b68053$var$ui(b, a, e, c), b.child.memoizedState = {
            baseLanes: c
        }, b.memoizedState = $fe54416e54b68053$var$si, a;
        if ("number" === typeof d2.unstable_expectedLoadTime) return a = $fe54416e54b68053$var$ui(b, a, e, c), b.child.memoizedState = {
            baseLanes: c
        }, b.memoizedState = $fe54416e54b68053$var$si, b.lanes = 33554432, a;
        c = $fe54416e54b68053$var$vi({
            mode: "visible",
            children: a
        }, b.mode, c, null);
        c.return = b;
        return b.child = c;
    }
    if (null !== a.memoizedState) {
        if (f) return d2 = $fe54416e54b68053$var$wi(a, b, d2.children, d2.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? {
            baseLanes: c
        } : {
            baseLanes: e.baseLanes | c
        }, f.childLanes = a.childLanes & ~c, b.memoizedState = $fe54416e54b68053$var$si, d2;
        c = $fe54416e54b68053$var$xi(a, b, d2.children, c);
        b.memoizedState = null;
        return c;
    }
    if (f) return d2 = $fe54416e54b68053$var$wi(a, b, d2.children, d2.fallback, c), f = b.child, e = a.child.memoizedState, f.memoizedState = null === e ? {
        baseLanes: c
    } : {
        baseLanes: e.baseLanes | c
    }, f.childLanes = a.childLanes & ~c, b.memoizedState = $fe54416e54b68053$var$si, d2;
    c = $fe54416e54b68053$var$xi(a, b, d2.children, c);
    b.memoizedState = null;
    return c;
}
function $fe54416e54b68053$var$ui(a, b, c, d2) {
    var e = a.mode, f = a.child;
    b = {
        mode: "hidden",
        children: b
    };
    0 === (e & 2) && null !== f ? (f.childLanes = 0, f.pendingProps = b) : f = $fe54416e54b68053$var$vi(b, e, 0, null);
    c = $fe54416e54b68053$var$Xg(c, e, d2, null);
    f.return = a;
    c.return = a;
    f.sibling = c;
    a.child = f;
    return c;
}
function $fe54416e54b68053$var$xi(a, b, c, d2) {
    var e = a.child;
    a = e.sibling;
    c = $fe54416e54b68053$var$Tg(e, {
        mode: "visible",
        children: c
    });
    0 === (b.mode & 2) && (c.lanes = d2);
    c.return = b;
    c.sibling = null;
    null !== a && (a.nextEffect = null, a.flags = 8, b.firstEffect = b.lastEffect = a);
    return b.child = c;
}
function $fe54416e54b68053$var$wi(a, b, c, d2, e) {
    var f = b.mode, g = a.child;
    a = g.sibling;
    var h4 = {
        mode: "hidden",
        children: c
    };
    0 === (f & 2) && b.child !== g ? (c = b.child, c.childLanes = 0, c.pendingProps = h4, g = c.lastEffect, null !== g ? (b.firstEffect = c.firstEffect, b.lastEffect = g, g.nextEffect = null) : b.firstEffect = b.lastEffect = null) : c = $fe54416e54b68053$var$Tg(g, h4);
    null !== a ? d2 = $fe54416e54b68053$var$Tg(a, d2) : (d2 = $fe54416e54b68053$var$Xg(d2, f, e, null), d2.flags |= 2);
    d2.return = b;
    c.return = b;
    c.sibling = d2;
    b.child = c;
    return d2;
}
function $fe54416e54b68053$var$yi(a, b) {
    a.lanes |= b;
    var c = a.alternate;
    null !== c && (c.lanes |= b);
    $fe54416e54b68053$var$sg(a.return, b);
}
function $fe54416e54b68053$var$zi(a, b, c, d2, e, f) {
    var g = a.memoizedState;
    null === g ? a.memoizedState = {
        isBackwards: b,
        rendering: null,
        renderingStartTime: 0,
        last: d2,
        tail: c,
        tailMode: e,
        lastEffect: f
    } : (g.isBackwards = b, g.rendering = null, g.renderingStartTime = 0, g.last = d2, g.tail = c, g.tailMode = e, g.lastEffect = f);
}
function $fe54416e54b68053$var$Ai(a, b, c) {
    var d2 = b.pendingProps, e = d2.revealOrder, f = d2.tail;
    $fe54416e54b68053$var$fi(a, b, d2.children, c);
    d2 = $fe54416e54b68053$var$P.current;
    if (0 !== (d2 & 2)) d2 = d2 & 1 | 2, b.flags |= 64;
    else {
        if (null !== a && 0 !== (a.flags & 64)) a: for(a = b.child; null !== a;){
            if (13 === a.tag) null !== a.memoizedState && $fe54416e54b68053$var$yi(a, c);
            else if (19 === a.tag) $fe54416e54b68053$var$yi(a, c);
            else if (null !== a.child) {
                a.child.return = a;
                a = a.child;
                continue;
            }
            if (a === b) break a;
            for(; null === a.sibling;){
                if (null === a.return || a.return === b) break a;
                a = a.return;
            }
            a.sibling.return = a.return;
            a = a.sibling;
        }
        d2 &= 1;
    }
    $fe54416e54b68053$var$I($fe54416e54b68053$var$P, d2);
    if (0 === (b.mode & 2)) b.memoizedState = null;
    else switch(e){
        case "forwards":
            c = b.child;
            for(e = null; null !== c;)a = c.alternate, null !== a && null === $fe54416e54b68053$var$ih(a) && (e = c), c = c.sibling;
            c = e;
            null === c ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null);
            $fe54416e54b68053$var$zi(b, !1, e, c, f, b.lastEffect);
            break;
        case "backwards":
            c = null;
            e = b.child;
            for(b.child = null; null !== e;){
                a = e.alternate;
                if (null !== a && null === $fe54416e54b68053$var$ih(a)) {
                    b.child = e;
                    break;
                }
                a = e.sibling;
                e.sibling = c;
                c = e;
                e = a;
            }
            $fe54416e54b68053$var$zi(b, !0, c, null, f, b.lastEffect);
            break;
        case "together":
            $fe54416e54b68053$var$zi(b, !1, null, null, void 0, b.lastEffect);
            break;
        default:
            b.memoizedState = null;
    }
    return b.child;
}
function $fe54416e54b68053$var$hi(a, b, c) {
    null !== a && (b.dependencies = a.dependencies);
    $fe54416e54b68053$var$Dg |= b.lanes;
    if (0 !== (c & b.childLanes)) {
        if (null !== a && b.child !== a.child) throw Error($fe54416e54b68053$var$y(153));
        if (null !== b.child) {
            a = b.child;
            c = $fe54416e54b68053$var$Tg(a, a.pendingProps);
            b.child = c;
            for(c.return = b; null !== a.sibling;)a = a.sibling, c = c.sibling = $fe54416e54b68053$var$Tg(a, a.pendingProps), c.return = b;
            c.sibling = null;
        }
        return b.child;
    }
    return null;
}
var $fe54416e54b68053$var$Bi, $fe54416e54b68053$var$Ci, $fe54416e54b68053$var$Di, $fe54416e54b68053$var$Ei;
$fe54416e54b68053$var$Bi = function(a, b) {
    for(var c = b.child; null !== c;){
        if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);
        else if (4 !== c.tag && null !== c.child) {
            c.child.return = c;
            c = c.child;
            continue;
        }
        if (c === b) break;
        for(; null === c.sibling;){
            if (null === c.return || c.return === b) return;
            c = c.return;
        }
        c.sibling.return = c.return;
        c = c.sibling;
    }
};
$fe54416e54b68053$var$Ci = function() {
};
$fe54416e54b68053$var$Di = function(a, b, c, d2) {
    var e = a.memoizedProps;
    if (e !== d2) {
        a = b.stateNode;
        $fe54416e54b68053$var$dh($fe54416e54b68053$var$ah.current);
        var f = null;
        switch(c){
            case "input":
                e = $fe54416e54b68053$var$Ya(a, e);
                d2 = $fe54416e54b68053$var$Ya(a, d2);
                f = [];
                break;
            case "option":
                e = $fe54416e54b68053$var$eb(a, e);
                d2 = $fe54416e54b68053$var$eb(a, d2);
                f = [];
                break;
            case "select":
                e = $lz3cj({
                }, e, {
                    value: void 0
                });
                d2 = $lz3cj({
                }, d2, {
                    value: void 0
                });
                f = [];
                break;
            case "textarea":
                e = $fe54416e54b68053$var$gb(a, e);
                d2 = $fe54416e54b68053$var$gb(a, d2);
                f = [];
                break;
            default:
                "function" !== typeof e.onClick && "function" === typeof d2.onClick && (a.onclick = $fe54416e54b68053$var$jf);
        }
        $fe54416e54b68053$var$vb(c, d2);
        var g;
        c = null;
        for(l in e)if (!d2.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l]) {
            if ("style" === l) {
                var h4 = e[l];
                for(g in h4)h4.hasOwnProperty(g) && (c || (c = {
                }), c[g] = "");
            } else "dangerouslySetInnerHTML" !== l && "children" !== l && "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && "autoFocus" !== l && ($fe54416e54b68053$var$ca.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null));
        }
        for(l in d2){
            var k4 = d2[l];
            h4 = null != e ? e[l] : void 0;
            if (d2.hasOwnProperty(l) && k4 !== h4 && (null != k4 || null != h4)) {
                if ("style" === l) {
                    if (h4) {
                        for(g in h4)!h4.hasOwnProperty(g) || k4 && k4.hasOwnProperty(g) || (c || (c = {
                        }), c[g] = "");
                        for(g in k4)k4.hasOwnProperty(g) && h4[g] !== k4[g] && (c || (c = {
                        }), c[g] = k4[g]);
                    } else c || (f || (f = []), f.push(l, c)), c = k4;
                } else "dangerouslySetInnerHTML" === l ? (k4 = k4 ? k4.__html : void 0, h4 = h4 ? h4.__html : void 0, null != k4 && h4 !== k4 && (f = f || []).push(l, k4)) : "children" === l ? "string" !== typeof k4 && "number" !== typeof k4 || (f = f || []).push(l, "" + k4) : "suppressContentEditableWarning" !== l && "suppressHydrationWarning" !== l && ($fe54416e54b68053$var$ca.hasOwnProperty(l) ? (null != k4 && "onScroll" === l && $fe54416e54b68053$var$G("scroll", a), f || h4 === k4 || (f = [])) : "object" === typeof k4 && null !== k4 && k4.$$typeof === $fe54416e54b68053$var$Ga ? k4.toString() : (f = f || []).push(l, k4));
            }
        }
        c && (f = f || []).push("style", c);
        var l = f;
        if (b.updateQueue = l) b.flags |= 4;
    }
};
$fe54416e54b68053$var$Ei = function(a, b, c, d2) {
    c !== d2 && (b.flags |= 4);
};
function $fe54416e54b68053$var$Fi(a, b) {
    if (!$fe54416e54b68053$var$lh) switch(a.tailMode){
        case "hidden":
            b = a.tail;
            for(var c = null; null !== b;)null !== b.alternate && (c = b), b = b.sibling;
            null === c ? a.tail = null : c.sibling = null;
            break;
        case "collapsed":
            c = a.tail;
            for(var d2 = null; null !== c;)null !== c.alternate && (d2 = c), c = c.sibling;
            null === d2 ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d2.sibling = null;
    }
}
function $fe54416e54b68053$var$Gi(a, b, c) {
    var d2 = b.pendingProps;
    switch(b.tag){
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
            return null;
        case 1:
            return $fe54416e54b68053$var$Ff(b.type) && $fe54416e54b68053$var$Gf(), null;
        case 3:
            $fe54416e54b68053$var$fh();
            $fe54416e54b68053$var$H($fe54416e54b68053$var$N);
            $fe54416e54b68053$var$H($fe54416e54b68053$var$M);
            $fe54416e54b68053$var$uh();
            d2 = b.stateNode;
            d2.pendingContext && (d2.context = d2.pendingContext, d2.pendingContext = null);
            if (null === a || null === a.child) $fe54416e54b68053$var$rh(b) ? b.flags |= 4 : d2.hydrate || (b.flags |= 256);
            $fe54416e54b68053$var$Ci(b);
            return null;
        case 5:
            $fe54416e54b68053$var$hh(b);
            var e = $fe54416e54b68053$var$dh($fe54416e54b68053$var$ch.current);
            c = b.type;
            if (null !== a && null != b.stateNode) $fe54416e54b68053$var$Di(a, b, c, d2, e), a.ref !== b.ref && (b.flags |= 128);
            else {
                if (!d2) {
                    if (null === b.stateNode) throw Error($fe54416e54b68053$var$y(166));
                    return null;
                }
                a = $fe54416e54b68053$var$dh($fe54416e54b68053$var$ah.current);
                if ($fe54416e54b68053$var$rh(b)) {
                    d2 = b.stateNode;
                    c = b.type;
                    var f = b.memoizedProps;
                    d2[$fe54416e54b68053$var$wf] = b;
                    d2[$fe54416e54b68053$var$xf] = f;
                    switch(c){
                        case "dialog":
                            $fe54416e54b68053$var$G("cancel", d2);
                            $fe54416e54b68053$var$G("close", d2);
                            break;
                        case "iframe":
                        case "object":
                        case "embed":
                            $fe54416e54b68053$var$G("load", d2);
                            break;
                        case "video":
                        case "audio":
                            for(a = 0; a < $fe54416e54b68053$var$Xe.length; a++)$fe54416e54b68053$var$G($fe54416e54b68053$var$Xe[a], d2);
                            break;
                        case "source":
                            $fe54416e54b68053$var$G("error", d2);
                            break;
                        case "img":
                        case "image":
                        case "link":
                            $fe54416e54b68053$var$G("error", d2);
                            $fe54416e54b68053$var$G("load", d2);
                            break;
                        case "details":
                            $fe54416e54b68053$var$G("toggle", d2);
                            break;
                        case "input":
                            $fe54416e54b68053$var$Za(d2, f);
                            $fe54416e54b68053$var$G("invalid", d2);
                            break;
                        case "select":
                            d2._wrapperState = {
                                wasMultiple: !!f.multiple
                            };
                            $fe54416e54b68053$var$G("invalid", d2);
                            break;
                        case "textarea":
                            $fe54416e54b68053$var$hb(d2, f), $fe54416e54b68053$var$G("invalid", d2);
                    }
                    $fe54416e54b68053$var$vb(c, f);
                    a = null;
                    for(var g in f)f.hasOwnProperty(g) && (e = f[g], "children" === g ? "string" === typeof e ? d2.textContent !== e && (a = [
                        "children",
                        e
                    ]) : "number" === typeof e && d2.textContent !== "" + e && (a = [
                        "children",
                        "" + e
                    ]) : $fe54416e54b68053$var$ca.hasOwnProperty(g) && null != e && "onScroll" === g && $fe54416e54b68053$var$G("scroll", d2));
                    switch(c){
                        case "input":
                            $fe54416e54b68053$var$Va(d2);
                            $fe54416e54b68053$var$cb(d2, f, !0);
                            break;
                        case "textarea":
                            $fe54416e54b68053$var$Va(d2);
                            $fe54416e54b68053$var$jb(d2);
                            break;
                        case "select":
                        case "option":
                            break;
                        default:
                            "function" === typeof f.onClick && (d2.onclick = $fe54416e54b68053$var$jf);
                    }
                    d2 = a;
                    b.updateQueue = d2;
                    null !== d2 && (b.flags |= 4);
                } else {
                    g = 9 === e.nodeType ? e : e.ownerDocument;
                    a === $fe54416e54b68053$var$kb.html && (a = $fe54416e54b68053$var$lb(c));
                    a === $fe54416e54b68053$var$kb.html ? "script" === c ? (a = g.createElement("div"), a.innerHTML = "<script>\x3c/script>", a = a.removeChild(a.firstChild)) : "string" === typeof d2.is ? a = g.createElement(c, {
                        is: d2.is
                    }) : (a = g.createElement(c), "select" === c && (g = a, d2.multiple ? g.multiple = !0 : d2.size && (g.size = d2.size))) : a = g.createElementNS(a, c);
                    a[$fe54416e54b68053$var$wf] = b;
                    a[$fe54416e54b68053$var$xf] = d2;
                    $fe54416e54b68053$var$Bi(a, b, !1, !1);
                    b.stateNode = a;
                    g = $fe54416e54b68053$var$wb(c, d2);
                    switch(c){
                        case "dialog":
                            $fe54416e54b68053$var$G("cancel", a);
                            $fe54416e54b68053$var$G("close", a);
                            e = d2;
                            break;
                        case "iframe":
                        case "object":
                        case "embed":
                            $fe54416e54b68053$var$G("load", a);
                            e = d2;
                            break;
                        case "video":
                        case "audio":
                            for(e = 0; e < $fe54416e54b68053$var$Xe.length; e++)$fe54416e54b68053$var$G($fe54416e54b68053$var$Xe[e], a);
                            e = d2;
                            break;
                        case "source":
                            $fe54416e54b68053$var$G("error", a);
                            e = d2;
                            break;
                        case "img":
                        case "image":
                        case "link":
                            $fe54416e54b68053$var$G("error", a);
                            $fe54416e54b68053$var$G("load", a);
                            e = d2;
                            break;
                        case "details":
                            $fe54416e54b68053$var$G("toggle", a);
                            e = d2;
                            break;
                        case "input":
                            $fe54416e54b68053$var$Za(a, d2);
                            e = $fe54416e54b68053$var$Ya(a, d2);
                            $fe54416e54b68053$var$G("invalid", a);
                            break;
                        case "option":
                            e = $fe54416e54b68053$var$eb(a, d2);
                            break;
                        case "select":
                            a._wrapperState = {
                                wasMultiple: !!d2.multiple
                            };
                            e = $lz3cj({
                            }, d2, {
                                value: void 0
                            });
                            $fe54416e54b68053$var$G("invalid", a);
                            break;
                        case "textarea":
                            $fe54416e54b68053$var$hb(a, d2);
                            e = $fe54416e54b68053$var$gb(a, d2);
                            $fe54416e54b68053$var$G("invalid", a);
                            break;
                        default:
                            e = d2;
                    }
                    $fe54416e54b68053$var$vb(c, e);
                    var h5 = e;
                    for(f in h5)if (h5.hasOwnProperty(f)) {
                        var k5 = h5[f];
                        "style" === f ? $fe54416e54b68053$var$tb(a, k5) : "dangerouslySetInnerHTML" === f ? (k5 = k5 ? k5.__html : void 0, null != k5 && $fe54416e54b68053$var$ob(a, k5)) : "children" === f ? "string" === typeof k5 ? ("textarea" !== c || "" !== k5) && $fe54416e54b68053$var$pb(a, k5) : "number" === typeof k5 && $fe54416e54b68053$var$pb(a, "" + k5) : "suppressContentEditableWarning" !== f && "suppressHydrationWarning" !== f && "autoFocus" !== f && ($fe54416e54b68053$var$ca.hasOwnProperty(f) ? null != k5 && "onScroll" === f && $fe54416e54b68053$var$G("scroll", a) : null != k5 && $fe54416e54b68053$var$qa(a, f, k5, g));
                    }
                    switch(c){
                        case "input":
                            $fe54416e54b68053$var$Va(a);
                            $fe54416e54b68053$var$cb(a, d2, !1);
                            break;
                        case "textarea":
                            $fe54416e54b68053$var$Va(a);
                            $fe54416e54b68053$var$jb(a);
                            break;
                        case "option":
                            null != d2.value && a.setAttribute("value", "" + $fe54416e54b68053$var$Sa(d2.value));
                            break;
                        case "select":
                            a.multiple = !!d2.multiple;
                            f = d2.value;
                            null != f ? $fe54416e54b68053$var$fb(a, !!d2.multiple, f, !1) : null != d2.defaultValue && $fe54416e54b68053$var$fb(a, !!d2.multiple, d2.defaultValue, !0);
                            break;
                        default:
                            "function" === typeof e.onClick && (a.onclick = $fe54416e54b68053$var$jf);
                    }
                    $fe54416e54b68053$var$mf(c, d2) && (b.flags |= 4);
                }
                null !== b.ref && (b.flags |= 128);
            }
            return null;
        case 6:
            if (a && null != b.stateNode) $fe54416e54b68053$var$Ei(a, b, a.memoizedProps, d2);
            else {
                if ("string" !== typeof d2 && null === b.stateNode) throw Error($fe54416e54b68053$var$y(166));
                c = $fe54416e54b68053$var$dh($fe54416e54b68053$var$ch.current);
                $fe54416e54b68053$var$dh($fe54416e54b68053$var$ah.current);
                $fe54416e54b68053$var$rh(b) ? (d2 = b.stateNode, c = b.memoizedProps, d2[$fe54416e54b68053$var$wf] = b, d2.nodeValue !== c && (b.flags |= 4)) : (d2 = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d2), d2[$fe54416e54b68053$var$wf] = b, b.stateNode = d2);
            }
            return null;
        case 13:
            $fe54416e54b68053$var$H($fe54416e54b68053$var$P);
            d2 = b.memoizedState;
            if (0 !== (b.flags & 64)) return b.lanes = c, b;
            d2 = null !== d2;
            c = !1;
            null === a ? (void 0) !== b.memoizedProps.fallback && $fe54416e54b68053$var$rh(b) : c = null !== a.memoizedState;
            if (d2 && !c && 0 !== (b.mode & 2)) {
                if (null === a && !0 !== b.memoizedProps.unstable_avoidThisFallback || 0 !== ($fe54416e54b68053$var$P.current & 1)) 0 === $fe54416e54b68053$var$V && ($fe54416e54b68053$var$V = 3);
                else {
                    if (0 === $fe54416e54b68053$var$V || 3 === $fe54416e54b68053$var$V) $fe54416e54b68053$var$V = 4;
                    null === $fe54416e54b68053$var$U || 0 === ($fe54416e54b68053$var$Dg & 134217727) && 0 === ($fe54416e54b68053$var$Hi & 134217727) || $fe54416e54b68053$var$Ii($fe54416e54b68053$var$U, $fe54416e54b68053$var$W);
                }
            }
            if (d2 || c) b.flags |= 4;
            return null;
        case 4:
            return $fe54416e54b68053$var$fh(), $fe54416e54b68053$var$Ci(b), null === a && $fe54416e54b68053$var$cf(b.stateNode.containerInfo), null;
        case 10:
            return $fe54416e54b68053$var$rg(b), null;
        case 17:
            return $fe54416e54b68053$var$Ff(b.type) && $fe54416e54b68053$var$Gf(), null;
        case 19:
            $fe54416e54b68053$var$H($fe54416e54b68053$var$P);
            d2 = b.memoizedState;
            if (null === d2) return null;
            f = 0 !== (b.flags & 64);
            g = d2.rendering;
            if (null === g) {
                if (f) $fe54416e54b68053$var$Fi(d2, !1);
                else {
                    if (0 !== $fe54416e54b68053$var$V || null !== a && 0 !== (a.flags & 64)) for(a = b.child; null !== a;){
                        g = $fe54416e54b68053$var$ih(a);
                        if (null !== g) {
                            b.flags |= 64;
                            $fe54416e54b68053$var$Fi(d2, !1);
                            f = g.updateQueue;
                            null !== f && (b.updateQueue = f, b.flags |= 4);
                            null === d2.lastEffect && (b.firstEffect = null);
                            b.lastEffect = d2.lastEffect;
                            d2 = c;
                            for(c = b.child; null !== c;)f = c, a = d2, f.flags &= 2, f.nextEffect = null, f.firstEffect = null, f.lastEffect = null, g = f.alternate, null === g ? (f.childLanes = 0, f.lanes = a, f.child = null, f.memoizedProps = null, f.memoizedState = null, f.updateQueue = null, f.dependencies = null, f.stateNode = null) : (f.childLanes = g.childLanes, f.lanes = g.lanes, f.child = g.child, f.memoizedProps = g.memoizedProps, f.memoizedState = g.memoizedState, f.updateQueue = g.updateQueue, f.type = g.type, a = g.dependencies, f.dependencies = null === a ? null : {
                                lanes: a.lanes,
                                firstContext: a.firstContext
                            }), c = c.sibling;
                            $fe54416e54b68053$var$I($fe54416e54b68053$var$P, $fe54416e54b68053$var$P.current & 1 | 2);
                            return b.child;
                        }
                        a = a.sibling;
                    }
                    null !== d2.tail && $fe54416e54b68053$var$O() > $fe54416e54b68053$var$Ji && (b.flags |= 64, f = !0, $fe54416e54b68053$var$Fi(d2, !1), b.lanes = 33554432);
                }
            } else {
                if (!f) {
                    if (a = $fe54416e54b68053$var$ih(g), null !== a) {
                        if (b.flags |= 64, f = !0, c = a.updateQueue, null !== c && (b.updateQueue = c, b.flags |= 4), $fe54416e54b68053$var$Fi(d2, !0), null === d2.tail && "hidden" === d2.tailMode && !g.alternate && !$fe54416e54b68053$var$lh) return b = b.lastEffect = d2.lastEffect, null !== b && (b.nextEffect = null), null;
                    } else 2 * $fe54416e54b68053$var$O() - d2.renderingStartTime > $fe54416e54b68053$var$Ji && 1073741824 !== c && (b.flags |= 64, f = !0, $fe54416e54b68053$var$Fi(d2, !1), b.lanes = 33554432);
                }
                d2.isBackwards ? (g.sibling = b.child, b.child = g) : (c = d2.last, null !== c ? c.sibling = g : b.child = g, d2.last = g);
            }
            return null !== d2.tail ? (c = d2.tail, d2.rendering = c, d2.tail = c.sibling, d2.lastEffect = b.lastEffect, d2.renderingStartTime = $fe54416e54b68053$var$O(), c.sibling = null, b = $fe54416e54b68053$var$P.current, $fe54416e54b68053$var$I($fe54416e54b68053$var$P, f ? b & 1 | 2 : b & 1), c) : null;
        case 23:
        case 24:
            return $fe54416e54b68053$var$Ki(), null !== a && null !== a.memoizedState !== (null !== b.memoizedState) && "unstable-defer-without-hiding" !== d2.mode && (b.flags |= 4), null;
    }
    throw Error($fe54416e54b68053$var$y(156, b.tag));
}
function $fe54416e54b68053$var$Li(a) {
    switch(a.tag){
        case 1:
            $fe54416e54b68053$var$Ff(a.type) && $fe54416e54b68053$var$Gf();
            var b = a.flags;
            return b & 4096 ? (a.flags = b & -4097 | 64, a) : null;
        case 3:
            $fe54416e54b68053$var$fh();
            $fe54416e54b68053$var$H($fe54416e54b68053$var$N);
            $fe54416e54b68053$var$H($fe54416e54b68053$var$M);
            $fe54416e54b68053$var$uh();
            b = a.flags;
            if (0 !== (b & 64)) throw Error($fe54416e54b68053$var$y(285));
            a.flags = b & -4097 | 64;
            return a;
        case 5:
            return $fe54416e54b68053$var$hh(a), null;
        case 13:
            return $fe54416e54b68053$var$H($fe54416e54b68053$var$P), b = a.flags, b & 4096 ? (a.flags = b & -4097 | 64, a) : null;
        case 19:
            return $fe54416e54b68053$var$H($fe54416e54b68053$var$P), null;
        case 4:
            return $fe54416e54b68053$var$fh(), null;
        case 10:
            return $fe54416e54b68053$var$rg(a), null;
        case 23:
        case 24:
            return $fe54416e54b68053$var$Ki(), null;
        default:
            return null;
    }
}
function $fe54416e54b68053$var$Mi(a, b) {
    try {
        var c = "", d2 = b;
        do c += $fe54416e54b68053$var$Qa(d2), d2 = d2.return;
        while (d2)
        var e = c;
    } catch (f) {
        e = "\nError generating stack: " + f.message + "\n" + f.stack;
    }
    return {
        value: a,
        source: b,
        stack: e
    };
}
function $fe54416e54b68053$var$Ni(a, b) {
    try {
        console.error(b.value);
    } catch (c) {
        setTimeout(function() {
            throw c;
        });
    }
}
var $fe54416e54b68053$var$Oi = "function" === typeof WeakMap ? WeakMap : Map;
function $fe54416e54b68053$var$Pi(a, b, c) {
    c = $fe54416e54b68053$var$zg(-1, c);
    c.tag = 3;
    c.payload = {
        element: null
    };
    var d2 = b.value;
    c.callback = function() {
        $fe54416e54b68053$var$Qi || ($fe54416e54b68053$var$Qi = !0, $fe54416e54b68053$var$Ri = d2);
        $fe54416e54b68053$var$Ni(a, b);
    };
    return c;
}
function $fe54416e54b68053$var$Si(a, b, c) {
    c = $fe54416e54b68053$var$zg(-1, c);
    c.tag = 3;
    var d2 = a.type.getDerivedStateFromError;
    if ("function" === typeof d2) {
        var e = b.value;
        c.payload = function() {
            $fe54416e54b68053$var$Ni(a, b);
            return d2(e);
        };
    }
    var f = a.stateNode;
    null !== f && "function" === typeof f.componentDidCatch && (c.callback = function() {
        "function" !== typeof d2 && (null === $fe54416e54b68053$var$Ti ? $fe54416e54b68053$var$Ti = new Set([
            this
        ]) : $fe54416e54b68053$var$Ti.add(this), $fe54416e54b68053$var$Ni(a, b));
        var c1 = b.stack;
        this.componentDidCatch(b.value, {
            componentStack: null !== c1 ? c1 : ""
        });
    });
    return c;
}
var $fe54416e54b68053$var$Ui = "function" === typeof WeakSet ? WeakSet : Set;
function $fe54416e54b68053$var$Vi(a) {
    var b = a.ref;
    if (null !== b) {
        if ("function" === typeof b) try {
            b(null);
        } catch (c) {
            $fe54416e54b68053$var$Wi(a, c);
        }
        else b.current = null;
    }
}
function $fe54416e54b68053$var$Xi(a, b) {
    switch(b.tag){
        case 0:
        case 11:
        case 15:
        case 22:
            return;
        case 1:
            if (b.flags & 256 && null !== a) {
                var c = a.memoizedProps, d2 = a.memoizedState;
                a = b.stateNode;
                b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : $fe54416e54b68053$var$lg(b.type, c), d2);
                a.__reactInternalSnapshotBeforeUpdate = b;
            }
            return;
        case 3:
            b.flags & 256 && $fe54416e54b68053$var$qf(b.stateNode.containerInfo);
            return;
        case 5:
        case 6:
        case 4:
        case 17:
            return;
    }
    throw Error($fe54416e54b68053$var$y(163));
}
function $fe54416e54b68053$var$Yi(a, b, c) {
    switch(c.tag){
        case 0:
        case 11:
        case 15:
        case 22:
            b = c.updateQueue;
            b = null !== b ? b.lastEffect : null;
            if (null !== b) {
                a = b = b.next;
                do {
                    if (3 === (a.tag & 3)) {
                        var d3 = a.create;
                        a.destroy = d3();
                    }
                    a = a.next;
                }while (a !== b)
            }
            b = c.updateQueue;
            b = null !== b ? b.lastEffect : null;
            if (null !== b) {
                a = b = b.next;
                do {
                    var e = a;
                    d3 = e.next;
                    e = e.tag;
                    0 !== (e & 4) && 0 !== (e & 1) && ($fe54416e54b68053$var$Zi(c, a), $fe54416e54b68053$var$$i(c, a));
                    a = d3;
                }while (a !== b)
            }
            return;
        case 1:
            a = c.stateNode;
            c.flags & 4 && (null === b ? a.componentDidMount() : (d3 = c.elementType === c.type ? b.memoizedProps : $fe54416e54b68053$var$lg(c.type, b.memoizedProps), a.componentDidUpdate(d3, b.memoizedState, a.__reactInternalSnapshotBeforeUpdate)));
            b = c.updateQueue;
            null !== b && $fe54416e54b68053$var$Eg(c, b, a);
            return;
        case 3:
            b = c.updateQueue;
            if (null !== b) {
                a = null;
                if (null !== c.child) switch(c.child.tag){
                    case 5:
                        a = c.child.stateNode;
                        break;
                    case 1:
                        a = c.child.stateNode;
                }
                $fe54416e54b68053$var$Eg(c, b, a);
            }
            return;
        case 5:
            a = c.stateNode;
            null === b && c.flags & 4 && $fe54416e54b68053$var$mf(c.type, c.memoizedProps) && a.focus();
            return;
        case 6:
            return;
        case 4:
            return;
        case 12:
            return;
        case 13:
            null === c.memoizedState && (c = c.alternate, null !== c && (c = c.memoizedState, null !== c && (c = c.dehydrated, null !== c && $fe54416e54b68053$var$Cc(c))));
            return;
        case 19:
        case 17:
        case 20:
        case 21:
        case 23:
        case 24:
            return;
    }
    throw Error($fe54416e54b68053$var$y(163));
}
function $fe54416e54b68053$var$aj(a, b) {
    for(var c = a;;){
        if (5 === c.tag) {
            var d4 = c.stateNode;
            if (b) d4 = d4.style, "function" === typeof d4.setProperty ? d4.setProperty("display", "none", "important") : d4.display = "none";
            else {
                d4 = c.stateNode;
                var e = c.memoizedProps.style;
                e = (void 0) !== e && null !== e && e.hasOwnProperty("display") ? e.display : null;
                d4.style.display = $fe54416e54b68053$var$sb("display", e);
            }
        } else if (6 === c.tag) c.stateNode.nodeValue = b ? "" : c.memoizedProps;
        else if ((23 !== c.tag && 24 !== c.tag || null === c.memoizedState || c === a) && null !== c.child) {
            c.child.return = c;
            c = c.child;
            continue;
        }
        if (c === a) break;
        for(; null === c.sibling;){
            if (null === c.return || c.return === a) return;
            c = c.return;
        }
        c.sibling.return = c.return;
        c = c.sibling;
    }
}
function $fe54416e54b68053$var$bj(a, b) {
    if ($fe54416e54b68053$var$Mf && "function" === typeof $fe54416e54b68053$var$Mf.onCommitFiberUnmount) try {
        $fe54416e54b68053$var$Mf.onCommitFiberUnmount($fe54416e54b68053$var$Lf, b);
    } catch (f) {
    }
    switch(b.tag){
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            a = b.updateQueue;
            if (null !== a && (a = a.lastEffect, null !== a)) {
                var c = a = a.next;
                do {
                    var d5 = c, e = d5.destroy;
                    d5 = d5.tag;
                    if ((void 0) !== e) {
                        if (0 !== (d5 & 4)) $fe54416e54b68053$var$Zi(b, c);
                        else {
                            d5 = b;
                            try {
                                e();
                            } catch (f) {
                                $fe54416e54b68053$var$Wi(d5, f);
                            }
                        }
                    }
                    c = c.next;
                }while (c !== a)
            }
            break;
        case 1:
            $fe54416e54b68053$var$Vi(b);
            a = b.stateNode;
            if ("function" === typeof a.componentWillUnmount) try {
                a.props = b.memoizedProps, a.state = b.memoizedState, a.componentWillUnmount();
            } catch (f) {
                $fe54416e54b68053$var$Wi(b, f);
            }
            break;
        case 5:
            $fe54416e54b68053$var$Vi(b);
            break;
        case 4:
            $fe54416e54b68053$var$cj(a, b);
    }
}
function $fe54416e54b68053$var$dj(a) {
    a.alternate = null;
    a.child = null;
    a.dependencies = null;
    a.firstEffect = null;
    a.lastEffect = null;
    a.memoizedProps = null;
    a.memoizedState = null;
    a.pendingProps = null;
    a.return = null;
    a.updateQueue = null;
}
function $fe54416e54b68053$var$ej(a) {
    return 5 === a.tag || 3 === a.tag || 4 === a.tag;
}
function $fe54416e54b68053$var$fj(a) {
    a: {
        for(var b = a.return; null !== b;){
            if ($fe54416e54b68053$var$ej(b)) break a;
            b = b.return;
        }
        throw Error($fe54416e54b68053$var$y(160));
    }
    var c = b;
    b = c.stateNode;
    switch(c.tag){
        case 5:
            var d6 = !1;
            break;
        case 3:
            b = b.containerInfo;
            d6 = !0;
            break;
        case 4:
            b = b.containerInfo;
            d6 = !0;
            break;
        default:
            throw Error($fe54416e54b68053$var$y(161));
    }
    c.flags & 16 && ($fe54416e54b68053$var$pb(b, ""), c.flags &= -17);
    a: b: for(c = a;;){
        for(; null === c.sibling;){
            if (null === c.return || $fe54416e54b68053$var$ej(c.return)) {
                c = null;
                break a;
            }
            c = c.return;
        }
        c.sibling.return = c.return;
        for(c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;){
            if (c.flags & 2) continue b;
            if (null === c.child || 4 === c.tag) continue b;
            else c.child.return = c, c = c.child;
        }
        if (!(c.flags & 2)) {
            c = c.stateNode;
            break a;
        }
    }
    d6 ? $fe54416e54b68053$var$gj(a, c, b) : $fe54416e54b68053$var$hj(a, c, b);
}
function $fe54416e54b68053$var$gj(a, b, c) {
    var d6 = a.tag, e = 5 === d6 || 6 === d6;
    if (e) a = e ? a.stateNode : a.stateNode.instance, b ? 8 === c.nodeType ? c.parentNode.insertBefore(a, b) : c.insertBefore(a, b) : (8 === c.nodeType ? (b = c.parentNode, b.insertBefore(a, c)) : (b = c, b.appendChild(a)), c = c._reactRootContainer, null !== c && (void 0) !== c || null !== b.onclick || (b.onclick = $fe54416e54b68053$var$jf));
    else if (4 !== d6 && (a = a.child, null !== a)) for($fe54416e54b68053$var$gj(a, b, c), a = a.sibling; null !== a;)$fe54416e54b68053$var$gj(a, b, c), a = a.sibling;
}
function $fe54416e54b68053$var$hj(a, b, c) {
    var d6 = a.tag, e = 5 === d6 || 6 === d6;
    if (e) a = e ? a.stateNode : a.stateNode.instance, b ? c.insertBefore(a, b) : c.appendChild(a);
    else if (4 !== d6 && (a = a.child, null !== a)) for($fe54416e54b68053$var$hj(a, b, c), a = a.sibling; null !== a;)$fe54416e54b68053$var$hj(a, b, c), a = a.sibling;
}
function $fe54416e54b68053$var$cj(a, b) {
    for(var c = b, d6 = !1, e, f;;){
        if (!d6) {
            d6 = c.return;
            a: for(;;){
                if (null === d6) throw Error($fe54416e54b68053$var$y(160));
                e = d6.stateNode;
                switch(d6.tag){
                    case 5:
                        f = !1;
                        break a;
                    case 3:
                        e = e.containerInfo;
                        f = !0;
                        break a;
                    case 4:
                        e = e.containerInfo;
                        f = !0;
                        break a;
                }
                d6 = d6.return;
            }
            d6 = !0;
        }
        if (5 === c.tag || 6 === c.tag) {
            a: for(var g = a, h6 = c, k6 = h6;;)if ($fe54416e54b68053$var$bj(g, k6), null !== k6.child && 4 !== k6.tag) k6.child.return = k6, k6 = k6.child;
            else {
                if (k6 === h6) break a;
                for(; null === k6.sibling;){
                    if (null === k6.return || k6.return === h6) break a;
                    k6 = k6.return;
                }
                k6.sibling.return = k6.return;
                k6 = k6.sibling;
            }
            f ? (g = e, h6 = c.stateNode, 8 === g.nodeType ? g.parentNode.removeChild(h6) : g.removeChild(h6)) : e.removeChild(c.stateNode);
        } else if (4 === c.tag) {
            if (null !== c.child) {
                e = c.stateNode.containerInfo;
                f = !0;
                c.child.return = c;
                c = c.child;
                continue;
            }
        } else if ($fe54416e54b68053$var$bj(a, c), null !== c.child) {
            c.child.return = c;
            c = c.child;
            continue;
        }
        if (c === b) break;
        for(; null === c.sibling;){
            if (null === c.return || c.return === b) return;
            c = c.return;
            4 === c.tag && (d6 = !1);
        }
        c.sibling.return = c.return;
        c = c.sibling;
    }
}
function $fe54416e54b68053$var$ij(a, b) {
    switch(b.tag){
        case 0:
        case 11:
        case 14:
        case 15:
        case 22:
            var c = b.updateQueue;
            c = null !== c ? c.lastEffect : null;
            if (null !== c) {
                var d6 = c = c.next;
                do 3 === (d6.tag & 3) && (a = d6.destroy, d6.destroy = void 0, (void 0) !== a && a()), d6 = d6.next;
                while (d6 !== c)
            }
            return;
        case 1:
            return;
        case 5:
            c = b.stateNode;
            if (null != c) {
                d6 = b.memoizedProps;
                var e = null !== a ? a.memoizedProps : d6;
                a = b.type;
                var f = b.updateQueue;
                b.updateQueue = null;
                if (null !== f) {
                    c[$fe54416e54b68053$var$xf] = d6;
                    "input" === a && "radio" === d6.type && null != d6.name && $fe54416e54b68053$var$$a(c, d6);
                    $fe54416e54b68053$var$wb(a, e);
                    b = $fe54416e54b68053$var$wb(a, d6);
                    for(e = 0; e < f.length; e += 2){
                        var g = f[e], h7 = f[e + 1];
                        "style" === g ? $fe54416e54b68053$var$tb(c, h7) : "dangerouslySetInnerHTML" === g ? $fe54416e54b68053$var$ob(c, h7) : "children" === g ? $fe54416e54b68053$var$pb(c, h7) : $fe54416e54b68053$var$qa(c, g, h7, b);
                    }
                    switch(a){
                        case "input":
                            $fe54416e54b68053$var$ab(c, d6);
                            break;
                        case "textarea":
                            $fe54416e54b68053$var$ib(c, d6);
                            break;
                        case "select":
                            a = c._wrapperState.wasMultiple, c._wrapperState.wasMultiple = !!d6.multiple, f = d6.value, null != f ? $fe54416e54b68053$var$fb(c, !!d6.multiple, f, !1) : a !== !!d6.multiple && (null != d6.defaultValue ? $fe54416e54b68053$var$fb(c, !!d6.multiple, d6.defaultValue, !0) : $fe54416e54b68053$var$fb(c, !!d6.multiple, d6.multiple ? [] : "", !1));
                    }
                }
            }
            return;
        case 6:
            if (null === b.stateNode) throw Error($fe54416e54b68053$var$y(162));
            b.stateNode.nodeValue = b.memoizedProps;
            return;
        case 3:
            c = b.stateNode;
            c.hydrate && (c.hydrate = !1, $fe54416e54b68053$var$Cc(c.containerInfo));
            return;
        case 12:
            return;
        case 13:
            null !== b.memoizedState && ($fe54416e54b68053$var$jj = $fe54416e54b68053$var$O(), $fe54416e54b68053$var$aj(b.child, !0));
            $fe54416e54b68053$var$kj(b);
            return;
        case 19:
            $fe54416e54b68053$var$kj(b);
            return;
        case 17:
            return;
        case 23:
        case 24:
            $fe54416e54b68053$var$aj(b, null !== b.memoizedState);
            return;
    }
    throw Error($fe54416e54b68053$var$y(163));
}
function $fe54416e54b68053$var$kj(a) {
    var b = a.updateQueue;
    if (null !== b) {
        a.updateQueue = null;
        var c = a.stateNode;
        null === c && (c = a.stateNode = new $fe54416e54b68053$var$Ui);
        b.forEach(function(b1) {
            var d7 = $fe54416e54b68053$var$lj.bind(null, a, b1);
            c.has(b1) || (c.add(b1), b1.then(d7, d7));
        });
    }
}
function $fe54416e54b68053$var$mj(a, b) {
    return null !== a && (a = a.memoizedState, null === a || null !== a.dehydrated) ? (b = b.memoizedState, null !== b && null === b.dehydrated) : !1;
}
var $fe54416e54b68053$var$nj = Math.ceil, $fe54416e54b68053$var$oj = $fe54416e54b68053$var$ra.ReactCurrentDispatcher, $fe54416e54b68053$var$pj = $fe54416e54b68053$var$ra.ReactCurrentOwner, $fe54416e54b68053$var$X = 0, $fe54416e54b68053$var$U = null, $fe54416e54b68053$var$Y = null, $fe54416e54b68053$var$W = 0, $fe54416e54b68053$var$qj = 0, $fe54416e54b68053$var$rj = $fe54416e54b68053$var$Bf(0), $fe54416e54b68053$var$V = 0, $fe54416e54b68053$var$sj = null, $fe54416e54b68053$var$tj = 0, $fe54416e54b68053$var$Dg = 0, $fe54416e54b68053$var$Hi = 0, $fe54416e54b68053$var$uj = 0, $fe54416e54b68053$var$vj = null, $fe54416e54b68053$var$jj = 0, $fe54416e54b68053$var$Ji = Infinity;
function $fe54416e54b68053$var$wj() {
    $fe54416e54b68053$var$Ji = $fe54416e54b68053$var$O() + 500;
}
var $fe54416e54b68053$var$Z = null, $fe54416e54b68053$var$Qi = !1, $fe54416e54b68053$var$Ri = null, $fe54416e54b68053$var$Ti = null, $fe54416e54b68053$var$xj = !1, $fe54416e54b68053$var$yj = null, $fe54416e54b68053$var$zj = 90, $fe54416e54b68053$var$Aj = [], $fe54416e54b68053$var$Bj = [], $fe54416e54b68053$var$Cj = null, $fe54416e54b68053$var$Dj = 0, $fe54416e54b68053$var$Ej = null, $fe54416e54b68053$var$Fj = -1, $fe54416e54b68053$var$Gj = 0, $fe54416e54b68053$var$Hj = 0, $fe54416e54b68053$var$Ij = null, $fe54416e54b68053$var$Jj = !1;
function $fe54416e54b68053$var$Hg() {
    return 0 !== ($fe54416e54b68053$var$X & 48) ? $fe54416e54b68053$var$O() : -1 !== $fe54416e54b68053$var$Fj ? $fe54416e54b68053$var$Fj : $fe54416e54b68053$var$Fj = $fe54416e54b68053$var$O();
}
function $fe54416e54b68053$var$Ig(a) {
    a = a.mode;
    if (0 === (a & 2)) return 1;
    if (0 === (a & 4)) return 99 === $fe54416e54b68053$var$eg() ? 1 : 2;
    0 === $fe54416e54b68053$var$Gj && ($fe54416e54b68053$var$Gj = $fe54416e54b68053$var$tj);
    if (0 !== $fe54416e54b68053$var$kg.transition) {
        0 !== $fe54416e54b68053$var$Hj && ($fe54416e54b68053$var$Hj = null !== $fe54416e54b68053$var$vj ? $fe54416e54b68053$var$vj.pendingLanes : 0);
        a = $fe54416e54b68053$var$Gj;
        var b = 4186112 & ~$fe54416e54b68053$var$Hj;
        b &= -b;
        0 === b && (a = 4186112 & ~a, b = a & -a, 0 === b && (b = 8192));
        return b;
    }
    a = $fe54416e54b68053$var$eg();
    0 !== ($fe54416e54b68053$var$X & 4) && 98 === a ? a = $fe54416e54b68053$var$Xc(12, $fe54416e54b68053$var$Gj) : (a = $fe54416e54b68053$var$Sc(a), a = $fe54416e54b68053$var$Xc(a, $fe54416e54b68053$var$Gj));
    return a;
}
function $fe54416e54b68053$var$Jg(a, b, c) {
    if (50 < $fe54416e54b68053$var$Dj) throw $fe54416e54b68053$var$Dj = 0, $fe54416e54b68053$var$Ej = null, Error($fe54416e54b68053$var$y(185));
    a = $fe54416e54b68053$var$Kj(a, b);
    if (null === a) return null;
    $fe54416e54b68053$var$$c(a, b, c);
    a === $fe54416e54b68053$var$U && ($fe54416e54b68053$var$Hi |= b, 4 === $fe54416e54b68053$var$V && $fe54416e54b68053$var$Ii(a, $fe54416e54b68053$var$W));
    var d7 = $fe54416e54b68053$var$eg();
    1 === b ? 0 !== ($fe54416e54b68053$var$X & 8) && 0 === ($fe54416e54b68053$var$X & 48) ? $fe54416e54b68053$var$Lj(a) : ($fe54416e54b68053$var$Mj(a, c), 0 === $fe54416e54b68053$var$X && ($fe54416e54b68053$var$wj(), $fe54416e54b68053$var$ig())) : (0 === ($fe54416e54b68053$var$X & 4) || 98 !== d7 && 99 !== d7 || (null === $fe54416e54b68053$var$Cj ? $fe54416e54b68053$var$Cj = new Set([
        a
    ]) : $fe54416e54b68053$var$Cj.add(a)), $fe54416e54b68053$var$Mj(a, c));
    $fe54416e54b68053$var$vj = a;
}
function $fe54416e54b68053$var$Kj(a, b) {
    a.lanes |= b;
    var c = a.alternate;
    null !== c && (c.lanes |= b);
    c = a;
    for(a = a.return; null !== a;)a.childLanes |= b, c = a.alternate, null !== c && (c.childLanes |= b), c = a, a = a.return;
    return 3 === c.tag ? c.stateNode : null;
}
function $fe54416e54b68053$var$Mj(a, b) {
    for(var c = a.callbackNode, d7 = a.suspendedLanes, e = a.pingedLanes, f = a.expirationTimes, g = a.pendingLanes; 0 < g;){
        var h8 = 31 - $fe54416e54b68053$var$Vc(g), k7 = 1 << h8, l = f[h8];
        if (-1 === l) {
            if (0 === (k7 & d7) || 0 !== (k7 & e)) {
                l = b;
                $fe54416e54b68053$var$Rc(k7);
                var n4 = $fe54416e54b68053$var$F;
                f[h8] = 10 <= n4 ? l + 250 : 6 <= n4 ? l + 5000 : -1;
            }
        } else l <= b && (a.expiredLanes |= k7);
        g &= ~k7;
    }
    d7 = $fe54416e54b68053$var$Uc(a, a === $fe54416e54b68053$var$U ? $fe54416e54b68053$var$W : 0);
    b = $fe54416e54b68053$var$F;
    if (0 === d7) null !== c && (c !== $fe54416e54b68053$var$Zf && $fe54416e54b68053$var$Pf(c), a.callbackNode = null, a.callbackPriority = 0);
    else {
        if (null !== c) {
            if (a.callbackPriority === b) return;
            c !== $fe54416e54b68053$var$Zf && $fe54416e54b68053$var$Pf(c);
        }
        15 === b ? (c = $fe54416e54b68053$var$Lj.bind(null, a), null === $fe54416e54b68053$var$ag ? ($fe54416e54b68053$var$ag = [
            c
        ], $fe54416e54b68053$var$bg = $fe54416e54b68053$var$Of($fe54416e54b68053$var$Uf, $fe54416e54b68053$var$jg)) : $fe54416e54b68053$var$ag.push(c), c = $fe54416e54b68053$var$Zf) : 14 === b ? c = $fe54416e54b68053$var$hg(99, $fe54416e54b68053$var$Lj.bind(null, a)) : (c = $fe54416e54b68053$var$Tc(b), c = $fe54416e54b68053$var$hg(c, $fe54416e54b68053$var$Nj.bind(null, a)));
        a.callbackPriority = b;
        a.callbackNode = c;
    }
}
function $fe54416e54b68053$var$Nj(a) {
    $fe54416e54b68053$var$Fj = -1;
    $fe54416e54b68053$var$Hj = $fe54416e54b68053$var$Gj = 0;
    if (0 !== ($fe54416e54b68053$var$X & 48)) throw Error($fe54416e54b68053$var$y(327));
    var b = a.callbackNode;
    if ($fe54416e54b68053$var$Oj() && a.callbackNode !== b) return null;
    var c = $fe54416e54b68053$var$Uc(a, a === $fe54416e54b68053$var$U ? $fe54416e54b68053$var$W : 0);
    if (0 === c) return null;
    var d7 = c;
    var e = $fe54416e54b68053$var$X;
    $fe54416e54b68053$var$X |= 16;
    var f = $fe54416e54b68053$var$Pj();
    if ($fe54416e54b68053$var$U !== a || $fe54416e54b68053$var$W !== d7) $fe54416e54b68053$var$wj(), $fe54416e54b68053$var$Qj(a, d7);
    for(;;)try {
        $fe54416e54b68053$var$Rj();
        break;
    } catch (h9) {
        $fe54416e54b68053$var$Sj(a, h9);
    }
    $fe54416e54b68053$var$qg();
    $fe54416e54b68053$var$oj.current = f;
    $fe54416e54b68053$var$X = e;
    null !== $fe54416e54b68053$var$Y ? d7 = 0 : ($fe54416e54b68053$var$U = null, $fe54416e54b68053$var$W = 0, d7 = $fe54416e54b68053$var$V);
    if (0 !== ($fe54416e54b68053$var$tj & $fe54416e54b68053$var$Hi)) $fe54416e54b68053$var$Qj(a, 0);
    else if (0 !== d7) {
        2 === d7 && ($fe54416e54b68053$var$X |= 64, a.hydrate && (a.hydrate = !1, $fe54416e54b68053$var$qf(a.containerInfo)), c = $fe54416e54b68053$var$Wc(a), 0 !== c && (d7 = $fe54416e54b68053$var$Tj(a, c)));
        if (1 === d7) throw b = $fe54416e54b68053$var$sj, $fe54416e54b68053$var$Qj(a, 0), $fe54416e54b68053$var$Ii(a, c), $fe54416e54b68053$var$Mj(a, $fe54416e54b68053$var$O()), b;
        a.finishedWork = a.current.alternate;
        a.finishedLanes = c;
        switch(d7){
            case 0:
            case 1:
                throw Error($fe54416e54b68053$var$y(345));
            case 2:
                $fe54416e54b68053$var$Uj(a);
                break;
            case 3:
                $fe54416e54b68053$var$Ii(a, c);
                if ((c & 62914560) === c && (d7 = $fe54416e54b68053$var$jj + 500 - $fe54416e54b68053$var$O(), 10 < d7)) {
                    if (0 !== $fe54416e54b68053$var$Uc(a, 0)) break;
                    e = a.suspendedLanes;
                    if ((e & c) !== c) {
                        $fe54416e54b68053$var$Hg();
                        a.pingedLanes |= a.suspendedLanes & e;
                        break;
                    }
                    a.timeoutHandle = $fe54416e54b68053$var$of($fe54416e54b68053$var$Uj.bind(null, a), d7);
                    break;
                }
                $fe54416e54b68053$var$Uj(a);
                break;
            case 4:
                $fe54416e54b68053$var$Ii(a, c);
                if ((c & 4186112) === c) break;
                d7 = a.eventTimes;
                for(e = -1; 0 < c;){
                    var g = 31 - $fe54416e54b68053$var$Vc(c);
                    f = 1 << g;
                    g = d7[g];
                    g > e && (e = g);
                    c &= ~f;
                }
                c = e;
                c = $fe54416e54b68053$var$O() - c;
                c = (120 > c ? 120 : 480 > c ? 480 : 1080 > c ? 1080 : 1920 > c ? 1920 : 3000 > c ? 3000 : 4320 > c ? 4320 : 1960 * $fe54416e54b68053$var$nj(c / 1960)) - c;
                if (10 < c) {
                    a.timeoutHandle = $fe54416e54b68053$var$of($fe54416e54b68053$var$Uj.bind(null, a), c);
                    break;
                }
                $fe54416e54b68053$var$Uj(a);
                break;
            case 5:
                $fe54416e54b68053$var$Uj(a);
                break;
            default:
                throw Error($fe54416e54b68053$var$y(329));
        }
    }
    $fe54416e54b68053$var$Mj(a, $fe54416e54b68053$var$O());
    return a.callbackNode === b ? $fe54416e54b68053$var$Nj.bind(null, a) : null;
}
function $fe54416e54b68053$var$Ii(a, b) {
    b &= ~$fe54416e54b68053$var$uj;
    b &= ~$fe54416e54b68053$var$Hi;
    a.suspendedLanes |= b;
    a.pingedLanes &= ~b;
    for(a = a.expirationTimes; 0 < b;){
        var c = 31 - $fe54416e54b68053$var$Vc(b), d7 = 1 << c;
        a[c] = -1;
        b &= ~d7;
    }
}
function $fe54416e54b68053$var$Lj(a) {
    if (0 !== ($fe54416e54b68053$var$X & 48)) throw Error($fe54416e54b68053$var$y(327));
    $fe54416e54b68053$var$Oj();
    if (a === $fe54416e54b68053$var$U && 0 !== (a.expiredLanes & $fe54416e54b68053$var$W)) {
        var b = $fe54416e54b68053$var$W;
        var c = $fe54416e54b68053$var$Tj(a, b);
        0 !== ($fe54416e54b68053$var$tj & $fe54416e54b68053$var$Hi) && (b = $fe54416e54b68053$var$Uc(a, b), c = $fe54416e54b68053$var$Tj(a, b));
    } else b = $fe54416e54b68053$var$Uc(a, 0), c = $fe54416e54b68053$var$Tj(a, b);
    0 !== a.tag && 2 === c && ($fe54416e54b68053$var$X |= 64, a.hydrate && (a.hydrate = !1, $fe54416e54b68053$var$qf(a.containerInfo)), b = $fe54416e54b68053$var$Wc(a), 0 !== b && (c = $fe54416e54b68053$var$Tj(a, b)));
    if (1 === c) throw c = $fe54416e54b68053$var$sj, $fe54416e54b68053$var$Qj(a, 0), $fe54416e54b68053$var$Ii(a, b), $fe54416e54b68053$var$Mj(a, $fe54416e54b68053$var$O()), c;
    a.finishedWork = a.current.alternate;
    a.finishedLanes = b;
    $fe54416e54b68053$var$Uj(a);
    $fe54416e54b68053$var$Mj(a, $fe54416e54b68053$var$O());
    return null;
}
function $fe54416e54b68053$var$Vj() {
    if (null !== $fe54416e54b68053$var$Cj) {
        var a = $fe54416e54b68053$var$Cj;
        $fe54416e54b68053$var$Cj = null;
        a.forEach(function(a1) {
            a1.expiredLanes |= 24 & a1.pendingLanes;
            $fe54416e54b68053$var$Mj(a1, $fe54416e54b68053$var$O());
        });
    }
    $fe54416e54b68053$var$ig();
}
function $fe54416e54b68053$var$Wj(a, b) {
    var c = $fe54416e54b68053$var$X;
    $fe54416e54b68053$var$X |= 1;
    try {
        return a(b);
    } finally{
        $fe54416e54b68053$var$X = c, 0 === $fe54416e54b68053$var$X && ($fe54416e54b68053$var$wj(), $fe54416e54b68053$var$ig());
    }
}
function $fe54416e54b68053$var$Xj(a, b) {
    var c = $fe54416e54b68053$var$X;
    $fe54416e54b68053$var$X &= -2;
    $fe54416e54b68053$var$X |= 8;
    try {
        return a(b);
    } finally{
        $fe54416e54b68053$var$X = c, 0 === $fe54416e54b68053$var$X && ($fe54416e54b68053$var$wj(), $fe54416e54b68053$var$ig());
    }
}
function $fe54416e54b68053$var$ni(a, b) {
    $fe54416e54b68053$var$I($fe54416e54b68053$var$rj, $fe54416e54b68053$var$qj);
    $fe54416e54b68053$var$qj |= b;
    $fe54416e54b68053$var$tj |= b;
}
function $fe54416e54b68053$var$Ki() {
    $fe54416e54b68053$var$qj = $fe54416e54b68053$var$rj.current;
    $fe54416e54b68053$var$H($fe54416e54b68053$var$rj);
}
function $fe54416e54b68053$var$Qj(a, b) {
    a.finishedWork = null;
    a.finishedLanes = 0;
    var c = a.timeoutHandle;
    -1 !== c && (a.timeoutHandle = -1, $fe54416e54b68053$var$pf(c));
    if (null !== $fe54416e54b68053$var$Y) for(c = $fe54416e54b68053$var$Y.return; null !== c;){
        var d8 = c;
        switch(d8.tag){
            case 1:
                d8 = d8.type.childContextTypes;
                null !== d8 && (void 0) !== d8 && $fe54416e54b68053$var$Gf();
                break;
            case 3:
                $fe54416e54b68053$var$fh();
                $fe54416e54b68053$var$H($fe54416e54b68053$var$N);
                $fe54416e54b68053$var$H($fe54416e54b68053$var$M);
                $fe54416e54b68053$var$uh();
                break;
            case 5:
                $fe54416e54b68053$var$hh(d8);
                break;
            case 4:
                $fe54416e54b68053$var$fh();
                break;
            case 13:
                $fe54416e54b68053$var$H($fe54416e54b68053$var$P);
                break;
            case 19:
                $fe54416e54b68053$var$H($fe54416e54b68053$var$P);
                break;
            case 10:
                $fe54416e54b68053$var$rg(d8);
                break;
            case 23:
            case 24:
                $fe54416e54b68053$var$Ki();
        }
        c = c.return;
    }
    $fe54416e54b68053$var$U = a;
    $fe54416e54b68053$var$Y = $fe54416e54b68053$var$Tg(a.current, null);
    $fe54416e54b68053$var$W = $fe54416e54b68053$var$qj = $fe54416e54b68053$var$tj = b;
    $fe54416e54b68053$var$V = 0;
    $fe54416e54b68053$var$sj = null;
    $fe54416e54b68053$var$uj = $fe54416e54b68053$var$Hi = $fe54416e54b68053$var$Dg = 0;
}
function $fe54416e54b68053$var$Sj(a, b) {
    do {
        var c = $fe54416e54b68053$var$Y;
        try {
            $fe54416e54b68053$var$qg();
            $fe54416e54b68053$var$vh.current = $fe54416e54b68053$var$Gh;
            if ($fe54416e54b68053$var$yh) {
                for(var d9 = $fe54416e54b68053$var$R.memoizedState; null !== d9;){
                    var e = d9.queue;
                    null !== e && (e.pending = null);
                    d9 = d9.next;
                }
                $fe54416e54b68053$var$yh = !1;
            }
            $fe54416e54b68053$var$xh = 0;
            $fe54416e54b68053$var$T = $fe54416e54b68053$var$S = $fe54416e54b68053$var$R = null;
            $fe54416e54b68053$var$zh = !1;
            $fe54416e54b68053$var$pj.current = null;
            if (null === c || null === c.return) {
                $fe54416e54b68053$var$V = 1;
                $fe54416e54b68053$var$sj = b;
                $fe54416e54b68053$var$Y = null;
                break;
            }
            a: {
                var f = a, g = c.return, h9 = c, k8 = b;
                b = $fe54416e54b68053$var$W;
                h9.flags |= 2048;
                h9.firstEffect = h9.lastEffect = null;
                if (null !== k8 && "object" === typeof k8 && "function" === typeof k8.then) {
                    var l = k8;
                    if (0 === (h9.mode & 2)) {
                        var n5 = h9.alternate;
                        n5 ? (h9.updateQueue = n5.updateQueue, h9.memoizedState = n5.memoizedState, h9.lanes = n5.lanes) : (h9.updateQueue = null, h9.memoizedState = null);
                    }
                    var A = 0 !== ($fe54416e54b68053$var$P.current & 1), p = g;
                    do {
                        var C;
                        if (C = 13 === p.tag) {
                            var x = p.memoizedState;
                            if (null !== x) C = null !== x.dehydrated ? !0 : !1;
                            else {
                                var w2 = p.memoizedProps;
                                C = (void 0) === w2.fallback ? !1 : !0 !== w2.unstable_avoidThisFallback ? !0 : A ? !1 : !0;
                            }
                        }
                        if (C) {
                            var z = p.updateQueue;
                            if (null === z) {
                                var u = new Set;
                                u.add(l);
                                p.updateQueue = u;
                            } else z.add(l);
                            if (0 === (p.mode & 2)) {
                                p.flags |= 64;
                                h9.flags |= 16384;
                                h9.flags &= -2981;
                                if (1 === h9.tag) {
                                    if (null === h9.alternate) h9.tag = 17;
                                    else {
                                        var t = $fe54416e54b68053$var$zg(-1, 1);
                                        t.tag = 2;
                                        $fe54416e54b68053$var$Ag(h9, t);
                                    }
                                }
                                h9.lanes |= 1;
                                break a;
                            }
                            k8 = void 0;
                            h9 = b;
                            var q = f.pingCache;
                            null === q ? (q = f.pingCache = new $fe54416e54b68053$var$Oi, k8 = new Set, q.set(l, k8)) : (k8 = q.get(l), (void 0) === k8 && (k8 = new Set, q.set(l, k8)));
                            if (!k8.has(h9)) {
                                k8.add(h9);
                                var v = $fe54416e54b68053$var$Yj.bind(null, f, l, h9);
                                l.then(v, v);
                            }
                            p.flags |= 4096;
                            p.lanes = b;
                            break a;
                        }
                        p = p.return;
                    }while (null !== p)
                    k8 = Error(($fe54416e54b68053$var$Ra(h9.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.");
                }
                5 !== $fe54416e54b68053$var$V && ($fe54416e54b68053$var$V = 2);
                k8 = $fe54416e54b68053$var$Mi(k8, h9);
                p = g;
                do {
                    switch(p.tag){
                        case 3:
                            f = k8;
                            p.flags |= 4096;
                            b &= -b;
                            p.lanes |= b;
                            var J = $fe54416e54b68053$var$Pi(p, f, b);
                            $fe54416e54b68053$var$Bg(p, J);
                            break a;
                        case 1:
                            f = k8;
                            var K = p.type, Q = p.stateNode;
                            if (0 === (p.flags & 64) && ("function" === typeof K.getDerivedStateFromError || null !== Q && "function" === typeof Q.componentDidCatch && (null === $fe54416e54b68053$var$Ti || !$fe54416e54b68053$var$Ti.has(Q)))) {
                                p.flags |= 4096;
                                b &= -b;
                                p.lanes |= b;
                                var L = $fe54416e54b68053$var$Si(p, f, b);
                                $fe54416e54b68053$var$Bg(p, L);
                                break a;
                            }
                    }
                    p = p.return;
                }while (null !== p)
            }
            $fe54416e54b68053$var$Zj(c);
        } catch (va) {
            b = va;
            $fe54416e54b68053$var$Y === c && null !== c && ($fe54416e54b68053$var$Y = c = c.return);
            continue;
        }
        break;
    }while (1)
}
function $fe54416e54b68053$var$Pj() {
    var a = $fe54416e54b68053$var$oj.current;
    $fe54416e54b68053$var$oj.current = $fe54416e54b68053$var$Gh;
    return null === a ? $fe54416e54b68053$var$Gh : a;
}
function $fe54416e54b68053$var$Tj(a, b) {
    var c = $fe54416e54b68053$var$X;
    $fe54416e54b68053$var$X |= 16;
    var d10 = $fe54416e54b68053$var$Pj();
    $fe54416e54b68053$var$U === a && $fe54416e54b68053$var$W === b || $fe54416e54b68053$var$Qj(a, b);
    for(;;)try {
        $fe54416e54b68053$var$ak();
        break;
    } catch (e) {
        $fe54416e54b68053$var$Sj(a, e);
    }
    $fe54416e54b68053$var$qg();
    $fe54416e54b68053$var$X = c;
    $fe54416e54b68053$var$oj.current = d10;
    if (null !== $fe54416e54b68053$var$Y) throw Error($fe54416e54b68053$var$y(261));
    $fe54416e54b68053$var$U = null;
    $fe54416e54b68053$var$W = 0;
    return $fe54416e54b68053$var$V;
}
function $fe54416e54b68053$var$ak() {
    for(; null !== $fe54416e54b68053$var$Y;)$fe54416e54b68053$var$bk($fe54416e54b68053$var$Y);
}
function $fe54416e54b68053$var$Rj() {
    for(; null !== $fe54416e54b68053$var$Y && !$fe54416e54b68053$var$Qf();)$fe54416e54b68053$var$bk($fe54416e54b68053$var$Y);
}
function $fe54416e54b68053$var$bk(a) {
    var b = $fe54416e54b68053$var$ck(a.alternate, a, $fe54416e54b68053$var$qj);
    a.memoizedProps = a.pendingProps;
    null === b ? $fe54416e54b68053$var$Zj(a) : $fe54416e54b68053$var$Y = b;
    $fe54416e54b68053$var$pj.current = null;
}
function $fe54416e54b68053$var$Zj(a) {
    var b = a;
    do {
        var c = b.alternate;
        a = b.return;
        if (0 === (b.flags & 2048)) {
            c = $fe54416e54b68053$var$Gi(c, b, $fe54416e54b68053$var$qj);
            if (null !== c) {
                $fe54416e54b68053$var$Y = c;
                return;
            }
            c = b;
            if (24 !== c.tag && 23 !== c.tag || null === c.memoizedState || 0 !== ($fe54416e54b68053$var$qj & 1073741824) || 0 === (c.mode & 4)) {
                for(var d10 = 0, e = c.child; null !== e;)d10 |= e.lanes | e.childLanes, e = e.sibling;
                c.childLanes = d10;
            }
            null !== a && 0 === (a.flags & 2048) && (null === a.firstEffect && (a.firstEffect = b.firstEffect), null !== b.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = b.firstEffect), a.lastEffect = b.lastEffect), 1 < b.flags && (null !== a.lastEffect ? a.lastEffect.nextEffect = b : a.firstEffect = b, a.lastEffect = b));
        } else {
            c = $fe54416e54b68053$var$Li(b);
            if (null !== c) {
                c.flags &= 2047;
                $fe54416e54b68053$var$Y = c;
                return;
            }
            null !== a && (a.firstEffect = a.lastEffect = null, a.flags |= 2048);
        }
        b = b.sibling;
        if (null !== b) {
            $fe54416e54b68053$var$Y = b;
            return;
        }
        $fe54416e54b68053$var$Y = b = a;
    }while (null !== b)
    0 === $fe54416e54b68053$var$V && ($fe54416e54b68053$var$V = 5);
}
function $fe54416e54b68053$var$Uj(a) {
    var b = $fe54416e54b68053$var$eg();
    $fe54416e54b68053$var$gg(99, $fe54416e54b68053$var$dk.bind(null, a, b));
    return null;
}
function $fe54416e54b68053$var$dk(a, b) {
    do $fe54416e54b68053$var$Oj();
    while (null !== $fe54416e54b68053$var$yj)
    if (0 !== ($fe54416e54b68053$var$X & 48)) throw Error($fe54416e54b68053$var$y(327));
    var c = a.finishedWork;
    if (null === c) return null;
    a.finishedWork = null;
    a.finishedLanes = 0;
    if (c === a.current) throw Error($fe54416e54b68053$var$y(177));
    a.callbackNode = null;
    var d11 = c.lanes | c.childLanes, e = d11, f = a.pendingLanes & ~e;
    a.pendingLanes = e;
    a.suspendedLanes = 0;
    a.pingedLanes = 0;
    a.expiredLanes &= e;
    a.mutableReadLanes &= e;
    a.entangledLanes &= e;
    e = a.entanglements;
    for(var g = a.eventTimes, h10 = a.expirationTimes; 0 < f;){
        var k9 = 31 - $fe54416e54b68053$var$Vc(f), l = 1 << k9;
        e[k9] = 0;
        g[k9] = -1;
        h10[k9] = -1;
        f &= ~l;
    }
    null !== $fe54416e54b68053$var$Cj && 0 === (d11 & 24) && $fe54416e54b68053$var$Cj.has(a) && $fe54416e54b68053$var$Cj.delete(a);
    a === $fe54416e54b68053$var$U && ($fe54416e54b68053$var$Y = $fe54416e54b68053$var$U = null, $fe54416e54b68053$var$W = 0);
    1 < c.flags ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, d11 = c.firstEffect) : d11 = c : d11 = c.firstEffect;
    if (null !== d11) {
        e = $fe54416e54b68053$var$X;
        $fe54416e54b68053$var$X |= 32;
        $fe54416e54b68053$var$pj.current = null;
        $fe54416e54b68053$var$kf = $fe54416e54b68053$var$fd;
        g = $fe54416e54b68053$var$Ne();
        if ($fe54416e54b68053$var$Oe(g)) {
            if ("selectionStart" in g) h10 = {
                start: g.selectionStart,
                end: g.selectionEnd
            };
            else a: if (h10 = (h10 = g.ownerDocument) && h10.defaultView || window, (l = h10.getSelection && h10.getSelection()) && 0 !== l.rangeCount) {
                h10 = l.anchorNode;
                f = l.anchorOffset;
                k9 = l.focusNode;
                l = l.focusOffset;
                try {
                    h10.nodeType, k9.nodeType;
                } catch (va) {
                    h10 = null;
                    break a;
                }
                var n6 = 0, A = -1, p = -1, C = 0, x = 0, w3 = g, z = null;
                b: for(;;){
                    for(var u;;){
                        w3 !== h10 || 0 !== f && 3 !== w3.nodeType || (A = n6 + f);
                        w3 !== k9 || 0 !== l && 3 !== w3.nodeType || (p = n6 + l);
                        3 === w3.nodeType && (n6 += w3.nodeValue.length);
                        if (null === (u = w3.firstChild)) break;
                        z = w3;
                        w3 = u;
                    }
                    for(;;){
                        if (w3 === g) break b;
                        z === h10 && (++C) === f && (A = n6);
                        z === k9 && (++x) === l && (p = n6);
                        if (null !== (u = w3.nextSibling)) break;
                        w3 = z;
                        z = w3.parentNode;
                    }
                    w3 = u;
                }
                h10 = -1 === A || -1 === p ? null : {
                    start: A,
                    end: p
                };
            } else h10 = null;
            h10 = h10 || {
                start: 0,
                end: 0
            };
        } else h10 = null;
        $fe54416e54b68053$var$lf = {
            focusedElem: g,
            selectionRange: h10
        };
        $fe54416e54b68053$var$fd = !1;
        $fe54416e54b68053$var$Ij = null;
        $fe54416e54b68053$var$Jj = !1;
        $fe54416e54b68053$var$Z = d11;
        do try {
            $fe54416e54b68053$var$ek();
        } catch (va) {
            if (null === $fe54416e54b68053$var$Z) throw Error($fe54416e54b68053$var$y(330));
            $fe54416e54b68053$var$Wi($fe54416e54b68053$var$Z, va);
            $fe54416e54b68053$var$Z = $fe54416e54b68053$var$Z.nextEffect;
        }
        while (null !== $fe54416e54b68053$var$Z)
        $fe54416e54b68053$var$Ij = null;
        $fe54416e54b68053$var$Z = d11;
        do try {
            for(g = a; null !== $fe54416e54b68053$var$Z;){
                var t = $fe54416e54b68053$var$Z.flags;
                t & 16 && $fe54416e54b68053$var$pb($fe54416e54b68053$var$Z.stateNode, "");
                if (t & 128) {
                    var q = $fe54416e54b68053$var$Z.alternate;
                    if (null !== q) {
                        var v = q.ref;
                        null !== v && ("function" === typeof v ? v(null) : v.current = null);
                    }
                }
                switch(t & 1038){
                    case 2:
                        $fe54416e54b68053$var$fj($fe54416e54b68053$var$Z);
                        $fe54416e54b68053$var$Z.flags &= -3;
                        break;
                    case 6:
                        $fe54416e54b68053$var$fj($fe54416e54b68053$var$Z);
                        $fe54416e54b68053$var$Z.flags &= -3;
                        $fe54416e54b68053$var$ij($fe54416e54b68053$var$Z.alternate, $fe54416e54b68053$var$Z);
                        break;
                    case 1024:
                        $fe54416e54b68053$var$Z.flags &= -1025;
                        break;
                    case 1028:
                        $fe54416e54b68053$var$Z.flags &= -1025;
                        $fe54416e54b68053$var$ij($fe54416e54b68053$var$Z.alternate, $fe54416e54b68053$var$Z);
                        break;
                    case 4:
                        $fe54416e54b68053$var$ij($fe54416e54b68053$var$Z.alternate, $fe54416e54b68053$var$Z);
                        break;
                    case 8:
                        h10 = $fe54416e54b68053$var$Z;
                        $fe54416e54b68053$var$cj(g, h10);
                        var J = h10.alternate;
                        $fe54416e54b68053$var$dj(h10);
                        null !== J && $fe54416e54b68053$var$dj(J);
                }
                $fe54416e54b68053$var$Z = $fe54416e54b68053$var$Z.nextEffect;
            }
        } catch (va) {
            if (null === $fe54416e54b68053$var$Z) throw Error($fe54416e54b68053$var$y(330));
            $fe54416e54b68053$var$Wi($fe54416e54b68053$var$Z, va);
            $fe54416e54b68053$var$Z = $fe54416e54b68053$var$Z.nextEffect;
        }
        while (null !== $fe54416e54b68053$var$Z)
        v = $fe54416e54b68053$var$lf;
        q = $fe54416e54b68053$var$Ne();
        t = v.focusedElem;
        g = v.selectionRange;
        if (q !== t && t && t.ownerDocument && $fe54416e54b68053$var$Me(t.ownerDocument.documentElement, t)) {
            null !== g && $fe54416e54b68053$var$Oe(t) && (q = g.start, v = g.end, (void 0) === v && (v = q), "selectionStart" in t ? (t.selectionStart = q, t.selectionEnd = Math.min(v, t.value.length)) : (v = (q = t.ownerDocument || document) && q.defaultView || window, v.getSelection && (v = v.getSelection(), h10 = t.textContent.length, J = Math.min(g.start, h10), g = (void 0) === g.end ? J : Math.min(g.end, h10), !v.extend && J > g && (h10 = g, g = J, J = h10), h10 = $fe54416e54b68053$var$Le(t, J), f = $fe54416e54b68053$var$Le(t, g), h10 && f && (1 !== v.rangeCount || v.anchorNode !== h10.node || v.anchorOffset !== h10.offset || v.focusNode !== f.node || v.focusOffset !== f.offset) && (q = q.createRange(), q.setStart(h10.node, h10.offset), v.removeAllRanges(), J > g ? (v.addRange(q), v.extend(f.node, f.offset)) : (q.setEnd(f.node, f.offset), v.addRange(q))))));
            q = [];
            for(v = t; v = v.parentNode;)1 === v.nodeType && q.push({
                element: v,
                left: v.scrollLeft,
                top: v.scrollTop
            });
            "function" === typeof t.focus && t.focus();
            for(t = 0; t < q.length; t++)v = q[t], v.element.scrollLeft = v.left, v.element.scrollTop = v.top;
        }
        $fe54416e54b68053$var$fd = !!$fe54416e54b68053$var$kf;
        $fe54416e54b68053$var$lf = $fe54416e54b68053$var$kf = null;
        a.current = c;
        $fe54416e54b68053$var$Z = d11;
        do try {
            for(t = a; null !== $fe54416e54b68053$var$Z;){
                var K = $fe54416e54b68053$var$Z.flags;
                K & 36 && $fe54416e54b68053$var$Yi(t, $fe54416e54b68053$var$Z.alternate, $fe54416e54b68053$var$Z);
                if (K & 128) {
                    q = void 0;
                    var Q = $fe54416e54b68053$var$Z.ref;
                    if (null !== Q) {
                        var L = $fe54416e54b68053$var$Z.stateNode;
                        switch($fe54416e54b68053$var$Z.tag){
                            case 5:
                                q = L;
                                break;
                            default:
                                q = L;
                        }
                        "function" === typeof Q ? Q(q) : Q.current = q;
                    }
                }
                $fe54416e54b68053$var$Z = $fe54416e54b68053$var$Z.nextEffect;
            }
        } catch (va) {
            if (null === $fe54416e54b68053$var$Z) throw Error($fe54416e54b68053$var$y(330));
            $fe54416e54b68053$var$Wi($fe54416e54b68053$var$Z, va);
            $fe54416e54b68053$var$Z = $fe54416e54b68053$var$Z.nextEffect;
        }
        while (null !== $fe54416e54b68053$var$Z)
        $fe54416e54b68053$var$Z = null;
        $fe54416e54b68053$var$$f();
        $fe54416e54b68053$var$X = e;
    } else a.current = c;
    if ($fe54416e54b68053$var$xj) $fe54416e54b68053$var$xj = !1, $fe54416e54b68053$var$yj = a, $fe54416e54b68053$var$zj = b;
    else for($fe54416e54b68053$var$Z = d11; null !== $fe54416e54b68053$var$Z;)b = $fe54416e54b68053$var$Z.nextEffect, $fe54416e54b68053$var$Z.nextEffect = null, $fe54416e54b68053$var$Z.flags & 8 && (K = $fe54416e54b68053$var$Z, K.sibling = null, K.stateNode = null), $fe54416e54b68053$var$Z = b;
    d11 = a.pendingLanes;
    0 === d11 && ($fe54416e54b68053$var$Ti = null);
    1 === d11 ? a === $fe54416e54b68053$var$Ej ? $fe54416e54b68053$var$Dj++ : ($fe54416e54b68053$var$Dj = 0, $fe54416e54b68053$var$Ej = a) : $fe54416e54b68053$var$Dj = 0;
    c = c.stateNode;
    if ($fe54416e54b68053$var$Mf && "function" === typeof $fe54416e54b68053$var$Mf.onCommitFiberRoot) try {
        $fe54416e54b68053$var$Mf.onCommitFiberRoot($fe54416e54b68053$var$Lf, c, void 0, 64 === (c.current.flags & 64));
    } catch (va) {
    }
    $fe54416e54b68053$var$Mj(a, $fe54416e54b68053$var$O());
    if ($fe54416e54b68053$var$Qi) throw $fe54416e54b68053$var$Qi = !1, a = $fe54416e54b68053$var$Ri, $fe54416e54b68053$var$Ri = null, a;
    if (0 !== ($fe54416e54b68053$var$X & 8)) return null;
    $fe54416e54b68053$var$ig();
    return null;
}
function $fe54416e54b68053$var$ek() {
    for(; null !== $fe54416e54b68053$var$Z;){
        var a = $fe54416e54b68053$var$Z.alternate;
        $fe54416e54b68053$var$Jj || null === $fe54416e54b68053$var$Ij || (0 !== ($fe54416e54b68053$var$Z.flags & 8) ? $fe54416e54b68053$var$dc($fe54416e54b68053$var$Z, $fe54416e54b68053$var$Ij) && ($fe54416e54b68053$var$Jj = !0) : 13 === $fe54416e54b68053$var$Z.tag && $fe54416e54b68053$var$mj(a, $fe54416e54b68053$var$Z) && $fe54416e54b68053$var$dc($fe54416e54b68053$var$Z, $fe54416e54b68053$var$Ij) && ($fe54416e54b68053$var$Jj = !0));
        var b = $fe54416e54b68053$var$Z.flags;
        0 !== (b & 256) && $fe54416e54b68053$var$Xi(a, $fe54416e54b68053$var$Z);
        0 === (b & 512) || $fe54416e54b68053$var$xj || ($fe54416e54b68053$var$xj = !0, $fe54416e54b68053$var$hg(97, function() {
            $fe54416e54b68053$var$Oj();
            return null;
        }));
        $fe54416e54b68053$var$Z = $fe54416e54b68053$var$Z.nextEffect;
    }
}
function $fe54416e54b68053$var$Oj() {
    if (90 !== $fe54416e54b68053$var$zj) {
        var a = 97 < $fe54416e54b68053$var$zj ? 97 : $fe54416e54b68053$var$zj;
        $fe54416e54b68053$var$zj = 90;
        return $fe54416e54b68053$var$gg(a, $fe54416e54b68053$var$fk);
    }
    return !1;
}
function $fe54416e54b68053$var$$i(a, b) {
    $fe54416e54b68053$var$Aj.push(b, a);
    $fe54416e54b68053$var$xj || ($fe54416e54b68053$var$xj = !0, $fe54416e54b68053$var$hg(97, function() {
        $fe54416e54b68053$var$Oj();
        return null;
    }));
}
function $fe54416e54b68053$var$Zi(a, b) {
    $fe54416e54b68053$var$Bj.push(b, a);
    $fe54416e54b68053$var$xj || ($fe54416e54b68053$var$xj = !0, $fe54416e54b68053$var$hg(97, function() {
        $fe54416e54b68053$var$Oj();
        return null;
    }));
}
function $fe54416e54b68053$var$fk() {
    if (null === $fe54416e54b68053$var$yj) return !1;
    var a = $fe54416e54b68053$var$yj;
    $fe54416e54b68053$var$yj = null;
    if (0 !== ($fe54416e54b68053$var$X & 48)) throw Error($fe54416e54b68053$var$y(331));
    var b = $fe54416e54b68053$var$X;
    $fe54416e54b68053$var$X |= 32;
    var c = $fe54416e54b68053$var$Bj;
    $fe54416e54b68053$var$Bj = [];
    for(var d11 = 0; d11 < c.length; d11 += 2){
        var e = c[d11], f = c[d11 + 1], g = e.destroy;
        e.destroy = void 0;
        if ("function" === typeof g) try {
            g();
        } catch (k10) {
            if (null === f) throw Error($fe54416e54b68053$var$y(330));
            $fe54416e54b68053$var$Wi(f, k10);
        }
    }
    c = $fe54416e54b68053$var$Aj;
    $fe54416e54b68053$var$Aj = [];
    for(d11 = 0; d11 < c.length; d11 += 2){
        e = c[d11];
        f = c[d11 + 1];
        try {
            var h10 = e.create;
            e.destroy = h10();
        } catch (k10) {
            if (null === f) throw Error($fe54416e54b68053$var$y(330));
            $fe54416e54b68053$var$Wi(f, k10);
        }
    }
    for(h10 = a.current.firstEffect; null !== h10;)a = h10.nextEffect, h10.nextEffect = null, h10.flags & 8 && (h10.sibling = null, h10.stateNode = null), h10 = a;
    $fe54416e54b68053$var$X = b;
    $fe54416e54b68053$var$ig();
    return !0;
}
function $fe54416e54b68053$var$gk(a, b, c) {
    b = $fe54416e54b68053$var$Mi(c, b);
    b = $fe54416e54b68053$var$Pi(a, b, 1);
    $fe54416e54b68053$var$Ag(a, b);
    b = $fe54416e54b68053$var$Hg();
    a = $fe54416e54b68053$var$Kj(a, 1);
    null !== a && ($fe54416e54b68053$var$$c(a, 1, b), $fe54416e54b68053$var$Mj(a, b));
}
function $fe54416e54b68053$var$Wi(a, b) {
    if (3 === a.tag) $fe54416e54b68053$var$gk(a, a, b);
    else for(var c = a.return; null !== c;){
        if (3 === c.tag) {
            $fe54416e54b68053$var$gk(c, a, b);
            break;
        } else if (1 === c.tag) {
            var d11 = c.stateNode;
            if ("function" === typeof c.type.getDerivedStateFromError || "function" === typeof d11.componentDidCatch && (null === $fe54416e54b68053$var$Ti || !$fe54416e54b68053$var$Ti.has(d11))) {
                a = $fe54416e54b68053$var$Mi(b, a);
                var e = $fe54416e54b68053$var$Si(c, a, 1);
                $fe54416e54b68053$var$Ag(c, e);
                e = $fe54416e54b68053$var$Hg();
                c = $fe54416e54b68053$var$Kj(c, 1);
                if (null !== c) $fe54416e54b68053$var$$c(c, 1, e), $fe54416e54b68053$var$Mj(c, e);
                else if ("function" === typeof d11.componentDidCatch && (null === $fe54416e54b68053$var$Ti || !$fe54416e54b68053$var$Ti.has(d11))) try {
                    d11.componentDidCatch(b, a);
                } catch (f) {
                }
                break;
            }
        }
        c = c.return;
    }
}
function $fe54416e54b68053$var$Yj(a, b, c) {
    var d12 = a.pingCache;
    null !== d12 && d12.delete(b);
    b = $fe54416e54b68053$var$Hg();
    a.pingedLanes |= a.suspendedLanes & c;
    $fe54416e54b68053$var$U === a && ($fe54416e54b68053$var$W & c) === c && (4 === $fe54416e54b68053$var$V || 3 === $fe54416e54b68053$var$V && ($fe54416e54b68053$var$W & 62914560) === $fe54416e54b68053$var$W && 500 > $fe54416e54b68053$var$O() - $fe54416e54b68053$var$jj ? $fe54416e54b68053$var$Qj(a, 0) : $fe54416e54b68053$var$uj |= c);
    $fe54416e54b68053$var$Mj(a, b);
}
function $fe54416e54b68053$var$lj(a, b) {
    var c = a.stateNode;
    null !== c && c.delete(b);
    b = 0;
    0 === b && (b = a.mode, 0 === (b & 2) ? b = 1 : 0 === (b & 4) ? b = 99 === $fe54416e54b68053$var$eg() ? 1 : 2 : (0 === $fe54416e54b68053$var$Gj && ($fe54416e54b68053$var$Gj = $fe54416e54b68053$var$tj), b = $fe54416e54b68053$var$Yc(62914560 & ~$fe54416e54b68053$var$Gj), 0 === b && (b = 4194304)));
    c = $fe54416e54b68053$var$Hg();
    a = $fe54416e54b68053$var$Kj(a, b);
    null !== a && ($fe54416e54b68053$var$$c(a, b, c), $fe54416e54b68053$var$Mj(a, c));
}
var $fe54416e54b68053$var$ck;
$fe54416e54b68053$var$ck = function(a, b, c) {
    var d12 = b.lanes;
    if (null !== a) {
        if (a.memoizedProps !== b.pendingProps || $fe54416e54b68053$var$N.current) $fe54416e54b68053$var$ug = !0;
        else if (0 !== (c & d12)) $fe54416e54b68053$var$ug = 0 !== (a.flags & 16384) ? !0 : !1;
        else {
            $fe54416e54b68053$var$ug = !1;
            switch(b.tag){
                case 3:
                    $fe54416e54b68053$var$ri(b);
                    $fe54416e54b68053$var$sh();
                    break;
                case 5:
                    $fe54416e54b68053$var$gh(b);
                    break;
                case 1:
                    $fe54416e54b68053$var$Ff(b.type) && $fe54416e54b68053$var$Jf(b);
                    break;
                case 4:
                    $fe54416e54b68053$var$eh(b, b.stateNode.containerInfo);
                    break;
                case 10:
                    d12 = b.memoizedProps.value;
                    var e = b.type._context;
                    $fe54416e54b68053$var$I($fe54416e54b68053$var$mg, e._currentValue);
                    e._currentValue = d12;
                    break;
                case 13:
                    if (null !== b.memoizedState) {
                        if (0 !== (c & b.child.childLanes)) return $fe54416e54b68053$var$ti(a, b, c);
                        $fe54416e54b68053$var$I($fe54416e54b68053$var$P, $fe54416e54b68053$var$P.current & 1);
                        b = $fe54416e54b68053$var$hi(a, b, c);
                        return null !== b ? b.sibling : null;
                    }
                    $fe54416e54b68053$var$I($fe54416e54b68053$var$P, $fe54416e54b68053$var$P.current & 1);
                    break;
                case 19:
                    d12 = 0 !== (c & b.childLanes);
                    if (0 !== (a.flags & 64)) {
                        if (d12) return $fe54416e54b68053$var$Ai(a, b, c);
                        b.flags |= 64;
                    }
                    e = b.memoizedState;
                    null !== e && (e.rendering = null, e.tail = null, e.lastEffect = null);
                    $fe54416e54b68053$var$I($fe54416e54b68053$var$P, $fe54416e54b68053$var$P.current);
                    if (d12) break;
                    else return null;
                case 23:
                case 24:
                    return b.lanes = 0, $fe54416e54b68053$var$mi(a, b, c);
            }
            return $fe54416e54b68053$var$hi(a, b, c);
        }
    } else $fe54416e54b68053$var$ug = !1;
    b.lanes = 0;
    switch(b.tag){
        case 2:
            d12 = b.type;
            null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
            a = b.pendingProps;
            e = $fe54416e54b68053$var$Ef(b, $fe54416e54b68053$var$M.current);
            $fe54416e54b68053$var$tg(b, c);
            e = $fe54416e54b68053$var$Ch(null, b, d12, a, e, c);
            b.flags |= 1;
            if ("object" === typeof e && null !== e && "function" === typeof e.render && (void 0) === e.$$typeof) {
                b.tag = 1;
                b.memoizedState = null;
                b.updateQueue = null;
                if ($fe54416e54b68053$var$Ff(d12)) {
                    var f = !0;
                    $fe54416e54b68053$var$Jf(b);
                } else f = !1;
                b.memoizedState = null !== e.state && (void 0) !== e.state ? e.state : null;
                $fe54416e54b68053$var$xg(b);
                var g = d12.getDerivedStateFromProps;
                "function" === typeof g && $fe54416e54b68053$var$Gg(b, d12, g, a);
                e.updater = $fe54416e54b68053$var$Kg;
                b.stateNode = e;
                e._reactInternals = b;
                $fe54416e54b68053$var$Og(b, d12, a, c);
                b = $fe54416e54b68053$var$qi(null, b, d12, !0, f, c);
            } else b.tag = 0, $fe54416e54b68053$var$fi(null, b, e, c), b = b.child;
            return b;
        case 16:
            e = b.elementType;
            a: {
                null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2);
                a = b.pendingProps;
                f = e._init;
                e = f(e._payload);
                b.type = e;
                f = b.tag = $fe54416e54b68053$var$hk(e);
                a = $fe54416e54b68053$var$lg(e, a);
                switch(f){
                    case 0:
                        b = $fe54416e54b68053$var$li(null, b, e, a, c);
                        break a;
                    case 1:
                        b = $fe54416e54b68053$var$pi(null, b, e, a, c);
                        break a;
                    case 11:
                        b = $fe54416e54b68053$var$gi(null, b, e, a, c);
                        break a;
                    case 14:
                        b = $fe54416e54b68053$var$ii(null, b, e, $fe54416e54b68053$var$lg(e.type, a), d12, c);
                        break a;
                }
                throw Error($fe54416e54b68053$var$y(306, e, ""));
            }
            return b;
        case 0:
            return d12 = b.type, e = b.pendingProps, e = b.elementType === d12 ? e : $fe54416e54b68053$var$lg(d12, e), $fe54416e54b68053$var$li(a, b, d12, e, c);
        case 1:
            return d12 = b.type, e = b.pendingProps, e = b.elementType === d12 ? e : $fe54416e54b68053$var$lg(d12, e), $fe54416e54b68053$var$pi(a, b, d12, e, c);
        case 3:
            $fe54416e54b68053$var$ri(b);
            d12 = b.updateQueue;
            if (null === a || null === d12) throw Error($fe54416e54b68053$var$y(282));
            d12 = b.pendingProps;
            e = b.memoizedState;
            e = null !== e ? e.element : null;
            $fe54416e54b68053$var$yg(a, b);
            $fe54416e54b68053$var$Cg(b, d12, null, c);
            d12 = b.memoizedState.element;
            if (d12 === e) $fe54416e54b68053$var$sh(), b = $fe54416e54b68053$var$hi(a, b, c);
            else {
                e = b.stateNode;
                if (f = e.hydrate) $fe54416e54b68053$var$kh = $fe54416e54b68053$var$rf(b.stateNode.containerInfo.firstChild), $fe54416e54b68053$var$jh = b, f = $fe54416e54b68053$var$lh = !0;
                if (f) {
                    a = e.mutableSourceEagerHydrationData;
                    if (null != a) for(e = 0; e < a.length; e += 2)f = a[e], f._workInProgressVersionPrimary = a[e + 1], $fe54416e54b68053$var$th.push(f);
                    c = $fe54416e54b68053$var$Zg(b, null, d12, c);
                    for(b.child = c; c;)c.flags = c.flags & -3 | 1024, c = c.sibling;
                } else $fe54416e54b68053$var$fi(a, b, d12, c), $fe54416e54b68053$var$sh();
                b = b.child;
            }
            return b;
        case 5:
            return $fe54416e54b68053$var$gh(b), null === a && $fe54416e54b68053$var$ph(b), d12 = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, $fe54416e54b68053$var$nf(d12, e) ? g = null : null !== f && $fe54416e54b68053$var$nf(d12, f) && (b.flags |= 16), $fe54416e54b68053$var$oi(a, b), $fe54416e54b68053$var$fi(a, b, g, c), b.child;
        case 6:
            return null === a && $fe54416e54b68053$var$ph(b), null;
        case 13:
            return $fe54416e54b68053$var$ti(a, b, c);
        case 4:
            return $fe54416e54b68053$var$eh(b, b.stateNode.containerInfo), d12 = b.pendingProps, null === a ? b.child = $fe54416e54b68053$var$Yg(b, null, d12, c) : $fe54416e54b68053$var$fi(a, b, d12, c), b.child;
        case 11:
            return d12 = b.type, e = b.pendingProps, e = b.elementType === d12 ? e : $fe54416e54b68053$var$lg(d12, e), $fe54416e54b68053$var$gi(a, b, d12, e, c);
        case 7:
            return $fe54416e54b68053$var$fi(a, b, b.pendingProps, c), b.child;
        case 8:
            return $fe54416e54b68053$var$fi(a, b, b.pendingProps.children, c), b.child;
        case 12:
            return $fe54416e54b68053$var$fi(a, b, b.pendingProps.children, c), b.child;
        case 10:
            a: {
                d12 = b.type._context;
                e = b.pendingProps;
                g = b.memoizedProps;
                f = e.value;
                var h11 = b.type._context;
                $fe54416e54b68053$var$I($fe54416e54b68053$var$mg, h11._currentValue);
                h11._currentValue = f;
                if (null !== g) {
                    if (h11 = g.value, f = $fe54416e54b68053$var$He(h11, f) ? 0 : ("function" === typeof d12._calculateChangedBits ? d12._calculateChangedBits(h11, f) : 1073741823) | 0, 0 === f) {
                        if (g.children === e.children && !$fe54416e54b68053$var$N.current) {
                            b = $fe54416e54b68053$var$hi(a, b, c);
                            break a;
                        }
                    } else for(h11 = b.child, null !== h11 && (h11.return = b); null !== h11;){
                        var k10 = h11.dependencies;
                        if (null !== k10) {
                            g = h11.child;
                            for(var l = k10.firstContext; null !== l;){
                                if (l.context === d12 && 0 !== (l.observedBits & f)) {
                                    1 === h11.tag && (l = $fe54416e54b68053$var$zg(-1, c & -c), l.tag = 2, $fe54416e54b68053$var$Ag(h11, l));
                                    h11.lanes |= c;
                                    l = h11.alternate;
                                    null !== l && (l.lanes |= c);
                                    $fe54416e54b68053$var$sg(h11.return, c);
                                    k10.lanes |= c;
                                    break;
                                }
                                l = l.next;
                            }
                        } else g = 10 === h11.tag ? h11.type === b.type ? null : h11.child : h11.child;
                        if (null !== g) g.return = h11;
                        else for(g = h11; null !== g;){
                            if (g === b) {
                                g = null;
                                break;
                            }
                            h11 = g.sibling;
                            if (null !== h11) {
                                h11.return = g.return;
                                g = h11;
                                break;
                            }
                            g = g.return;
                        }
                        h11 = g;
                    }
                }
                $fe54416e54b68053$var$fi(a, b, e.children, c);
                b = b.child;
            }
            return b;
        case 9:
            return e = b.type, f = b.pendingProps, d12 = f.children, $fe54416e54b68053$var$tg(b, c), e = $fe54416e54b68053$var$vg(e, f.unstable_observedBits), d12 = d12(e), b.flags |= 1, $fe54416e54b68053$var$fi(a, b, d12, c), b.child;
        case 14:
            return e = b.type, f = $fe54416e54b68053$var$lg(e, b.pendingProps), f = $fe54416e54b68053$var$lg(e.type, f), $fe54416e54b68053$var$ii(a, b, e, f, d12, c);
        case 15:
            return $fe54416e54b68053$var$ki(a, b, b.type, b.pendingProps, d12, c);
        case 17:
            return d12 = b.type, e = b.pendingProps, e = b.elementType === d12 ? e : $fe54416e54b68053$var$lg(d12, e), null !== a && (a.alternate = null, b.alternate = null, b.flags |= 2), b.tag = 1, $fe54416e54b68053$var$Ff(d12) ? (a = !0, $fe54416e54b68053$var$Jf(b)) : a = !1, $fe54416e54b68053$var$tg(b, c), $fe54416e54b68053$var$Mg(b, d12, e), $fe54416e54b68053$var$Og(b, d12, e, c), $fe54416e54b68053$var$qi(null, b, d12, !0, a, c);
        case 19:
            return $fe54416e54b68053$var$Ai(a, b, c);
        case 23:
            return $fe54416e54b68053$var$mi(a, b, c);
        case 24:
            return $fe54416e54b68053$var$mi(a, b, c);
    }
    throw Error($fe54416e54b68053$var$y(156, b.tag));
};
function $fe54416e54b68053$var$ik(a, b, c, d12) {
    this.tag = a;
    this.key = c;
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;
    this.index = 0;
    this.ref = null;
    this.pendingProps = b;
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;
    this.mode = d12;
    this.flags = 0;
    this.lastEffect = this.firstEffect = this.nextEffect = null;
    this.childLanes = this.lanes = 0;
    this.alternate = null;
}
function $fe54416e54b68053$var$nh(a, b, c, d12) {
    return new $fe54416e54b68053$var$ik(a, b, c, d12);
}
function $fe54416e54b68053$var$ji(a) {
    a = a.prototype;
    return !(!a || !a.isReactComponent);
}
function $fe54416e54b68053$var$hk(a) {
    if ("function" === typeof a) return $fe54416e54b68053$var$ji(a) ? 1 : 0;
    if ((void 0) !== a && null !== a) {
        a = a.$$typeof;
        if (a === $fe54416e54b68053$var$Aa) return 11;
        if (a === $fe54416e54b68053$var$Da) return 14;
    }
    return 2;
}
function $fe54416e54b68053$var$Tg(a, b) {
    var c = a.alternate;
    null === c ? (c = $fe54416e54b68053$var$nh(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.type = a.type, c.flags = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);
    c.childLanes = a.childLanes;
    c.lanes = a.lanes;
    c.child = a.child;
    c.memoizedProps = a.memoizedProps;
    c.memoizedState = a.memoizedState;
    c.updateQueue = a.updateQueue;
    b = a.dependencies;
    c.dependencies = null === b ? null : {
        lanes: b.lanes,
        firstContext: b.firstContext
    };
    c.sibling = a.sibling;
    c.index = a.index;
    c.ref = a.ref;
    return c;
}
function $fe54416e54b68053$var$Vg(a, b, c, d12, e, f) {
    var g = 2;
    d12 = a;
    if ("function" === typeof a) $fe54416e54b68053$var$ji(a) && (g = 1);
    else if ("string" === typeof a) g = 5;
    else a: switch(a){
        case $fe54416e54b68053$var$ua:
            return $fe54416e54b68053$var$Xg(c.children, e, f, b);
        case $fe54416e54b68053$var$Ha:
            g = 8;
            e |= 16;
            break;
        case $fe54416e54b68053$var$wa:
            g = 8;
            e |= 1;
            break;
        case $fe54416e54b68053$var$xa:
            return a = $fe54416e54b68053$var$nh(12, c, b, e | 8), a.elementType = $fe54416e54b68053$var$xa, a.type = $fe54416e54b68053$var$xa, a.lanes = f, a;
        case $fe54416e54b68053$var$Ba:
            return a = $fe54416e54b68053$var$nh(13, c, b, e), a.type = $fe54416e54b68053$var$Ba, a.elementType = $fe54416e54b68053$var$Ba, a.lanes = f, a;
        case $fe54416e54b68053$var$Ca:
            return a = $fe54416e54b68053$var$nh(19, c, b, e), a.elementType = $fe54416e54b68053$var$Ca, a.lanes = f, a;
        case $fe54416e54b68053$var$Ia:
            return $fe54416e54b68053$var$vi(c, e, f, b);
        case $fe54416e54b68053$var$Ja:
            return a = $fe54416e54b68053$var$nh(24, c, b, e), a.elementType = $fe54416e54b68053$var$Ja, a.lanes = f, a;
        default:
            if ("object" === typeof a && null !== a) switch(a.$$typeof){
                case $fe54416e54b68053$var$ya:
                    g = 10;
                    break a;
                case $fe54416e54b68053$var$za:
                    g = 9;
                    break a;
                case $fe54416e54b68053$var$Aa:
                    g = 11;
                    break a;
                case $fe54416e54b68053$var$Da:
                    g = 14;
                    break a;
                case $fe54416e54b68053$var$Ea:
                    g = 16;
                    d12 = null;
                    break a;
                case $fe54416e54b68053$var$Fa:
                    g = 22;
                    break a;
            }
            throw Error($fe54416e54b68053$var$y(130, null == a ? a : typeof a, ""));
    }
    b = $fe54416e54b68053$var$nh(g, c, b, e);
    b.elementType = a;
    b.type = d12;
    b.lanes = f;
    return b;
}
function $fe54416e54b68053$var$Xg(a, b, c, d12) {
    a = $fe54416e54b68053$var$nh(7, a, d12, b);
    a.lanes = c;
    return a;
}
function $fe54416e54b68053$var$vi(a, b, c, d12) {
    a = $fe54416e54b68053$var$nh(23, a, d12, b);
    a.elementType = $fe54416e54b68053$var$Ia;
    a.lanes = c;
    return a;
}
function $fe54416e54b68053$var$Ug(a, b, c) {
    a = $fe54416e54b68053$var$nh(6, a, null, b);
    a.lanes = c;
    return a;
}
function $fe54416e54b68053$var$Wg(a, b, c) {
    b = $fe54416e54b68053$var$nh(4, null !== a.children ? a.children : [], a.key, b);
    b.lanes = c;
    b.stateNode = {
        containerInfo: a.containerInfo,
        pendingChildren: null,
        implementation: a.implementation
    };
    return b;
}
function $fe54416e54b68053$var$jk(a, b, c) {
    this.tag = b;
    this.containerInfo = a;
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null;
    this.timeoutHandle = -1;
    this.pendingContext = this.context = null;
    this.hydrate = c;
    this.callbackNode = null;
    this.callbackPriority = 0;
    this.eventTimes = $fe54416e54b68053$var$Zc(0);
    this.expirationTimes = $fe54416e54b68053$var$Zc(-1);
    this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0;
    this.entanglements = $fe54416e54b68053$var$Zc(0);
    this.mutableSourceEagerHydrationData = null;
}
function $fe54416e54b68053$var$kk(a, b, c) {
    var d12 = 3 < arguments.length && (void 0) !== arguments[3] ? arguments[3] : null;
    return {
        $$typeof: $fe54416e54b68053$var$ta,
        key: null == d12 ? null : "" + d12,
        children: a,
        containerInfo: b,
        implementation: c
    };
}
function $fe54416e54b68053$var$lk(a, b, c, d12) {
    var e = b.current, f = $fe54416e54b68053$var$Hg(), g = $fe54416e54b68053$var$Ig(e);
    a: if (c) {
        c = c._reactInternals;
        b: {
            if ($fe54416e54b68053$var$Zb(c) !== c || 1 !== c.tag) throw Error($fe54416e54b68053$var$y(170));
            var h12 = c;
            do {
                switch(h12.tag){
                    case 3:
                        h12 = h12.stateNode.context;
                        break b;
                    case 1:
                        if ($fe54416e54b68053$var$Ff(h12.type)) {
                            h12 = h12.stateNode.__reactInternalMemoizedMergedChildContext;
                            break b;
                        }
                }
                h12 = h12.return;
            }while (null !== h12)
            throw Error($fe54416e54b68053$var$y(171));
        }
        if (1 === c.tag) {
            var k11 = c.type;
            if ($fe54416e54b68053$var$Ff(k11)) {
                c = $fe54416e54b68053$var$If(c, k11, h12);
                break a;
            }
        }
        c = h12;
    } else c = $fe54416e54b68053$var$Cf;
    null === b.context ? b.context = c : b.pendingContext = c;
    b = $fe54416e54b68053$var$zg(f, g);
    b.payload = {
        element: a
    };
    d12 = (void 0) === d12 ? null : d12;
    null !== d12 && (b.callback = d12);
    $fe54416e54b68053$var$Ag(e, b);
    $fe54416e54b68053$var$Jg(e, g, f);
    return g;
}
function $fe54416e54b68053$var$mk(a) {
    a = a.current;
    if (!a.child) return null;
    switch(a.child.tag){
        case 5:
            return a.child.stateNode;
        default:
            return a.child.stateNode;
    }
}
function $fe54416e54b68053$var$nk(a, b) {
    a = a.memoizedState;
    if (null !== a && null !== a.dehydrated) {
        var c = a.retryLane;
        a.retryLane = 0 !== c && c < b ? c : b;
    }
}
function $fe54416e54b68053$var$ok(a, b) {
    $fe54416e54b68053$var$nk(a, b);
    (a = a.alternate) && $fe54416e54b68053$var$nk(a, b);
}
function $fe54416e54b68053$var$pk() {
    return null;
}
function $fe54416e54b68053$var$qk(a, b, c) {
    var d12 = null != c && null != c.hydrationOptions && c.hydrationOptions.mutableSources || null;
    c = new $fe54416e54b68053$var$jk(a, b, null != c && !0 === c.hydrate);
    b = $fe54416e54b68053$var$nh(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
    c.current = b;
    b.stateNode = c;
    $fe54416e54b68053$var$xg(b);
    a[$fe54416e54b68053$var$ff] = c.current;
    $fe54416e54b68053$var$cf(8 === a.nodeType ? a.parentNode : a);
    if (d12) for(a = 0; a < d12.length; a++){
        b = d12[a];
        var e = b._getVersion;
        e = e(b._source);
        null == c.mutableSourceEagerHydrationData ? c.mutableSourceEagerHydrationData = [
            b,
            e
        ] : c.mutableSourceEagerHydrationData.push(b, e);
    }
    this._internalRoot = c;
}
$fe54416e54b68053$var$qk.prototype.render = function(a) {
    $fe54416e54b68053$var$lk(a, this._internalRoot, null, null);
};
$fe54416e54b68053$var$qk.prototype.unmount = function() {
    var a = this._internalRoot, b = a.containerInfo;
    $fe54416e54b68053$var$lk(null, a, null, function() {
        b[$fe54416e54b68053$var$ff] = null;
    });
};
function $fe54416e54b68053$var$rk(a) {
    return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
}
function $fe54416e54b68053$var$sk(a, b) {
    b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute("data-reactroot")));
    if (!b) for(var c; c = a.lastChild;)a.removeChild(c);
    return new $fe54416e54b68053$var$qk(a, 0, b ? {
        hydrate: !0
    } : void 0);
}
function $fe54416e54b68053$var$tk(a, b, c, d12, e) {
    var f = c._reactRootContainer;
    if (f) {
        var g = f._internalRoot;
        if ("function" === typeof e) {
            var h13 = e;
            e = function() {
                var a1 = $fe54416e54b68053$var$mk(g);
                h13.call(a1);
            };
        }
        $fe54416e54b68053$var$lk(b, g, a, e);
    } else {
        f = c._reactRootContainer = $fe54416e54b68053$var$sk(c, d12);
        g = f._internalRoot;
        if ("function" === typeof e) {
            var k12 = e;
            e = function() {
                var a1 = $fe54416e54b68053$var$mk(g);
                k12.call(a1);
            };
        }
        $fe54416e54b68053$var$Xj(function() {
            $fe54416e54b68053$var$lk(b, g, a, e);
        });
    }
    return $fe54416e54b68053$var$mk(g);
}
$fe54416e54b68053$var$ec = function(a) {
    if (13 === a.tag) {
        var b = $fe54416e54b68053$var$Hg();
        $fe54416e54b68053$var$Jg(a, 4, b);
        $fe54416e54b68053$var$ok(a, 4);
    }
};
$fe54416e54b68053$var$fc = function(a) {
    if (13 === a.tag) {
        var b = $fe54416e54b68053$var$Hg();
        $fe54416e54b68053$var$Jg(a, 67108864, b);
        $fe54416e54b68053$var$ok(a, 67108864);
    }
};
$fe54416e54b68053$var$gc = function(a) {
    if (13 === a.tag) {
        var b = $fe54416e54b68053$var$Hg(), c = $fe54416e54b68053$var$Ig(a);
        $fe54416e54b68053$var$Jg(a, c, b);
        $fe54416e54b68053$var$ok(a, c);
    }
};
$fe54416e54b68053$var$hc = function(a, b) {
    return b();
};
$fe54416e54b68053$var$yb = function(a, b, c) {
    switch(b){
        case "input":
            $fe54416e54b68053$var$ab(a, c);
            b = c.name;
            if ("radio" === c.type && null != b) {
                for(c = a; c.parentNode;)c = c.parentNode;
                c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]');
                for(b = 0; b < c.length; b++){
                    var d12 = c[b];
                    if (d12 !== a && d12.form === a.form) {
                        var e = $fe54416e54b68053$var$Db(d12);
                        if (!e) throw Error($fe54416e54b68053$var$y(90));
                        $fe54416e54b68053$var$Wa(d12);
                        $fe54416e54b68053$var$ab(d12, e);
                    }
                }
            }
            break;
        case "textarea":
            $fe54416e54b68053$var$ib(a, c);
            break;
        case "select":
            b = c.value, null != b && $fe54416e54b68053$var$fb(a, !!c.multiple, b, !1);
    }
};
$fe54416e54b68053$var$Gb = $fe54416e54b68053$var$Wj;
$fe54416e54b68053$var$Hb = function(a, b, c, d13, e) {
    var f = $fe54416e54b68053$var$X;
    $fe54416e54b68053$var$X |= 4;
    try {
        return $fe54416e54b68053$var$gg(98, a.bind(null, b, c, d13, e));
    } finally{
        $fe54416e54b68053$var$X = f, 0 === $fe54416e54b68053$var$X && ($fe54416e54b68053$var$wj(), $fe54416e54b68053$var$ig());
    }
};
$fe54416e54b68053$var$Ib = function() {
    0 === ($fe54416e54b68053$var$X & 49) && ($fe54416e54b68053$var$Vj(), $fe54416e54b68053$var$Oj());
};
$fe54416e54b68053$var$Jb = function(a, b) {
    var c = $fe54416e54b68053$var$X;
    $fe54416e54b68053$var$X |= 2;
    try {
        return a(b);
    } finally{
        $fe54416e54b68053$var$X = c, 0 === $fe54416e54b68053$var$X && ($fe54416e54b68053$var$wj(), $fe54416e54b68053$var$ig());
    }
};
function $fe54416e54b68053$var$uk(a, b) {
    var c = 2 < arguments.length && (void 0) !== arguments[2] ? arguments[2] : null;
    if (!$fe54416e54b68053$var$rk(b)) throw Error($fe54416e54b68053$var$y(200));
    return $fe54416e54b68053$var$kk(a, b, null, c);
}
var $fe54416e54b68053$var$vk = {
    Events: [
        $fe54416e54b68053$var$Cb,
        $fe54416e54b68053$var$ue,
        $fe54416e54b68053$var$Db,
        $fe54416e54b68053$var$Eb,
        $fe54416e54b68053$var$Fb,
        $fe54416e54b68053$var$Oj,
        {
            current: !1
        }
    ]
}, $fe54416e54b68053$var$wk = {
    findFiberByHostInstance: $fe54416e54b68053$var$wc,
    bundleType: 0,
    version: "17.0.1",
    rendererPackageName: "react-dom"
};
var $fe54416e54b68053$var$xk = {
    bundleType: $fe54416e54b68053$var$wk.bundleType,
    version: $fe54416e54b68053$var$wk.version,
    rendererPackageName: $fe54416e54b68053$var$wk.rendererPackageName,
    rendererConfig: $fe54416e54b68053$var$wk.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: $fe54416e54b68053$var$ra.ReactCurrentDispatcher,
    findHostInstanceByFiber: function(a) {
        a = $fe54416e54b68053$var$cc(a);
        return null === a ? null : a.stateNode;
    },
    findFiberByHostInstance: $fe54416e54b68053$var$wk.findFiberByHostInstance || $fe54416e54b68053$var$pk,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null
};
if ("undefined" !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    var $fe54416e54b68053$var$yk = __REACT_DEVTOOLS_GLOBAL_HOOK__;
    if (!$fe54416e54b68053$var$yk.isDisabled && $fe54416e54b68053$var$yk.supportsFiber) try {
        $fe54416e54b68053$var$Lf = $fe54416e54b68053$var$yk.inject($fe54416e54b68053$var$xk), $fe54416e54b68053$var$Mf = $fe54416e54b68053$var$yk;
    } catch (a) {
    }
}
$fe54416e54b68053$export$d3a973975d28d962 = $fe54416e54b68053$var$vk;
$fe54416e54b68053$export$daa207208ae40787 = $fe54416e54b68053$var$uk;
$fe54416e54b68053$export$1817be7fffc127f2 = function(a) {
    if (null == a) return null;
    if (1 === a.nodeType) return a;
    var b = a._reactInternals;
    if ((void 0) === b) {
        if ("function" === typeof a.render) throw Error($fe54416e54b68053$var$y(188));
        throw Error($fe54416e54b68053$var$y(268, Object.keys(a)));
    }
    a = $fe54416e54b68053$var$cc(b);
    a = null === a ? null : a.stateNode;
    return a;
};
$fe54416e54b68053$export$2836d6a43c939b43 = function(a, b) {
    var c = $fe54416e54b68053$var$X;
    if (0 !== (c & 48)) return a(b);
    $fe54416e54b68053$var$X |= 1;
    try {
        if (a) return $fe54416e54b68053$var$gg(99, a.bind(null, b));
    } finally{
        $fe54416e54b68053$var$X = c, $fe54416e54b68053$var$ig();
    }
};
$fe54416e54b68053$export$dc71f274e8db783f = function(a, b, c) {
    if (!$fe54416e54b68053$var$rk(b)) throw Error($fe54416e54b68053$var$y(200));
    return $fe54416e54b68053$var$tk(null, a, b, !0, c);
};
$fe54416e54b68053$export$792a797b69be0d58 = function(a, b, c) {
    if (!$fe54416e54b68053$var$rk(b)) throw Error($fe54416e54b68053$var$y(200));
    return $fe54416e54b68053$var$tk(null, a, b, !1, c);
};
$fe54416e54b68053$export$8b551db4c9986cff = function(a) {
    if (!$fe54416e54b68053$var$rk(a)) throw Error($fe54416e54b68053$var$y(40));
    return a._reactRootContainer ? ($fe54416e54b68053$var$Xj(function() {
        $fe54416e54b68053$var$tk(null, null, a, !1, function() {
            a._reactRootContainer = null;
            a[$fe54416e54b68053$var$ff] = null;
        });
    }), !0) : !1;
};
$fe54416e54b68053$export$bd9f53b4075e6ae5 = $fe54416e54b68053$var$Wj;
$fe54416e54b68053$export$d0103c6ec7ca9228 = function(a, b) {
    return $fe54416e54b68053$var$uk(a, b, 2 < arguments.length && (void 0) !== arguments[2] ? arguments[2] : null);
};
$fe54416e54b68053$export$3ce83da383eb002 = function(a, b, c, d13) {
    if (!$fe54416e54b68053$var$rk(c)) throw Error($fe54416e54b68053$var$y(200));
    if (null == a || (void 0) === a._reactInternals) throw Error($fe54416e54b68053$var$y(38));
    return $fe54416e54b68053$var$tk(a, b, c, !1, d13);
};
$fe54416e54b68053$export$aef83baa0e7093df = "17.0.1";

});
parcelRequire.register("eZpbl", function(module, exports) {
'use strict';

module.exports = (parcelRequire("c0mEq"));

});
parcelRequire.register("c0mEq", function(module, exports) {

$parcel$export(module.exports, "unstable_pauseExecution", () => $8bd70e22fc401e98$export$5e601b4f728eb985, (v) => $8bd70e22fc401e98$export$5e601b4f728eb985 = v);
$parcel$export(module.exports, "unstable_continueExecution", () => $8bd70e22fc401e98$export$99159ba6f57f614b, (v) => $8bd70e22fc401e98$export$99159ba6f57f614b = v);
$parcel$export(module.exports, "unstable_IdlePriority", () => $8bd70e22fc401e98$export$a8213bdccbda1880, (v) => $8bd70e22fc401e98$export$a8213bdccbda1880 = v);
$parcel$export(module.exports, "unstable_scheduleCallback", () => $8bd70e22fc401e98$export$7041a4e8de30a420, (v) => $8bd70e22fc401e98$export$7041a4e8de30a420 = v);
$parcel$export(module.exports, "unstable_UserBlockingPriority", () => $8bd70e22fc401e98$export$129277e4e92eba98, (v) => $8bd70e22fc401e98$export$129277e4e92eba98 = v);
$parcel$export(module.exports, "unstable_getFirstCallbackNode", () => $8bd70e22fc401e98$export$8cf1d9a370da0d06, (v) => $8bd70e22fc401e98$export$8cf1d9a370da0d06 = v);
$parcel$export(module.exports, "unstable_ImmediatePriority", () => $8bd70e22fc401e98$export$d381847666dbb04a, (v) => $8bd70e22fc401e98$export$d381847666dbb04a = v);
$parcel$export(module.exports, "unstable_cancelCallback", () => $8bd70e22fc401e98$export$1d44eee4f9eceaed, (v) => $8bd70e22fc401e98$export$1d44eee4f9eceaed = v);
$parcel$export(module.exports, "unstable_getCurrentPriorityLevel", () => $8bd70e22fc401e98$export$76e1629bf224515e, (v) => $8bd70e22fc401e98$export$76e1629bf224515e = v);
$parcel$export(module.exports, "unstable_Profiling", () => $8bd70e22fc401e98$export$78b792eba8cd5cae, (v) => $8bd70e22fc401e98$export$78b792eba8cd5cae = v);
$parcel$export(module.exports, "unstable_LowPriority", () => $8bd70e22fc401e98$export$3b229bdd41242f2, (v) => $8bd70e22fc401e98$export$3b229bdd41242f2 = v);
$parcel$export(module.exports, "unstable_NormalPriority", () => $8bd70e22fc401e98$export$5e5f8d6f8eecaa3c, (v) => $8bd70e22fc401e98$export$5e5f8d6f8eecaa3c = v);
$parcel$export(module.exports, "unstable_requestPaint", () => $8bd70e22fc401e98$export$6f280727bca3b20c, (v) => $8bd70e22fc401e98$export$6f280727bca3b20c = v);
$parcel$export(module.exports, "unstable_wrapCallback", () => $8bd70e22fc401e98$export$2ed8fdc16d9521ca, (v) => $8bd70e22fc401e98$export$2ed8fdc16d9521ca = v);
$parcel$export(module.exports, "unstable_shouldYield", () => $8bd70e22fc401e98$export$7425cb1257b8e26f, (v) => $8bd70e22fc401e98$export$7425cb1257b8e26f = v);
$parcel$export(module.exports, "unstable_now", () => $8bd70e22fc401e98$export$d89e9c3f7cb52253, (v) => $8bd70e22fc401e98$export$d89e9c3f7cb52253 = v);
$parcel$export(module.exports, "unstable_forceFrameRate", () => $8bd70e22fc401e98$export$d976b342dbdc34c8, (v) => $8bd70e22fc401e98$export$d976b342dbdc34c8 = v);
$parcel$export(module.exports, "unstable_runWithPriority", () => $8bd70e22fc401e98$export$1561776629a5d377, (v) => $8bd70e22fc401e98$export$1561776629a5d377 = v);
$parcel$export(module.exports, "unstable_next", () => $8bd70e22fc401e98$export$c9a313f1f3f6836c, (v) => $8bd70e22fc401e98$export$c9a313f1f3f6836c = v);
/** @license React v0.20.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var $8bd70e22fc401e98$export$a8213bdccbda1880;
var $8bd70e22fc401e98$export$78b792eba8cd5cae;
var $8bd70e22fc401e98$export$d89e9c3f7cb52253;
var $8bd70e22fc401e98$export$d381847666dbb04a;
var $8bd70e22fc401e98$export$129277e4e92eba98;
var $8bd70e22fc401e98$export$99159ba6f57f614b;
var $8bd70e22fc401e98$export$3b229bdd41242f2;
var $8bd70e22fc401e98$export$2ed8fdc16d9521ca;
var $8bd70e22fc401e98$export$6f280727bca3b20c;
var $8bd70e22fc401e98$export$8cf1d9a370da0d06;
var $8bd70e22fc401e98$export$5e601b4f728eb985;
var $8bd70e22fc401e98$export$1561776629a5d377;
var $8bd70e22fc401e98$export$76e1629bf224515e;
var $8bd70e22fc401e98$export$7425cb1257b8e26f;
var $8bd70e22fc401e98$export$5e5f8d6f8eecaa3c;
var $8bd70e22fc401e98$export$c9a313f1f3f6836c;
var $8bd70e22fc401e98$export$7041a4e8de30a420;
var $8bd70e22fc401e98$export$1d44eee4f9eceaed;
var $8bd70e22fc401e98$export$d976b342dbdc34c8;
'use strict';
var $8bd70e22fc401e98$var$f, $8bd70e22fc401e98$var$g, $8bd70e22fc401e98$var$h, $8bd70e22fc401e98$var$k;
if ("object" === typeof performance && "function" === typeof performance.now) {
    var $8bd70e22fc401e98$var$l = performance;
    $8bd70e22fc401e98$export$d89e9c3f7cb52253 = function() {
        return $8bd70e22fc401e98$var$l.now();
    };
} else {
    var $8bd70e22fc401e98$var$p = Date, $8bd70e22fc401e98$var$q = $8bd70e22fc401e98$var$p.now();
    $8bd70e22fc401e98$export$d89e9c3f7cb52253 = function() {
        return $8bd70e22fc401e98$var$p.now() - $8bd70e22fc401e98$var$q;
    };
}
if ("undefined" === typeof window || "function" !== typeof MessageChannel) {
    var $8bd70e22fc401e98$var$t = null, $8bd70e22fc401e98$var$u = null, $8bd70e22fc401e98$var$w = function() {
        if (null !== $8bd70e22fc401e98$var$t) try {
            var a = $8bd70e22fc401e98$export$d89e9c3f7cb52253();
            $8bd70e22fc401e98$var$t(!0, a);
            $8bd70e22fc401e98$var$t = null;
        } catch (b) {
            throw setTimeout($8bd70e22fc401e98$var$w, 0), b;
        }
    };
    $8bd70e22fc401e98$var$f = function(a) {
        null !== $8bd70e22fc401e98$var$t ? setTimeout($8bd70e22fc401e98$var$f, 0, a) : ($8bd70e22fc401e98$var$t = a, setTimeout($8bd70e22fc401e98$var$w, 0));
    };
    $8bd70e22fc401e98$var$g = function(a, b) {
        $8bd70e22fc401e98$var$u = setTimeout(a, b);
    };
    $8bd70e22fc401e98$var$h = function() {
        clearTimeout($8bd70e22fc401e98$var$u);
    };
    $8bd70e22fc401e98$export$7425cb1257b8e26f = function() {
        return !1;
    };
    $8bd70e22fc401e98$var$k = $8bd70e22fc401e98$export$d976b342dbdc34c8 = function() {
    };
} else {
    var $8bd70e22fc401e98$var$x = window.setTimeout, $8bd70e22fc401e98$var$y = window.clearTimeout;
    if ("undefined" !== typeof console) {
        var $8bd70e22fc401e98$var$z = window.cancelAnimationFrame;
        "function" !== typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
        "function" !== typeof $8bd70e22fc401e98$var$z && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
    }
    var $8bd70e22fc401e98$var$A = !1, $8bd70e22fc401e98$var$B = null, $8bd70e22fc401e98$var$C = -1, $8bd70e22fc401e98$var$D = 5, $8bd70e22fc401e98$var$E = 0;
    $8bd70e22fc401e98$export$7425cb1257b8e26f = function() {
        return $8bd70e22fc401e98$export$d89e9c3f7cb52253() >= $8bd70e22fc401e98$var$E;
    };
    $8bd70e22fc401e98$var$k = function() {
    };
    $8bd70e22fc401e98$export$d976b342dbdc34c8 = function(a) {
        0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : $8bd70e22fc401e98$var$D = 0 < a ? Math.floor(1000 / a) : 5;
    };
    var $8bd70e22fc401e98$var$F = new MessageChannel, $8bd70e22fc401e98$var$G = $8bd70e22fc401e98$var$F.port2;
    $8bd70e22fc401e98$var$F.port1.onmessage = function() {
        if (null !== $8bd70e22fc401e98$var$B) {
            var a = $8bd70e22fc401e98$export$d89e9c3f7cb52253();
            $8bd70e22fc401e98$var$E = a + $8bd70e22fc401e98$var$D;
            try {
                $8bd70e22fc401e98$var$B(!0, a) ? $8bd70e22fc401e98$var$G.postMessage(null) : ($8bd70e22fc401e98$var$A = !1, $8bd70e22fc401e98$var$B = null);
            } catch (b) {
                throw $8bd70e22fc401e98$var$G.postMessage(null), b;
            }
        } else $8bd70e22fc401e98$var$A = !1;
    };
    $8bd70e22fc401e98$var$f = function(a) {
        $8bd70e22fc401e98$var$B = a;
        $8bd70e22fc401e98$var$A || ($8bd70e22fc401e98$var$A = !0, $8bd70e22fc401e98$var$G.postMessage(null));
    };
    $8bd70e22fc401e98$var$g = function(a, b) {
        $8bd70e22fc401e98$var$C = $8bd70e22fc401e98$var$x(function() {
            a($8bd70e22fc401e98$export$d89e9c3f7cb52253());
        }, b);
    };
    $8bd70e22fc401e98$var$h = function() {
        $8bd70e22fc401e98$var$y($8bd70e22fc401e98$var$C);
        $8bd70e22fc401e98$var$C = -1;
    };
}
function $8bd70e22fc401e98$var$H(a, b) {
    var c = a.length;
    a.push(b);
    a: for(;;){
        var d = c - 1 >>> 1, e = a[d];
        if ((void 0) !== e && 0 < $8bd70e22fc401e98$var$I(e, b)) a[d] = b, a[c] = e, c = d;
        else break a;
    }
}
function $8bd70e22fc401e98$var$J(a) {
    a = a[0];
    return (void 0) === a ? null : a;
}
function $8bd70e22fc401e98$var$K(a) {
    var b = a[0];
    if ((void 0) !== b) {
        var c = a.pop();
        if (c !== b) {
            a[0] = c;
            a: for(var d = 0, e = a.length; d < e;){
                var m = 2 * (d + 1) - 1, n = a[m], v = m + 1, r = a[v];
                if ((void 0) !== n && 0 > $8bd70e22fc401e98$var$I(n, c)) (void 0) !== r && 0 > $8bd70e22fc401e98$var$I(r, n) ? (a[d] = r, a[v] = c, d = v) : (a[d] = n, a[m] = c, d = m);
                else if ((void 0) !== r && 0 > $8bd70e22fc401e98$var$I(r, c)) a[d] = r, a[v] = c, d = v;
                else break a;
            }
        }
        return b;
    }
    return null;
}
function $8bd70e22fc401e98$var$I(a, b) {
    var c = a.sortIndex - b.sortIndex;
    return 0 !== c ? c : a.id - b.id;
}
var $8bd70e22fc401e98$var$L = [], $8bd70e22fc401e98$var$M = [], $8bd70e22fc401e98$var$N = 1, $8bd70e22fc401e98$var$O = null, $8bd70e22fc401e98$var$P = 3, $8bd70e22fc401e98$var$Q = !1, $8bd70e22fc401e98$var$R = !1, $8bd70e22fc401e98$var$S = !1;
function $8bd70e22fc401e98$var$T(a) {
    for(var b = $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$M); null !== b;){
        if (null === b.callback) $8bd70e22fc401e98$var$K($8bd70e22fc401e98$var$M);
        else if (b.startTime <= a) $8bd70e22fc401e98$var$K($8bd70e22fc401e98$var$M), b.sortIndex = b.expirationTime, $8bd70e22fc401e98$var$H($8bd70e22fc401e98$var$L, b);
        else break;
        b = $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$M);
    }
}
function $8bd70e22fc401e98$var$U(a) {
    $8bd70e22fc401e98$var$S = !1;
    $8bd70e22fc401e98$var$T(a);
    if (!$8bd70e22fc401e98$var$R) {
        if (null !== $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$L)) $8bd70e22fc401e98$var$R = !0, $8bd70e22fc401e98$var$f($8bd70e22fc401e98$var$V);
        else {
            var b = $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$M);
            null !== b && $8bd70e22fc401e98$var$g($8bd70e22fc401e98$var$U, b.startTime - a);
        }
    }
}
function $8bd70e22fc401e98$var$V(a, b) {
    $8bd70e22fc401e98$var$R = !1;
    $8bd70e22fc401e98$var$S && ($8bd70e22fc401e98$var$S = !1, $8bd70e22fc401e98$var$h());
    $8bd70e22fc401e98$var$Q = !0;
    var c = $8bd70e22fc401e98$var$P;
    try {
        $8bd70e22fc401e98$var$T(b);
        for($8bd70e22fc401e98$var$O = $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$L); null !== $8bd70e22fc401e98$var$O && (!($8bd70e22fc401e98$var$O.expirationTime > b) || a && !$8bd70e22fc401e98$export$7425cb1257b8e26f());){
            var d = $8bd70e22fc401e98$var$O.callback;
            if ("function" === typeof d) {
                $8bd70e22fc401e98$var$O.callback = null;
                $8bd70e22fc401e98$var$P = $8bd70e22fc401e98$var$O.priorityLevel;
                var e = d($8bd70e22fc401e98$var$O.expirationTime <= b);
                b = $8bd70e22fc401e98$export$d89e9c3f7cb52253();
                "function" === typeof e ? $8bd70e22fc401e98$var$O.callback = e : $8bd70e22fc401e98$var$O === $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$L) && $8bd70e22fc401e98$var$K($8bd70e22fc401e98$var$L);
                $8bd70e22fc401e98$var$T(b);
            } else $8bd70e22fc401e98$var$K($8bd70e22fc401e98$var$L);
            $8bd70e22fc401e98$var$O = $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$L);
        }
        if (null !== $8bd70e22fc401e98$var$O) var m = !0;
        else {
            var n = $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$M);
            null !== n && $8bd70e22fc401e98$var$g($8bd70e22fc401e98$var$U, n.startTime - b);
            m = !1;
        }
        return m;
    } finally{
        $8bd70e22fc401e98$var$O = null, $8bd70e22fc401e98$var$P = c, $8bd70e22fc401e98$var$Q = !1;
    }
}
var $8bd70e22fc401e98$var$W = $8bd70e22fc401e98$var$k;
$8bd70e22fc401e98$export$a8213bdccbda1880 = 5;
$8bd70e22fc401e98$export$d381847666dbb04a = 1;
$8bd70e22fc401e98$export$3b229bdd41242f2 = 4;
$8bd70e22fc401e98$export$5e5f8d6f8eecaa3c = 3;
$8bd70e22fc401e98$export$78b792eba8cd5cae = null;
$8bd70e22fc401e98$export$129277e4e92eba98 = 2;
$8bd70e22fc401e98$export$1d44eee4f9eceaed = function(a) {
    a.callback = null;
};
$8bd70e22fc401e98$export$99159ba6f57f614b = function() {
    $8bd70e22fc401e98$var$R || $8bd70e22fc401e98$var$Q || ($8bd70e22fc401e98$var$R = !0, $8bd70e22fc401e98$var$f($8bd70e22fc401e98$var$V));
};
$8bd70e22fc401e98$export$76e1629bf224515e = function() {
    return $8bd70e22fc401e98$var$P;
};
$8bd70e22fc401e98$export$8cf1d9a370da0d06 = function() {
    return $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$L);
};
$8bd70e22fc401e98$export$c9a313f1f3f6836c = function(a) {
    switch($8bd70e22fc401e98$var$P){
        case 1:
        case 2:
        case 3:
            var b = 3;
            break;
        default:
            b = $8bd70e22fc401e98$var$P;
    }
    var c = $8bd70e22fc401e98$var$P;
    $8bd70e22fc401e98$var$P = b;
    try {
        return a();
    } finally{
        $8bd70e22fc401e98$var$P = c;
    }
};
$8bd70e22fc401e98$export$5e601b4f728eb985 = function() {
};
$8bd70e22fc401e98$export$6f280727bca3b20c = $8bd70e22fc401e98$var$W;
$8bd70e22fc401e98$export$1561776629a5d377 = function(a, b) {
    switch(a){
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            a = 3;
    }
    var c = $8bd70e22fc401e98$var$P;
    $8bd70e22fc401e98$var$P = a;
    try {
        return b();
    } finally{
        $8bd70e22fc401e98$var$P = c;
    }
};
$8bd70e22fc401e98$export$7041a4e8de30a420 = function(a, b, c) {
    var d = $8bd70e22fc401e98$export$d89e9c3f7cb52253();
    "object" === typeof c && null !== c ? (c = c.delay, c = "number" === typeof c && 0 < c ? d + c : d) : c = d;
    switch(a){
        case 1:
            var e = -1;
            break;
        case 2:
            e = 250;
            break;
        case 5:
            e = 1073741823;
            break;
        case 4:
            e = 10000;
            break;
        default:
            e = 5000;
    }
    e = c + e;
    a = {
        id: $8bd70e22fc401e98$var$N++,
        callback: b,
        priorityLevel: a,
        startTime: c,
        expirationTime: e,
        sortIndex: -1
    };
    c > d ? (a.sortIndex = c, $8bd70e22fc401e98$var$H($8bd70e22fc401e98$var$M, a), null === $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$L) && a === $8bd70e22fc401e98$var$J($8bd70e22fc401e98$var$M) && ($8bd70e22fc401e98$var$S ? $8bd70e22fc401e98$var$h() : $8bd70e22fc401e98$var$S = !0, $8bd70e22fc401e98$var$g($8bd70e22fc401e98$var$U, c - d))) : (a.sortIndex = e, $8bd70e22fc401e98$var$H($8bd70e22fc401e98$var$L, a), $8bd70e22fc401e98$var$R || $8bd70e22fc401e98$var$Q || ($8bd70e22fc401e98$var$R = !0, $8bd70e22fc401e98$var$f($8bd70e22fc401e98$var$V)));
    return a;
};
$8bd70e22fc401e98$export$2ed8fdc16d9521ca = function(a) {
    var b = $8bd70e22fc401e98$var$P;
    return function() {
        var c = $8bd70e22fc401e98$var$P;
        $8bd70e22fc401e98$var$P = b;
        try {
            return a.apply(this, arguments);
        } finally{
            $8bd70e22fc401e98$var$P = c;
        }
    };
};

});




$657d346a63c24e23$exports = (parcelRequire("lPMQT"));




var $gctDA = parcelRequire("gctDA");

var $gctDA = parcelRequire("gctDA");
const $eacf32db4b77f181$export$5502d277e128dd36 = location.pathname;
(function(history) {
    const pushState = history.pushState;
    history.pushState = function(state) {
        if (typeof history.onpushstate == "function") history.onpushstate({
            state: state
        });
        return pushState.apply(history, arguments);
    };
})(window.history);
const $eacf32db4b77f181$export$91086302b3863684 = (callback, hash = false)=>{
    if (hash) window.history.push = (path)=>{
        window.history.pushState({
        }, '', window.location.origin + $eacf32db4b77f181$export$5502d277e128dd36 + '#' + path);
    };
    else window.history.push = (path)=>{
        window.history.pushState({
        }, '', window.location.origin + path);
    };
    $gctDA.useEffect(()=>{
        window.onpopstate = history.onpushstate = ()=>{
            setTimeout(callback, 10);
        };
        return ()=>window.onpopstate = history.onpushstate = null
        ;
    }, [
        callback
    ]);
};
const $eacf32db4b77f181$export$74d16f6678e5592b = ()=>{
    let path = window.location.href;
    let args;
    if (path.indexOf('#/') > -1) {
        args = $eacf32db4b77f181$var$url2argsPath(path);
        path = path.split('#/')[1].split('?')[0];
    } else {
        args = $eacf32db4b77f181$var$url2args(path);
        path = window.location.pathname;
    }
    if ($eacf32db4b77f181$export$5502d277e128dd36.length > 1) path = path.replace($eacf32db4b77f181$export$5502d277e128dd36, '');
    path = '/' + path.split('/').filter((s)=>!!s.length
    ).join('/');
    return {
        path: path,
        pathArgs: path.split('/').map((p)=>p.split('?')[0]
        ).filter((p)=>!!p.length
        ),
        args: args
    };
};
const $eacf32db4b77f181$var$url2argsPath = (url)=>{
    const sets = url.split('?')[1];
    const args = {
    };
    if (!sets) return args;
    sets.split('&').forEach((set)=>{
        set = set.split('=');
        args[set[0]] = set[1];
    });
    return args;
};
const $eacf32db4b77f181$var$url2args = (url)=>Array.from(new URL(url).searchParams.entries()).map(([k, v])=>({
            [k]: v
        })
    ).reduce((a, c)=>({
            ...a,
            ...c
        })
    , {
    })
;




var $gctDA = parcelRequire("gctDA");
const $6c9985528be6e21a$export$9a41e7f313711121 = (initialState, prefix)=>{
    let updatedState;
    const getState = ()=>updatedState
    ;
    const store = /*#__PURE__*/ $gctDA.createContext(initialState);
    const { Provider: InnerProvider  } = store;
    const updateState = (state, newState, path = '')=>{
        // console.log('updateState', state, path, newState) // debugging
        if (path.length === 0) {
            const retState = {
                ...state
            };
            Object.entries(newState).map(([k, v])=>{
                retState[k] = state[k] && typeof v === 'object' && !Array.isArray(v) ? updateState(state[k], v) : v;
            });
            return retState;
        }
        const pathArr = path.split('.');
        const first = pathArr[0];
        state = {
            ...state
        };
        if (!state[first]) state[first] = {
        };
        if (pathArr.length === 1) state[first] = !!newState && typeof newState === 'object' && !Array.isArray(newState) ? {
            ...state[first],
            ...newState
        } : newState;
        else state[first] = {
            ...state[first],
            ...updateState(state[first], newState, pathArr.slice(1).join('.'))
        };
        return state;
    };
    const Provider = ({ children: children  })=>{
        const [state, dispatch] = $gctDA.useReducer((state1, payload)=>{
            const { path: path , newState: newState  } = payload;
            if (path === undefined) return state1;
            updatedState = updateState(state1, newState, path);
            return updatedState;
        }, initialState);
        const update = (path, newState)=>{
            dispatch({
                path: path,
                newState: newState
            });
        };
        const wrappedDispatch = (fn)=>fn({
                update: update,
                getState: getState,
                dispatch: wrappedDispatch
            })
        ;
        return(/*#__PURE__*/ $8873ccd5938d9111$exports.jsx(InnerProvider, {
            value: {
                update: update,
                state: state,
                dispatch: wrappedDispatch
            },
            children: children
        }));
    };
    if (prefix) return {
        [prefix + 'Store']: store,
        [prefix.substr(0, 1).toUpperCase() + prefix.substr(1) + 'Provider']: Provider
    };
    return {
        store: store,
        Provider: Provider
    };
};


var $1d6eb0f4506d516f$exports = {};
const $1d6eb0f4506d516f$var$contractName = 'dev-1626646469827-53351318465132';
$1d6eb0f4506d516f$exports = function getConfig(network = 'mainnet') {
    let config = {
        networkId: "testnet",
        nodeUrl: "https://rpc.testnet.near.org",
        walletUrl: "https://wallet.testnet.near.org",
        helperUrl: "https://helper.testnet.near.org",
        contractName: $1d6eb0f4506d516f$var$contractName
    };
    switch(network){
        case 'testnet':
            config = {
                explorerUrl: "https://explorer.testnet.near.org",
                ...config,
                GAS: "200000000000000",
                gas: "200000000000000",
                linkdropContractId: 'linkdrop-wrapper.testnet',
                contractId: $1d6eb0f4506d516f$var$contractName
            };
            break;
        case 'mainnet':
            config = {
                ...config,
                networkId: "mainnet",
                nodeUrl: "https://rpc.mainnet.near.org",
                walletUrl: "https://wallet.near.org",
                helperUrl: "https://helper.mainnet.near.org"
            };
            break;
    }
    return config;
};


var $eed45acf6a4b99e3$exports = {};
"use strict";
var $eed45acf6a4b99e3$var$__createBinding = $eed45acf6a4b99e3$exports && $eed45acf6a4b99e3$exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var $eed45acf6a4b99e3$var$__setModuleDefault = $eed45acf6a4b99e3$exports && $eed45acf6a4b99e3$exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var $eed45acf6a4b99e3$var$__importStar = $eed45acf6a4b99e3$exports && $eed45acf6a4b99e3$exports.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.hasOwnProperty.call(mod, k)) $eed45acf6a4b99e3$var$__createBinding(result, mod, k);
    $eed45acf6a4b99e3$var$__setModuleDefault(result, mod);
    return result;
};
var $eed45acf6a4b99e3$var$__exportStar = $eed45acf6a4b99e3$exports && $eed45acf6a4b99e3$exports.__exportStar || function(m, exports) {
    for(var p in m)if (p !== "default" && !exports.hasOwnProperty(p)) $eed45acf6a4b99e3$var$__createBinding(exports, m, p);
};
Object.defineProperty($eed45acf6a4b99e3$exports, "__esModule", {
    value: true
});
parcelRequire.register("eTs0t", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.MergeKeyStore = module.exports.BrowserLocalStorageKeyStore = module.exports.InMemoryKeyStore = module.exports.KeyStore = void 0;

var $5iAoJ = parcelRequire("5iAoJ");
Object.defineProperty(module.exports, "KeyStore", {
    enumerable: true,
    get: function() {
        return $5iAoJ.KeyStore;
    }
});

var $8bEHX = parcelRequire("8bEHX");
Object.defineProperty(module.exports, "InMemoryKeyStore", {
    enumerable: true,
    get: function() {
        return $8bEHX.InMemoryKeyStore;
    }
});

var $ETzao = parcelRequire("ETzao");
Object.defineProperty(module.exports, "BrowserLocalStorageKeyStore", {
    enumerable: true,
    get: function() {
        return $ETzao.BrowserLocalStorageKeyStore;
    }
});

var $kiSA5 = parcelRequire("kiSA5");
Object.defineProperty(module.exports, "MergeKeyStore", {
    enumerable: true,
    get: function() {
        return $kiSA5.MergeKeyStore;
    }
});

});
parcelRequire.register("5iAoJ", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.KeyStore = void 0;
/**
 * KeyStores are passed to {@link Near} via {@link NearConfig}
 * and are used by the {@link InMemorySigner} to sign transactions.
 *
 * @example {@link connect}
 */ class $3dbade0a6207a2f6$var$KeyStore {
}
module.exports.KeyStore = $3dbade0a6207a2f6$var$KeyStore;

});

parcelRequire.register("8bEHX", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.InMemoryKeyStore = void 0;

var $5iAoJ = parcelRequire("5iAoJ");

var $bqi77 = parcelRequire("bqi77");
/**
 * Simple in-memory keystore for mainly for testing purposes.
 *
 * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}
 * @example
 * ```js
 * import { connect, keyStores, utils } from 'near-api-js';
 *
 * const privateKey = '.......';
 * const keyPair = utils.KeyPair.fromString(privateKey);
 *
 * const keyStore = new keyStores.InMemoryKeyStore();
 * keyStore.setKey('testnet', 'example-account.testnet', keyPair);
 *
 * const config = {
 *   keyStore, // instance of InMemoryKeyStore
 *   networkId: 'testnet',
 *   nodeUrl: 'https://rpc.testnet.near.org',
 *   walletUrl: 'https://wallet.testnet.near.org',
 *   helperUrl: 'https://helper.testnet.near.org',
 *   explorerUrl: 'https://explorer.testnet.near.org'
 * };
 *
 * // inside an async function
 * const near = await connect(config)
 * ```
 */ class $5f5eed96bab68b43$var$InMemoryKeyStore extends $5iAoJ.KeyStore {
    constructor(){
        super();
        this.keys = {
        };
    }
    /**
     * Stores a {@KeyPair} in in-memory storage item
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     * @param keyPair The key pair to store in local storage
     */ async setKey(networkId, accountId, keyPair) {
        this.keys[`${accountId}:${networkId}`] = keyPair.toString();
    }
    /**
     * Gets a {@link KeyPair} from in-memory storage
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     * @returns {Promise<KeyPair>}
     */ async getKey(networkId, accountId) {
        const value = this.keys[`${accountId}:${networkId}`];
        if (!value) return null;
        return $bqi77.KeyPair.fromString(value);
    }
    /**
     * Removes a {@link KeyPair} from in-memory storage
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     */ async removeKey(networkId, accountId) {
        delete this.keys[`${accountId}:${networkId}`];
    }
    /**
     * Removes all {@link KeyPairs} from in-memory storage
     */ async clear() {
        this.keys = {
        };
    }
    /**
     * Get the network(s) from in-memory storage
     * @returns {Promise<string[]>}
     */ async getNetworks() {
        const result = new Set();
        Object.keys(this.keys).forEach((key)=>{
            const parts = key.split(':');
            result.add(parts[1]);
        });
        return Array.from(result.values());
    }
    /**
     * Gets the account(s) from in-memory storage
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @returns{Promise<string[]>}
     */ async getAccounts(networkId) {
        const result = new Array();
        Object.keys(this.keys).forEach((key)=>{
            const parts = key.split(':');
            if (parts[parts.length - 1] === networkId) result.push(parts.slice(0, parts.length - 1).join(':'));
        });
        return result;
    }
    /** @hidden */ toString() {
        return 'InMemoryKeyStore';
    }
}
module.exports.InMemoryKeyStore = $5f5eed96bab68b43$var$InMemoryKeyStore;

});
parcelRequire.register("bqi77", function(module, exports) {
"use strict";
var $85102c6d0cf8f4e4$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.KeyPairEd25519 = module.exports.KeyPair = module.exports.PublicKey = module.exports.KeyType = void 0;

const $85102c6d0cf8f4e4$var$tweetnacl_1 = $85102c6d0cf8f4e4$var$__importDefault((parcelRequire("5EKJx")));

var $BYdDX = parcelRequire("BYdDX");

var $iBavB = parcelRequire("iBavB");
/** All supported key types */ var $85102c6d0cf8f4e4$var$KeyType;
(function(KeyType) {
    KeyType[KeyType["ED25519"] = 0] = "ED25519";
})($85102c6d0cf8f4e4$var$KeyType = module.exports.KeyType || (module.exports.KeyType = {
}));
function $85102c6d0cf8f4e4$var$key_type_to_str(keyType) {
    switch(keyType){
        case $85102c6d0cf8f4e4$var$KeyType.ED25519:
            return 'ed25519';
        default:
            throw new Error(`Unknown key type ${keyType}`);
    }
}
function $85102c6d0cf8f4e4$var$str_to_key_type(keyType) {
    switch(keyType.toLowerCase()){
        case 'ed25519':
            return $85102c6d0cf8f4e4$var$KeyType.ED25519;
        default:
            throw new Error(`Unknown key type ${keyType}`);
    }
}
/**
 * PublicKey representation that has type and bytes of the key.
 */ class $85102c6d0cf8f4e4$var$PublicKey extends $iBavB.Assignable {
    static from(value) {
        if (typeof value === 'string') return $85102c6d0cf8f4e4$var$PublicKey.fromString(value);
        return value;
    }
    static fromString(encodedKey) {
        const parts = encodedKey.split(':');
        if (parts.length === 1) return new $85102c6d0cf8f4e4$var$PublicKey({
            keyType: $85102c6d0cf8f4e4$var$KeyType.ED25519,
            data: $BYdDX.base_decode(parts[0])
        });
        else if (parts.length === 2) return new $85102c6d0cf8f4e4$var$PublicKey({
            keyType: $85102c6d0cf8f4e4$var$str_to_key_type(parts[0]),
            data: $BYdDX.base_decode(parts[1])
        });
        else throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');
    }
    toString() {
        return `${$85102c6d0cf8f4e4$var$key_type_to_str(this.keyType)}:${$BYdDX.base_encode(this.data)}`;
    }
}
module.exports.PublicKey = $85102c6d0cf8f4e4$var$PublicKey;
class $85102c6d0cf8f4e4$var$KeyPair {
    /**
     * @param curve Name of elliptical curve, case-insensitive
     * @returns Random KeyPair based on the curve
     */ static fromRandom(curve) {
        switch(curve.toUpperCase()){
            case 'ED25519':
                return $85102c6d0cf8f4e4$var$KeyPairEd25519.fromRandom();
            default:
                throw new Error(`Unknown curve ${curve}`);
        }
    }
    static fromString(encodedKey) {
        const parts = encodedKey.split(':');
        if (parts.length === 1) return new $85102c6d0cf8f4e4$var$KeyPairEd25519(parts[0]);
        else if (parts.length === 2) switch(parts[0].toUpperCase()){
            case 'ED25519':
                return new $85102c6d0cf8f4e4$var$KeyPairEd25519(parts[1]);
            default:
                throw new Error(`Unknown curve: ${parts[0]}`);
        }
        else throw new Error('Invalid encoded key format, must be <curve>:<encoded key>');
    }
}
module.exports.KeyPair = $85102c6d0cf8f4e4$var$KeyPair;
/**
 * This class provides key pair functionality for Ed25519 curve:
 * generating key pairs, encoding key pairs, signing and verifying.
 */ class $85102c6d0cf8f4e4$var$KeyPairEd25519 extends $85102c6d0cf8f4e4$var$KeyPair {
    /**
     * Construct an instance of key pair given a secret key.
     * It's generally assumed that these are encoded in base58.
     * @param {string} secretKey
     */ constructor(secretKey){
        super();
        const keyPair = $85102c6d0cf8f4e4$var$tweetnacl_1.default.sign.keyPair.fromSecretKey($BYdDX.base_decode(secretKey));
        this.publicKey = new $85102c6d0cf8f4e4$var$PublicKey({
            keyType: $85102c6d0cf8f4e4$var$KeyType.ED25519,
            data: keyPair.publicKey
        });
        this.secretKey = secretKey;
    }
    /**
     * Generate a new random keypair.
     * @example
     * const keyRandom = KeyPair.fromRandom();
     * keyRandom.publicKey
     * // returns [PUBLIC_KEY]
     *
     * keyRandom.secretKey
     * // returns [SECRET_KEY]
     */ static fromRandom() {
        const newKeyPair = $85102c6d0cf8f4e4$var$tweetnacl_1.default.sign.keyPair();
        return new $85102c6d0cf8f4e4$var$KeyPairEd25519($BYdDX.base_encode(newKeyPair.secretKey));
    }
    sign(message) {
        const signature = $85102c6d0cf8f4e4$var$tweetnacl_1.default.sign.detached(message, $BYdDX.base_decode(this.secretKey));
        return {
            signature: signature,
            publicKey: this.publicKey
        };
    }
    verify(message, signature) {
        return $85102c6d0cf8f4e4$var$tweetnacl_1.default.sign.detached.verify(message, signature, this.publicKey.data);
    }
    toString() {
        return `ed25519:${this.secretKey}`;
    }
    getPublicKey() {
        return this.publicKey;
    }
}
module.exports.KeyPairEd25519 = $85102c6d0cf8f4e4$var$KeyPairEd25519;

});
parcelRequire.register("5EKJx", function(module, exports) {

(function(nacl) {
    // Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.
    // Public domain.
    //
    // Implementation derived from TweetNaCl version 20140427.
    // See for details: http://tweetnacl.cr.yp.to/
    var gf = function(init) {
        var i, r = new Float64Array(16);
        if (init) for(i = 0; i < init.length; i++)r[i] = init[i];
        return r;
    };
    //  Pluggable, initialized in high-level API below.
    var randombytes = function() {
        throw new Error('no PRNG');
    };
    var _0 = new Uint8Array(16);
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var gf0 = gf(), gf1 = gf([
        1
    ]), _121665 = gf([
        56129,
        1
    ]), D = gf([
        30883,
        4953,
        19914,
        30187,
        55467,
        16705,
        2637,
        112,
        59544,
        30585,
        16505,
        36039,
        65139,
        11119,
        27886,
        20995
    ]), D2 = gf([
        61785,
        9906,
        39828,
        60374,
        45398,
        33411,
        5274,
        224,
        53552,
        61171,
        33010,
        6542,
        64743,
        22239,
        55772,
        9222
    ]), X = gf([
        54554,
        36645,
        11616,
        51542,
        42930,
        38181,
        51040,
        26924,
        56412,
        64982,
        57905,
        49316,
        21502,
        52590,
        14035,
        8553
    ]), Y = gf([
        26200,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214,
        26214
    ]), I = gf([
        41136,
        18958,
        6951,
        50414,
        58488,
        44335,
        6150,
        12099,
        55207,
        15867,
        153,
        11085,
        57099,
        20417,
        9344,
        11139
    ]);
    function ts64(x, i, h, l) {
        x[i] = h >> 24 & 255;
        x[i + 1] = h >> 16 & 255;
        x[i + 2] = h >> 8 & 255;
        x[i + 3] = h & 255;
        x[i + 4] = l >> 24 & 255;
        x[i + 5] = l >> 16 & 255;
        x[i + 6] = l >> 8 & 255;
        x[i + 7] = l & 255;
    }
    function vn(x, xi, y, yi, n) {
        var i, d = 0;
        for(i = 0; i < n; i++)d |= x[xi + i] ^ y[yi + i];
        return (1 & d - 1 >>> 8) - 1;
    }
    function crypto_verify_16(x, xi, y, yi) {
        return vn(x, xi, y, yi, 16);
    }
    function crypto_verify_32(x, xi, y, yi) {
        return vn(x, xi, y, yi, 32);
    }
    function core_salsa20(o, p, k, c) {
        var j0 = c[0] & 255 | (c[1] & 255) << 8 | (c[2] & 255) << 16 | (c[3] & 255) << 24, j1 = k[0] & 255 | (k[1] & 255) << 8 | (k[2] & 255) << 16 | (k[3] & 255) << 24, j2 = k[4] & 255 | (k[5] & 255) << 8 | (k[6] & 255) << 16 | (k[7] & 255) << 24, j3 = k[8] & 255 | (k[9] & 255) << 8 | (k[10] & 255) << 16 | (k[11] & 255) << 24, j4 = k[12] & 255 | (k[13] & 255) << 8 | (k[14] & 255) << 16 | (k[15] & 255) << 24, j5 = c[4] & 255 | (c[5] & 255) << 8 | (c[6] & 255) << 16 | (c[7] & 255) << 24, j6 = p[0] & 255 | (p[1] & 255) << 8 | (p[2] & 255) << 16 | (p[3] & 255) << 24, j7 = p[4] & 255 | (p[5] & 255) << 8 | (p[6] & 255) << 16 | (p[7] & 255) << 24, j8 = p[8] & 255 | (p[9] & 255) << 8 | (p[10] & 255) << 16 | (p[11] & 255) << 24, j9 = p[12] & 255 | (p[13] & 255) << 8 | (p[14] & 255) << 16 | (p[15] & 255) << 24, j10 = c[8] & 255 | (c[9] & 255) << 8 | (c[10] & 255) << 16 | (c[11] & 255) << 24, j11 = k[16] & 255 | (k[17] & 255) << 8 | (k[18] & 255) << 16 | (k[19] & 255) << 24, j12 = k[20] & 255 | (k[21] & 255) << 8 | (k[22] & 255) << 16 | (k[23] & 255) << 24, j13 = k[24] & 255 | (k[25] & 255) << 8 | (k[26] & 255) << 16 | (k[27] & 255) << 24, j14 = k[28] & 255 | (k[29] & 255) << 8 | (k[30] & 255) << 16 | (k[31] & 255) << 24, j15 = c[12] & 255 | (c[13] & 255) << 8 | (c[14] & 255) << 16 | (c[15] & 255) << 24;
        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;
        for(var i = 0; i < 20; i += 2){
            u = x0 + x12 | 0;
            x4 ^= u << 7 | u >>> 25;
            u = x4 + x0 | 0;
            x8 ^= u << 9 | u >>> 23;
            u = x8 + x4 | 0;
            x12 ^= u << 13 | u >>> 19;
            u = x12 + x8 | 0;
            x0 ^= u << 18 | u >>> 14;
            u = x5 + x1 | 0;
            x9 ^= u << 7 | u >>> 25;
            u = x9 + x5 | 0;
            x13 ^= u << 9 | u >>> 23;
            u = x13 + x9 | 0;
            x1 ^= u << 13 | u >>> 19;
            u = x1 + x13 | 0;
            x5 ^= u << 18 | u >>> 14;
            u = x10 + x6 | 0;
            x14 ^= u << 7 | u >>> 25;
            u = x14 + x10 | 0;
            x2 ^= u << 9 | u >>> 23;
            u = x2 + x14 | 0;
            x6 ^= u << 13 | u >>> 19;
            u = x6 + x2 | 0;
            x10 ^= u << 18 | u >>> 14;
            u = x15 + x11 | 0;
            x3 ^= u << 7 | u >>> 25;
            u = x3 + x15 | 0;
            x7 ^= u << 9 | u >>> 23;
            u = x7 + x3 | 0;
            x11 ^= u << 13 | u >>> 19;
            u = x11 + x7 | 0;
            x15 ^= u << 18 | u >>> 14;
            u = x0 + x3 | 0;
            x1 ^= u << 7 | u >>> 25;
            u = x1 + x0 | 0;
            x2 ^= u << 9 | u >>> 23;
            u = x2 + x1 | 0;
            x3 ^= u << 13 | u >>> 19;
            u = x3 + x2 | 0;
            x0 ^= u << 18 | u >>> 14;
            u = x5 + x4 | 0;
            x6 ^= u << 7 | u >>> 25;
            u = x6 + x5 | 0;
            x7 ^= u << 9 | u >>> 23;
            u = x7 + x6 | 0;
            x4 ^= u << 13 | u >>> 19;
            u = x4 + x7 | 0;
            x5 ^= u << 18 | u >>> 14;
            u = x10 + x9 | 0;
            x11 ^= u << 7 | u >>> 25;
            u = x11 + x10 | 0;
            x8 ^= u << 9 | u >>> 23;
            u = x8 + x11 | 0;
            x9 ^= u << 13 | u >>> 19;
            u = x9 + x8 | 0;
            x10 ^= u << 18 | u >>> 14;
            u = x15 + x14 | 0;
            x12 ^= u << 7 | u >>> 25;
            u = x12 + x15 | 0;
            x13 ^= u << 9 | u >>> 23;
            u = x13 + x12 | 0;
            x14 ^= u << 13 | u >>> 19;
            u = x14 + x13 | 0;
            x15 ^= u << 18 | u >>> 14;
        }
        x0 = x0 + j0 | 0;
        x1 = x1 + j1 | 0;
        x2 = x2 + j2 | 0;
        x3 = x3 + j3 | 0;
        x4 = x4 + j4 | 0;
        x5 = x5 + j5 | 0;
        x6 = x6 + j6 | 0;
        x7 = x7 + j7 | 0;
        x8 = x8 + j8 | 0;
        x9 = x9 + j9 | 0;
        x10 = x10 + j10 | 0;
        x11 = x11 + j11 | 0;
        x12 = x12 + j12 | 0;
        x13 = x13 + j13 | 0;
        x14 = x14 + j14 | 0;
        x15 = x15 + j15 | 0;
        o[0] = x0 >>> 0 & 255;
        o[1] = x0 >>> 8 & 255;
        o[2] = x0 >>> 16 & 255;
        o[3] = x0 >>> 24 & 255;
        o[4] = x1 >>> 0 & 255;
        o[5] = x1 >>> 8 & 255;
        o[6] = x1 >>> 16 & 255;
        o[7] = x1 >>> 24 & 255;
        o[8] = x2 >>> 0 & 255;
        o[9] = x2 >>> 8 & 255;
        o[10] = x2 >>> 16 & 255;
        o[11] = x2 >>> 24 & 255;
        o[12] = x3 >>> 0 & 255;
        o[13] = x3 >>> 8 & 255;
        o[14] = x3 >>> 16 & 255;
        o[15] = x3 >>> 24 & 255;
        o[16] = x4 >>> 0 & 255;
        o[17] = x4 >>> 8 & 255;
        o[18] = x4 >>> 16 & 255;
        o[19] = x4 >>> 24 & 255;
        o[20] = x5 >>> 0 & 255;
        o[21] = x5 >>> 8 & 255;
        o[22] = x5 >>> 16 & 255;
        o[23] = x5 >>> 24 & 255;
        o[24] = x6 >>> 0 & 255;
        o[25] = x6 >>> 8 & 255;
        o[26] = x6 >>> 16 & 255;
        o[27] = x6 >>> 24 & 255;
        o[28] = x7 >>> 0 & 255;
        o[29] = x7 >>> 8 & 255;
        o[30] = x7 >>> 16 & 255;
        o[31] = x7 >>> 24 & 255;
        o[32] = x8 >>> 0 & 255;
        o[33] = x8 >>> 8 & 255;
        o[34] = x8 >>> 16 & 255;
        o[35] = x8 >>> 24 & 255;
        o[36] = x9 >>> 0 & 255;
        o[37] = x9 >>> 8 & 255;
        o[38] = x9 >>> 16 & 255;
        o[39] = x9 >>> 24 & 255;
        o[40] = x10 >>> 0 & 255;
        o[41] = x10 >>> 8 & 255;
        o[42] = x10 >>> 16 & 255;
        o[43] = x10 >>> 24 & 255;
        o[44] = x11 >>> 0 & 255;
        o[45] = x11 >>> 8 & 255;
        o[46] = x11 >>> 16 & 255;
        o[47] = x11 >>> 24 & 255;
        o[48] = x12 >>> 0 & 255;
        o[49] = x12 >>> 8 & 255;
        o[50] = x12 >>> 16 & 255;
        o[51] = x12 >>> 24 & 255;
        o[52] = x13 >>> 0 & 255;
        o[53] = x13 >>> 8 & 255;
        o[54] = x13 >>> 16 & 255;
        o[55] = x13 >>> 24 & 255;
        o[56] = x14 >>> 0 & 255;
        o[57] = x14 >>> 8 & 255;
        o[58] = x14 >>> 16 & 255;
        o[59] = x14 >>> 24 & 255;
        o[60] = x15 >>> 0 & 255;
        o[61] = x15 >>> 8 & 255;
        o[62] = x15 >>> 16 & 255;
        o[63] = x15 >>> 24 & 255;
    }
    function core_hsalsa20(o, p, k, c) {
        var j0 = c[0] & 255 | (c[1] & 255) << 8 | (c[2] & 255) << 16 | (c[3] & 255) << 24, j1 = k[0] & 255 | (k[1] & 255) << 8 | (k[2] & 255) << 16 | (k[3] & 255) << 24, j2 = k[4] & 255 | (k[5] & 255) << 8 | (k[6] & 255) << 16 | (k[7] & 255) << 24, j3 = k[8] & 255 | (k[9] & 255) << 8 | (k[10] & 255) << 16 | (k[11] & 255) << 24, j4 = k[12] & 255 | (k[13] & 255) << 8 | (k[14] & 255) << 16 | (k[15] & 255) << 24, j5 = c[4] & 255 | (c[5] & 255) << 8 | (c[6] & 255) << 16 | (c[7] & 255) << 24, j6 = p[0] & 255 | (p[1] & 255) << 8 | (p[2] & 255) << 16 | (p[3] & 255) << 24, j7 = p[4] & 255 | (p[5] & 255) << 8 | (p[6] & 255) << 16 | (p[7] & 255) << 24, j8 = p[8] & 255 | (p[9] & 255) << 8 | (p[10] & 255) << 16 | (p[11] & 255) << 24, j9 = p[12] & 255 | (p[13] & 255) << 8 | (p[14] & 255) << 16 | (p[15] & 255) << 24, j10 = c[8] & 255 | (c[9] & 255) << 8 | (c[10] & 255) << 16 | (c[11] & 255) << 24, j11 = k[16] & 255 | (k[17] & 255) << 8 | (k[18] & 255) << 16 | (k[19] & 255) << 24, j12 = k[20] & 255 | (k[21] & 255) << 8 | (k[22] & 255) << 16 | (k[23] & 255) << 24, j13 = k[24] & 255 | (k[25] & 255) << 8 | (k[26] & 255) << 16 | (k[27] & 255) << 24, j14 = k[28] & 255 | (k[29] & 255) << 8 | (k[30] & 255) << 16 | (k[31] & 255) << 24, j15 = c[12] & 255 | (c[13] & 255) << 8 | (c[14] & 255) << 16 | (c[15] & 255) << 24;
        var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7, x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14, x15 = j15, u;
        for(var i = 0; i < 20; i += 2){
            u = x0 + x12 | 0;
            x4 ^= u << 7 | u >>> 25;
            u = x4 + x0 | 0;
            x8 ^= u << 9 | u >>> 23;
            u = x8 + x4 | 0;
            x12 ^= u << 13 | u >>> 19;
            u = x12 + x8 | 0;
            x0 ^= u << 18 | u >>> 14;
            u = x5 + x1 | 0;
            x9 ^= u << 7 | u >>> 25;
            u = x9 + x5 | 0;
            x13 ^= u << 9 | u >>> 23;
            u = x13 + x9 | 0;
            x1 ^= u << 13 | u >>> 19;
            u = x1 + x13 | 0;
            x5 ^= u << 18 | u >>> 14;
            u = x10 + x6 | 0;
            x14 ^= u << 7 | u >>> 25;
            u = x14 + x10 | 0;
            x2 ^= u << 9 | u >>> 23;
            u = x2 + x14 | 0;
            x6 ^= u << 13 | u >>> 19;
            u = x6 + x2 | 0;
            x10 ^= u << 18 | u >>> 14;
            u = x15 + x11 | 0;
            x3 ^= u << 7 | u >>> 25;
            u = x3 + x15 | 0;
            x7 ^= u << 9 | u >>> 23;
            u = x7 + x3 | 0;
            x11 ^= u << 13 | u >>> 19;
            u = x11 + x7 | 0;
            x15 ^= u << 18 | u >>> 14;
            u = x0 + x3 | 0;
            x1 ^= u << 7 | u >>> 25;
            u = x1 + x0 | 0;
            x2 ^= u << 9 | u >>> 23;
            u = x2 + x1 | 0;
            x3 ^= u << 13 | u >>> 19;
            u = x3 + x2 | 0;
            x0 ^= u << 18 | u >>> 14;
            u = x5 + x4 | 0;
            x6 ^= u << 7 | u >>> 25;
            u = x6 + x5 | 0;
            x7 ^= u << 9 | u >>> 23;
            u = x7 + x6 | 0;
            x4 ^= u << 13 | u >>> 19;
            u = x4 + x7 | 0;
            x5 ^= u << 18 | u >>> 14;
            u = x10 + x9 | 0;
            x11 ^= u << 7 | u >>> 25;
            u = x11 + x10 | 0;
            x8 ^= u << 9 | u >>> 23;
            u = x8 + x11 | 0;
            x9 ^= u << 13 | u >>> 19;
            u = x9 + x8 | 0;
            x10 ^= u << 18 | u >>> 14;
            u = x15 + x14 | 0;
            x12 ^= u << 7 | u >>> 25;
            u = x12 + x15 | 0;
            x13 ^= u << 9 | u >>> 23;
            u = x13 + x12 | 0;
            x14 ^= u << 13 | u >>> 19;
            u = x14 + x13 | 0;
            x15 ^= u << 18 | u >>> 14;
        }
        o[0] = x0 >>> 0 & 255;
        o[1] = x0 >>> 8 & 255;
        o[2] = x0 >>> 16 & 255;
        o[3] = x0 >>> 24 & 255;
        o[4] = x5 >>> 0 & 255;
        o[5] = x5 >>> 8 & 255;
        o[6] = x5 >>> 16 & 255;
        o[7] = x5 >>> 24 & 255;
        o[8] = x10 >>> 0 & 255;
        o[9] = x10 >>> 8 & 255;
        o[10] = x10 >>> 16 & 255;
        o[11] = x10 >>> 24 & 255;
        o[12] = x15 >>> 0 & 255;
        o[13] = x15 >>> 8 & 255;
        o[14] = x15 >>> 16 & 255;
        o[15] = x15 >>> 24 & 255;
        o[16] = x6 >>> 0 & 255;
        o[17] = x6 >>> 8 & 255;
        o[18] = x6 >>> 16 & 255;
        o[19] = x6 >>> 24 & 255;
        o[20] = x7 >>> 0 & 255;
        o[21] = x7 >>> 8 & 255;
        o[22] = x7 >>> 16 & 255;
        o[23] = x7 >>> 24 & 255;
        o[24] = x8 >>> 0 & 255;
        o[25] = x8 >>> 8 & 255;
        o[26] = x8 >>> 16 & 255;
        o[27] = x8 >>> 24 & 255;
        o[28] = x9 >>> 0 & 255;
        o[29] = x9 >>> 8 & 255;
        o[30] = x9 >>> 16 & 255;
        o[31] = x9 >>> 24 & 255;
    }
    function crypto_core_salsa20(out, inp, k, c) {
        core_salsa20(out, inp, k, c);
    }
    function crypto_core_hsalsa20(out, inp, k, c) {
        core_hsalsa20(out, inp, k, c);
    }
    var sigma = new Uint8Array([
        101,
        120,
        112,
        97,
        110,
        100,
        32,
        51,
        50,
        45,
        98,
        121,
        116,
        101,
        32,
        107
    ]);
    // "expand 32-byte k"
    function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {
        var z = new Uint8Array(16), x = new Uint8Array(64);
        var u, i;
        for(i = 0; i < 16; i++)z[i] = 0;
        for(i = 0; i < 8; i++)z[i] = n[i];
        while(b >= 64){
            crypto_core_salsa20(x, z, k, sigma);
            for(i = 0; i < 64; i++)c[cpos + i] = m[mpos + i] ^ x[i];
            u = 1;
            for(i = 8; i < 16; i++){
                u = u + (z[i] & 255) | 0;
                z[i] = u & 255;
                u >>>= 8;
            }
            b -= 64;
            cpos += 64;
            mpos += 64;
        }
        if (b > 0) {
            crypto_core_salsa20(x, z, k, sigma);
            for(i = 0; i < b; i++)c[cpos + i] = m[mpos + i] ^ x[i];
        }
        return 0;
    }
    function crypto_stream_salsa20(c, cpos, b, n, k) {
        var z = new Uint8Array(16), x = new Uint8Array(64);
        var u, i;
        for(i = 0; i < 16; i++)z[i] = 0;
        for(i = 0; i < 8; i++)z[i] = n[i];
        while(b >= 64){
            crypto_core_salsa20(x, z, k, sigma);
            for(i = 0; i < 64; i++)c[cpos + i] = x[i];
            u = 1;
            for(i = 8; i < 16; i++){
                u = u + (z[i] & 255) | 0;
                z[i] = u & 255;
                u >>>= 8;
            }
            b -= 64;
            cpos += 64;
        }
        if (b > 0) {
            crypto_core_salsa20(x, z, k, sigma);
            for(i = 0; i < b; i++)c[cpos + i] = x[i];
        }
        return 0;
    }
    function crypto_stream(c, cpos, d, n, k) {
        var s = new Uint8Array(32);
        crypto_core_hsalsa20(s, n, k, sigma);
        var sn = new Uint8Array(8);
        for(var i = 0; i < 8; i++)sn[i] = n[i + 16];
        return crypto_stream_salsa20(c, cpos, d, sn, s);
    }
    function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {
        var s = new Uint8Array(32);
        crypto_core_hsalsa20(s, n, k, sigma);
        var sn = new Uint8Array(8);
        for(var i = 0; i < 8; i++)sn[i] = n[i + 16];
        return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, sn, s);
    }
    /*
* Port of Andrew Moon's Poly1305-donna-16. Public domain.
* https://github.com/floodyberry/poly1305-donna
*/ var poly1305 = function(key) {
        this.buffer = new Uint8Array(16);
        this.r = new Uint16Array(10);
        this.h = new Uint16Array(10);
        this.pad = new Uint16Array(8);
        this.leftover = 0;
        this.fin = 0;
        var t0, t1, t2, t3, t4, t5, t6, t7;
        t0 = key[0] & 255 | (key[1] & 255) << 8;
        this.r[0] = t0 & 8191;
        t1 = key[2] & 255 | (key[3] & 255) << 8;
        this.r[1] = (t0 >>> 13 | t1 << 3) & 8191;
        t2 = key[4] & 255 | (key[5] & 255) << 8;
        this.r[2] = (t1 >>> 10 | t2 << 6) & 7939;
        t3 = key[6] & 255 | (key[7] & 255) << 8;
        this.r[3] = (t2 >>> 7 | t3 << 9) & 8191;
        t4 = key[8] & 255 | (key[9] & 255) << 8;
        this.r[4] = (t3 >>> 4 | t4 << 12) & 255;
        this.r[5] = t4 >>> 1 & 8190;
        t5 = key[10] & 255 | (key[11] & 255) << 8;
        this.r[6] = (t4 >>> 14 | t5 << 2) & 8191;
        t6 = key[12] & 255 | (key[13] & 255) << 8;
        this.r[7] = (t5 >>> 11 | t6 << 5) & 8065;
        t7 = key[14] & 255 | (key[15] & 255) << 8;
        this.r[8] = (t6 >>> 8 | t7 << 8) & 8191;
        this.r[9] = t7 >>> 5 & 127;
        this.pad[0] = key[16] & 255 | (key[17] & 255) << 8;
        this.pad[1] = key[18] & 255 | (key[19] & 255) << 8;
        this.pad[2] = key[20] & 255 | (key[21] & 255) << 8;
        this.pad[3] = key[22] & 255 | (key[23] & 255) << 8;
        this.pad[4] = key[24] & 255 | (key[25] & 255) << 8;
        this.pad[5] = key[26] & 255 | (key[27] & 255) << 8;
        this.pad[6] = key[28] & 255 | (key[29] & 255) << 8;
        this.pad[7] = key[30] & 255 | (key[31] & 255) << 8;
    };
    poly1305.prototype.blocks = function(m, mpos, bytes) {
        var hibit = this.fin ? 0 : 2048;
        var t0, t1, t2, t3, t4, t5, t6, t7, c;
        var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;
        var h0 = this.h[0], h1 = this.h[1], h2 = this.h[2], h3 = this.h[3], h4 = this.h[4], h5 = this.h[5], h6 = this.h[6], h7 = this.h[7], h8 = this.h[8], h9 = this.h[9];
        var r0 = this.r[0], r1 = this.r[1], r2 = this.r[2], r3 = this.r[3], r4 = this.r[4], r5 = this.r[5], r6 = this.r[6], r7 = this.r[7], r8 = this.r[8], r9 = this.r[9];
        while(bytes >= 16){
            t0 = m[mpos + 0] & 255 | (m[mpos + 1] & 255) << 8;
            h0 += t0 & 8191;
            t1 = m[mpos + 2] & 255 | (m[mpos + 3] & 255) << 8;
            h1 += (t0 >>> 13 | t1 << 3) & 8191;
            t2 = m[mpos + 4] & 255 | (m[mpos + 5] & 255) << 8;
            h2 += (t1 >>> 10 | t2 << 6) & 8191;
            t3 = m[mpos + 6] & 255 | (m[mpos + 7] & 255) << 8;
            h3 += (t2 >>> 7 | t3 << 9) & 8191;
            t4 = m[mpos + 8] & 255 | (m[mpos + 9] & 255) << 8;
            h4 += (t3 >>> 4 | t4 << 12) & 8191;
            h5 += t4 >>> 1 & 8191;
            t5 = m[mpos + 10] & 255 | (m[mpos + 11] & 255) << 8;
            h6 += (t4 >>> 14 | t5 << 2) & 8191;
            t6 = m[mpos + 12] & 255 | (m[mpos + 13] & 255) << 8;
            h7 += (t5 >>> 11 | t6 << 5) & 8191;
            t7 = m[mpos + 14] & 255 | (m[mpos + 15] & 255) << 8;
            h8 += (t6 >>> 8 | t7 << 8) & 8191;
            h9 += t7 >>> 5 | hibit;
            c = 0;
            d0 = c;
            d0 += h0 * r0;
            d0 += h1 * (5 * r9);
            d0 += h2 * (5 * r8);
            d0 += h3 * (5 * r7);
            d0 += h4 * (5 * r6);
            c = d0 >>> 13;
            d0 &= 8191;
            d0 += h5 * (5 * r5);
            d0 += h6 * (5 * r4);
            d0 += h7 * (5 * r3);
            d0 += h8 * (5 * r2);
            d0 += h9 * (5 * r1);
            c += d0 >>> 13;
            d0 &= 8191;
            d1 = c;
            d1 += h0 * r1;
            d1 += h1 * r0;
            d1 += h2 * (5 * r9);
            d1 += h3 * (5 * r8);
            d1 += h4 * (5 * r7);
            c = d1 >>> 13;
            d1 &= 8191;
            d1 += h5 * (5 * r6);
            d1 += h6 * (5 * r5);
            d1 += h7 * (5 * r4);
            d1 += h8 * (5 * r3);
            d1 += h9 * (5 * r2);
            c += d1 >>> 13;
            d1 &= 8191;
            d2 = c;
            d2 += h0 * r2;
            d2 += h1 * r1;
            d2 += h2 * r0;
            d2 += h3 * (5 * r9);
            d2 += h4 * (5 * r8);
            c = d2 >>> 13;
            d2 &= 8191;
            d2 += h5 * (5 * r7);
            d2 += h6 * (5 * r6);
            d2 += h7 * (5 * r5);
            d2 += h8 * (5 * r4);
            d2 += h9 * (5 * r3);
            c += d2 >>> 13;
            d2 &= 8191;
            d3 = c;
            d3 += h0 * r3;
            d3 += h1 * r2;
            d3 += h2 * r1;
            d3 += h3 * r0;
            d3 += h4 * (5 * r9);
            c = d3 >>> 13;
            d3 &= 8191;
            d3 += h5 * (5 * r8);
            d3 += h6 * (5 * r7);
            d3 += h7 * (5 * r6);
            d3 += h8 * (5 * r5);
            d3 += h9 * (5 * r4);
            c += d3 >>> 13;
            d3 &= 8191;
            d4 = c;
            d4 += h0 * r4;
            d4 += h1 * r3;
            d4 += h2 * r2;
            d4 += h3 * r1;
            d4 += h4 * r0;
            c = d4 >>> 13;
            d4 &= 8191;
            d4 += h5 * (5 * r9);
            d4 += h6 * (5 * r8);
            d4 += h7 * (5 * r7);
            d4 += h8 * (5 * r6);
            d4 += h9 * (5 * r5);
            c += d4 >>> 13;
            d4 &= 8191;
            d5 = c;
            d5 += h0 * r5;
            d5 += h1 * r4;
            d5 += h2 * r3;
            d5 += h3 * r2;
            d5 += h4 * r1;
            c = d5 >>> 13;
            d5 &= 8191;
            d5 += h5 * r0;
            d5 += h6 * (5 * r9);
            d5 += h7 * (5 * r8);
            d5 += h8 * (5 * r7);
            d5 += h9 * (5 * r6);
            c += d5 >>> 13;
            d5 &= 8191;
            d6 = c;
            d6 += h0 * r6;
            d6 += h1 * r5;
            d6 += h2 * r4;
            d6 += h3 * r3;
            d6 += h4 * r2;
            c = d6 >>> 13;
            d6 &= 8191;
            d6 += h5 * r1;
            d6 += h6 * r0;
            d6 += h7 * (5 * r9);
            d6 += h8 * (5 * r8);
            d6 += h9 * (5 * r7);
            c += d6 >>> 13;
            d6 &= 8191;
            d7 = c;
            d7 += h0 * r7;
            d7 += h1 * r6;
            d7 += h2 * r5;
            d7 += h3 * r4;
            d7 += h4 * r3;
            c = d7 >>> 13;
            d7 &= 8191;
            d7 += h5 * r2;
            d7 += h6 * r1;
            d7 += h7 * r0;
            d7 += h8 * (5 * r9);
            d7 += h9 * (5 * r8);
            c += d7 >>> 13;
            d7 &= 8191;
            d8 = c;
            d8 += h0 * r8;
            d8 += h1 * r7;
            d8 += h2 * r6;
            d8 += h3 * r5;
            d8 += h4 * r4;
            c = d8 >>> 13;
            d8 &= 8191;
            d8 += h5 * r3;
            d8 += h6 * r2;
            d8 += h7 * r1;
            d8 += h8 * r0;
            d8 += h9 * (5 * r9);
            c += d8 >>> 13;
            d8 &= 8191;
            d9 = c;
            d9 += h0 * r9;
            d9 += h1 * r8;
            d9 += h2 * r7;
            d9 += h3 * r6;
            d9 += h4 * r5;
            c = d9 >>> 13;
            d9 &= 8191;
            d9 += h5 * r4;
            d9 += h6 * r3;
            d9 += h7 * r2;
            d9 += h8 * r1;
            d9 += h9 * r0;
            c += d9 >>> 13;
            d9 &= 8191;
            c = (c << 2) + c | 0;
            c = c + d0 | 0;
            d0 = c & 8191;
            c = c >>> 13;
            d1 += c;
            h0 = d0;
            h1 = d1;
            h2 = d2;
            h3 = d3;
            h4 = d4;
            h5 = d5;
            h6 = d6;
            h7 = d7;
            h8 = d8;
            h9 = d9;
            mpos += 16;
            bytes -= 16;
        }
        this.h[0] = h0;
        this.h[1] = h1;
        this.h[2] = h2;
        this.h[3] = h3;
        this.h[4] = h4;
        this.h[5] = h5;
        this.h[6] = h6;
        this.h[7] = h7;
        this.h[8] = h8;
        this.h[9] = h9;
    };
    poly1305.prototype.finish = function(mac, macpos) {
        var g = new Uint16Array(10);
        var c, mask, f, i;
        if (this.leftover) {
            i = this.leftover;
            this.buffer[i++] = 1;
            for(; i < 16; i++)this.buffer[i] = 0;
            this.fin = 1;
            this.blocks(this.buffer, 0, 16);
        }
        c = this.h[1] >>> 13;
        this.h[1] &= 8191;
        for(i = 2; i < 10; i++){
            this.h[i] += c;
            c = this.h[i] >>> 13;
            this.h[i] &= 8191;
        }
        this.h[0] += c * 5;
        c = this.h[0] >>> 13;
        this.h[0] &= 8191;
        this.h[1] += c;
        c = this.h[1] >>> 13;
        this.h[1] &= 8191;
        this.h[2] += c;
        g[0] = this.h[0] + 5;
        c = g[0] >>> 13;
        g[0] &= 8191;
        for(i = 1; i < 10; i++){
            g[i] = this.h[i] + c;
            c = g[i] >>> 13;
            g[i] &= 8191;
        }
        g[9] -= 8192;
        mask = (c ^ 1) - 1;
        for(i = 0; i < 10; i++)g[i] &= mask;
        mask = ~mask;
        for(i = 0; i < 10; i++)this.h[i] = this.h[i] & mask | g[i];
        this.h[0] = (this.h[0] | this.h[1] << 13) & 65535;
        this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 65535;
        this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 65535;
        this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 65535;
        this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 65535;
        this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 65535;
        this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 65535;
        this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 65535;
        f = this.h[0] + this.pad[0];
        this.h[0] = f & 65535;
        for(i = 1; i < 8; i++){
            f = (this.h[i] + this.pad[i] | 0) + (f >>> 16) | 0;
            this.h[i] = f & 65535;
        }
        mac[macpos + 0] = this.h[0] >>> 0 & 255;
        mac[macpos + 1] = this.h[0] >>> 8 & 255;
        mac[macpos + 2] = this.h[1] >>> 0 & 255;
        mac[macpos + 3] = this.h[1] >>> 8 & 255;
        mac[macpos + 4] = this.h[2] >>> 0 & 255;
        mac[macpos + 5] = this.h[2] >>> 8 & 255;
        mac[macpos + 6] = this.h[3] >>> 0 & 255;
        mac[macpos + 7] = this.h[3] >>> 8 & 255;
        mac[macpos + 8] = this.h[4] >>> 0 & 255;
        mac[macpos + 9] = this.h[4] >>> 8 & 255;
        mac[macpos + 10] = this.h[5] >>> 0 & 255;
        mac[macpos + 11] = this.h[5] >>> 8 & 255;
        mac[macpos + 12] = this.h[6] >>> 0 & 255;
        mac[macpos + 13] = this.h[6] >>> 8 & 255;
        mac[macpos + 14] = this.h[7] >>> 0 & 255;
        mac[macpos + 15] = this.h[7] >>> 8 & 255;
    };
    poly1305.prototype.update = function(m, mpos, bytes) {
        var i, want;
        if (this.leftover) {
            want = 16 - this.leftover;
            if (want > bytes) want = bytes;
            for(i = 0; i < want; i++)this.buffer[this.leftover + i] = m[mpos + i];
            bytes -= want;
            mpos += want;
            this.leftover += want;
            if (this.leftover < 16) return;
            this.blocks(this.buffer, 0, 16);
            this.leftover = 0;
        }
        if (bytes >= 16) {
            want = bytes - bytes % 16;
            this.blocks(m, mpos, want);
            mpos += want;
            bytes -= want;
        }
        if (bytes) {
            for(i = 0; i < bytes; i++)this.buffer[this.leftover + i] = m[mpos + i];
            this.leftover += bytes;
        }
    };
    function crypto_onetimeauth(out, outpos, m, mpos, n, k) {
        var s = new poly1305(k);
        s.update(m, mpos, n);
        s.finish(out, outpos);
        return 0;
    }
    function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {
        var x = new Uint8Array(16);
        crypto_onetimeauth(x, 0, m, mpos, n, k);
        return crypto_verify_16(h, hpos, x, 0);
    }
    function crypto_secretbox(c, m, d, n, k) {
        var i;
        if (d < 32) return -1;
        crypto_stream_xor(c, 0, m, 0, d, n, k);
        crypto_onetimeauth(c, 16, c, 32, d - 32, c);
        for(i = 0; i < 16; i++)c[i] = 0;
        return 0;
    }
    function crypto_secretbox_open(m, c, d, n, k) {
        var i;
        var x = new Uint8Array(32);
        if (d < 32) return -1;
        crypto_stream(x, 0, 32, n, k);
        if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;
        crypto_stream_xor(m, 0, c, 0, d, n, k);
        for(i = 0; i < 32; i++)m[i] = 0;
        return 0;
    }
    function set25519(r, a) {
        var i;
        for(i = 0; i < 16; i++)r[i] = a[i] | 0;
    }
    function car25519(o) {
        var i, v, c = 1;
        for(i = 0; i < 16; i++){
            v = o[i] + c + 65535;
            c = Math.floor(v / 65536);
            o[i] = v - c * 65536;
        }
        o[0] += c - 1 + 37 * (c - 1);
    }
    function sel25519(p, q, b) {
        var t, c = ~(b - 1);
        for(var i = 0; i < 16; i++){
            t = c & (p[i] ^ q[i]);
            p[i] ^= t;
            q[i] ^= t;
        }
    }
    function pack25519(o, n) {
        var i, j, b;
        var m = gf(), t = gf();
        for(i = 0; i < 16; i++)t[i] = n[i];
        car25519(t);
        car25519(t);
        car25519(t);
        for(j = 0; j < 2; j++){
            m[0] = t[0] - 65517;
            for(i = 1; i < 15; i++){
                m[i] = t[i] - 65535 - (m[i - 1] >> 16 & 1);
                m[i - 1] &= 65535;
            }
            m[15] = t[15] - 32767 - (m[14] >> 16 & 1);
            b = m[15] >> 16 & 1;
            m[14] &= 65535;
            sel25519(t, m, 1 - b);
        }
        for(i = 0; i < 16; i++){
            o[2 * i] = t[i] & 255;
            o[2 * i + 1] = t[i] >> 8;
        }
    }
    function neq25519(a, b) {
        var c = new Uint8Array(32), d = new Uint8Array(32);
        pack25519(c, a);
        pack25519(d, b);
        return crypto_verify_32(c, 0, d, 0);
    }
    function par25519(a) {
        var d = new Uint8Array(32);
        pack25519(d, a);
        return d[0] & 1;
    }
    function unpack25519(o, n) {
        var i;
        for(i = 0; i < 16; i++)o[i] = n[2 * i] + (n[2 * i + 1] << 8);
        o[15] &= 32767;
    }
    function A(o, a, b) {
        for(var i = 0; i < 16; i++)o[i] = a[i] + b[i];
    }
    function Z(o, a, b) {
        for(var i = 0; i < 16; i++)o[i] = a[i] - b[i];
    }
    function M(o, a, b) {
        var v, c, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b[0], b1 = b[1], b2 = b[2], b3 = b[3], b4 = b[4], b5 = b[5], b6 = b[6], b7 = b[7], b8 = b[8], b9 = b[9], b10 = b[10], b11 = b[11], b12 = b[12], b13 = b[13], b14 = b[14], b15 = b[15];
        v = a[0];
        t0 += v * b0;
        t1 += v * b1;
        t2 += v * b2;
        t3 += v * b3;
        t4 += v * b4;
        t5 += v * b5;
        t6 += v * b6;
        t7 += v * b7;
        t8 += v * b8;
        t9 += v * b9;
        t10 += v * b10;
        t11 += v * b11;
        t12 += v * b12;
        t13 += v * b13;
        t14 += v * b14;
        t15 += v * b15;
        v = a[1];
        t1 += v * b0;
        t2 += v * b1;
        t3 += v * b2;
        t4 += v * b3;
        t5 += v * b4;
        t6 += v * b5;
        t7 += v * b6;
        t8 += v * b7;
        t9 += v * b8;
        t10 += v * b9;
        t11 += v * b10;
        t12 += v * b11;
        t13 += v * b12;
        t14 += v * b13;
        t15 += v * b14;
        t16 += v * b15;
        v = a[2];
        t2 += v * b0;
        t3 += v * b1;
        t4 += v * b2;
        t5 += v * b3;
        t6 += v * b4;
        t7 += v * b5;
        t8 += v * b6;
        t9 += v * b7;
        t10 += v * b8;
        t11 += v * b9;
        t12 += v * b10;
        t13 += v * b11;
        t14 += v * b12;
        t15 += v * b13;
        t16 += v * b14;
        t17 += v * b15;
        v = a[3];
        t3 += v * b0;
        t4 += v * b1;
        t5 += v * b2;
        t6 += v * b3;
        t7 += v * b4;
        t8 += v * b5;
        t9 += v * b6;
        t10 += v * b7;
        t11 += v * b8;
        t12 += v * b9;
        t13 += v * b10;
        t14 += v * b11;
        t15 += v * b12;
        t16 += v * b13;
        t17 += v * b14;
        t18 += v * b15;
        v = a[4];
        t4 += v * b0;
        t5 += v * b1;
        t6 += v * b2;
        t7 += v * b3;
        t8 += v * b4;
        t9 += v * b5;
        t10 += v * b6;
        t11 += v * b7;
        t12 += v * b8;
        t13 += v * b9;
        t14 += v * b10;
        t15 += v * b11;
        t16 += v * b12;
        t17 += v * b13;
        t18 += v * b14;
        t19 += v * b15;
        v = a[5];
        t5 += v * b0;
        t6 += v * b1;
        t7 += v * b2;
        t8 += v * b3;
        t9 += v * b4;
        t10 += v * b5;
        t11 += v * b6;
        t12 += v * b7;
        t13 += v * b8;
        t14 += v * b9;
        t15 += v * b10;
        t16 += v * b11;
        t17 += v * b12;
        t18 += v * b13;
        t19 += v * b14;
        t20 += v * b15;
        v = a[6];
        t6 += v * b0;
        t7 += v * b1;
        t8 += v * b2;
        t9 += v * b3;
        t10 += v * b4;
        t11 += v * b5;
        t12 += v * b6;
        t13 += v * b7;
        t14 += v * b8;
        t15 += v * b9;
        t16 += v * b10;
        t17 += v * b11;
        t18 += v * b12;
        t19 += v * b13;
        t20 += v * b14;
        t21 += v * b15;
        v = a[7];
        t7 += v * b0;
        t8 += v * b1;
        t9 += v * b2;
        t10 += v * b3;
        t11 += v * b4;
        t12 += v * b5;
        t13 += v * b6;
        t14 += v * b7;
        t15 += v * b8;
        t16 += v * b9;
        t17 += v * b10;
        t18 += v * b11;
        t19 += v * b12;
        t20 += v * b13;
        t21 += v * b14;
        t22 += v * b15;
        v = a[8];
        t8 += v * b0;
        t9 += v * b1;
        t10 += v * b2;
        t11 += v * b3;
        t12 += v * b4;
        t13 += v * b5;
        t14 += v * b6;
        t15 += v * b7;
        t16 += v * b8;
        t17 += v * b9;
        t18 += v * b10;
        t19 += v * b11;
        t20 += v * b12;
        t21 += v * b13;
        t22 += v * b14;
        t23 += v * b15;
        v = a[9];
        t9 += v * b0;
        t10 += v * b1;
        t11 += v * b2;
        t12 += v * b3;
        t13 += v * b4;
        t14 += v * b5;
        t15 += v * b6;
        t16 += v * b7;
        t17 += v * b8;
        t18 += v * b9;
        t19 += v * b10;
        t20 += v * b11;
        t21 += v * b12;
        t22 += v * b13;
        t23 += v * b14;
        t24 += v * b15;
        v = a[10];
        t10 += v * b0;
        t11 += v * b1;
        t12 += v * b2;
        t13 += v * b3;
        t14 += v * b4;
        t15 += v * b5;
        t16 += v * b6;
        t17 += v * b7;
        t18 += v * b8;
        t19 += v * b9;
        t20 += v * b10;
        t21 += v * b11;
        t22 += v * b12;
        t23 += v * b13;
        t24 += v * b14;
        t25 += v * b15;
        v = a[11];
        t11 += v * b0;
        t12 += v * b1;
        t13 += v * b2;
        t14 += v * b3;
        t15 += v * b4;
        t16 += v * b5;
        t17 += v * b6;
        t18 += v * b7;
        t19 += v * b8;
        t20 += v * b9;
        t21 += v * b10;
        t22 += v * b11;
        t23 += v * b12;
        t24 += v * b13;
        t25 += v * b14;
        t26 += v * b15;
        v = a[12];
        t12 += v * b0;
        t13 += v * b1;
        t14 += v * b2;
        t15 += v * b3;
        t16 += v * b4;
        t17 += v * b5;
        t18 += v * b6;
        t19 += v * b7;
        t20 += v * b8;
        t21 += v * b9;
        t22 += v * b10;
        t23 += v * b11;
        t24 += v * b12;
        t25 += v * b13;
        t26 += v * b14;
        t27 += v * b15;
        v = a[13];
        t13 += v * b0;
        t14 += v * b1;
        t15 += v * b2;
        t16 += v * b3;
        t17 += v * b4;
        t18 += v * b5;
        t19 += v * b6;
        t20 += v * b7;
        t21 += v * b8;
        t22 += v * b9;
        t23 += v * b10;
        t24 += v * b11;
        t25 += v * b12;
        t26 += v * b13;
        t27 += v * b14;
        t28 += v * b15;
        v = a[14];
        t14 += v * b0;
        t15 += v * b1;
        t16 += v * b2;
        t17 += v * b3;
        t18 += v * b4;
        t19 += v * b5;
        t20 += v * b6;
        t21 += v * b7;
        t22 += v * b8;
        t23 += v * b9;
        t24 += v * b10;
        t25 += v * b11;
        t26 += v * b12;
        t27 += v * b13;
        t28 += v * b14;
        t29 += v * b15;
        v = a[15];
        t15 += v * b0;
        t16 += v * b1;
        t17 += v * b2;
        t18 += v * b3;
        t19 += v * b4;
        t20 += v * b5;
        t21 += v * b6;
        t22 += v * b7;
        t23 += v * b8;
        t24 += v * b9;
        t25 += v * b10;
        t26 += v * b11;
        t27 += v * b12;
        t28 += v * b13;
        t29 += v * b14;
        t30 += v * b15;
        t0 += 38 * t16;
        t1 += 38 * t17;
        t2 += 38 * t18;
        t3 += 38 * t19;
        t4 += 38 * t20;
        t5 += 38 * t21;
        t6 += 38 * t22;
        t7 += 38 * t23;
        t8 += 38 * t24;
        t9 += 38 * t25;
        t10 += 38 * t26;
        t11 += 38 * t27;
        t12 += 38 * t28;
        t13 += 38 * t29;
        t14 += 38 * t30;
        // t15 left as is
        // first car
        c = 1;
        v = t0 + c + 65535;
        c = Math.floor(v / 65536);
        t0 = v - c * 65536;
        v = t1 + c + 65535;
        c = Math.floor(v / 65536);
        t1 = v - c * 65536;
        v = t2 + c + 65535;
        c = Math.floor(v / 65536);
        t2 = v - c * 65536;
        v = t3 + c + 65535;
        c = Math.floor(v / 65536);
        t3 = v - c * 65536;
        v = t4 + c + 65535;
        c = Math.floor(v / 65536);
        t4 = v - c * 65536;
        v = t5 + c + 65535;
        c = Math.floor(v / 65536);
        t5 = v - c * 65536;
        v = t6 + c + 65535;
        c = Math.floor(v / 65536);
        t6 = v - c * 65536;
        v = t7 + c + 65535;
        c = Math.floor(v / 65536);
        t7 = v - c * 65536;
        v = t8 + c + 65535;
        c = Math.floor(v / 65536);
        t8 = v - c * 65536;
        v = t9 + c + 65535;
        c = Math.floor(v / 65536);
        t9 = v - c * 65536;
        v = t10 + c + 65535;
        c = Math.floor(v / 65536);
        t10 = v - c * 65536;
        v = t11 + c + 65535;
        c = Math.floor(v / 65536);
        t11 = v - c * 65536;
        v = t12 + c + 65535;
        c = Math.floor(v / 65536);
        t12 = v - c * 65536;
        v = t13 + c + 65535;
        c = Math.floor(v / 65536);
        t13 = v - c * 65536;
        v = t14 + c + 65535;
        c = Math.floor(v / 65536);
        t14 = v - c * 65536;
        v = t15 + c + 65535;
        c = Math.floor(v / 65536);
        t15 = v - c * 65536;
        t0 += c - 1 + 37 * (c - 1);
        // second car
        c = 1;
        v = t0 + c + 65535;
        c = Math.floor(v / 65536);
        t0 = v - c * 65536;
        v = t1 + c + 65535;
        c = Math.floor(v / 65536);
        t1 = v - c * 65536;
        v = t2 + c + 65535;
        c = Math.floor(v / 65536);
        t2 = v - c * 65536;
        v = t3 + c + 65535;
        c = Math.floor(v / 65536);
        t3 = v - c * 65536;
        v = t4 + c + 65535;
        c = Math.floor(v / 65536);
        t4 = v - c * 65536;
        v = t5 + c + 65535;
        c = Math.floor(v / 65536);
        t5 = v - c * 65536;
        v = t6 + c + 65535;
        c = Math.floor(v / 65536);
        t6 = v - c * 65536;
        v = t7 + c + 65535;
        c = Math.floor(v / 65536);
        t7 = v - c * 65536;
        v = t8 + c + 65535;
        c = Math.floor(v / 65536);
        t8 = v - c * 65536;
        v = t9 + c + 65535;
        c = Math.floor(v / 65536);
        t9 = v - c * 65536;
        v = t10 + c + 65535;
        c = Math.floor(v / 65536);
        t10 = v - c * 65536;
        v = t11 + c + 65535;
        c = Math.floor(v / 65536);
        t11 = v - c * 65536;
        v = t12 + c + 65535;
        c = Math.floor(v / 65536);
        t12 = v - c * 65536;
        v = t13 + c + 65535;
        c = Math.floor(v / 65536);
        t13 = v - c * 65536;
        v = t14 + c + 65535;
        c = Math.floor(v / 65536);
        t14 = v - c * 65536;
        v = t15 + c + 65535;
        c = Math.floor(v / 65536);
        t15 = v - c * 65536;
        t0 += c - 1 + 37 * (c - 1);
        o[0] = t0;
        o[1] = t1;
        o[2] = t2;
        o[3] = t3;
        o[4] = t4;
        o[5] = t5;
        o[6] = t6;
        o[7] = t7;
        o[8] = t8;
        o[9] = t9;
        o[10] = t10;
        o[11] = t11;
        o[12] = t12;
        o[13] = t13;
        o[14] = t14;
        o[15] = t15;
    }
    function S(o, a) {
        M(o, a, a);
    }
    function inv25519(o, i) {
        var c = gf();
        var a;
        for(a = 0; a < 16; a++)c[a] = i[a];
        for(a = 253; a >= 0; a--){
            S(c, c);
            if (a !== 2 && a !== 4) M(c, c, i);
        }
        for(a = 0; a < 16; a++)o[a] = c[a];
    }
    function pow2523(o, i) {
        var c = gf();
        var a;
        for(a = 0; a < 16; a++)c[a] = i[a];
        for(a = 250; a >= 0; a--){
            S(c, c);
            if (a !== 1) M(c, c, i);
        }
        for(a = 0; a < 16; a++)o[a] = c[a];
    }
    function crypto_scalarmult(q, n, p) {
        var z = new Uint8Array(32);
        var x = new Float64Array(80), r, i;
        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf();
        for(i = 0; i < 31; i++)z[i] = n[i];
        z[31] = n[31] & 127 | 64;
        z[0] &= 248;
        unpack25519(x, p);
        for(i = 0; i < 16; i++){
            b[i] = x[i];
            d[i] = a[i] = c[i] = 0;
        }
        a[0] = d[0] = 1;
        for(i = 254; i >= 0; --i){
            r = z[i >>> 3] >>> (i & 7) & 1;
            sel25519(a, b, r);
            sel25519(c, d, r);
            A(e, a, c);
            Z(a, a, c);
            A(c, b, d);
            Z(b, b, d);
            S(d, e);
            S(f, a);
            M(a, c, a);
            M(c, b, e);
            A(e, a, c);
            Z(a, a, c);
            S(b, a);
            Z(c, d, f);
            M(a, c, _121665);
            A(a, a, d);
            M(c, c, a);
            M(a, d, f);
            M(d, b, x);
            S(b, e);
            sel25519(a, b, r);
            sel25519(c, d, r);
        }
        for(i = 0; i < 16; i++){
            x[i + 16] = a[i];
            x[i + 32] = c[i];
            x[i + 48] = b[i];
            x[i + 64] = d[i];
        }
        var x32 = x.subarray(32);
        var x16 = x.subarray(16);
        inv25519(x32, x32);
        M(x16, x16, x32);
        pack25519(q, x16);
        return 0;
    }
    function crypto_scalarmult_base(q, n) {
        return crypto_scalarmult(q, n, _9);
    }
    function crypto_box_keypair(y, x) {
        randombytes(x, 32);
        return crypto_scalarmult_base(y, x);
    }
    function crypto_box_beforenm(k, y, x) {
        var s = new Uint8Array(32);
        crypto_scalarmult(s, x, y);
        return crypto_core_hsalsa20(k, _0, s, sigma);
    }
    var crypto_box_afternm = crypto_secretbox;
    var crypto_box_open_afternm = crypto_secretbox_open;
    function crypto_box(c, m, d, n, y, x) {
        var k = new Uint8Array(32);
        crypto_box_beforenm(k, y, x);
        return crypto_box_afternm(c, m, d, n, k);
    }
    function crypto_box_open(m, c, d, n, y, x) {
        var k = new Uint8Array(32);
        crypto_box_beforenm(k, y, x);
        return crypto_box_open_afternm(m, c, d, n, k);
    }
    var K = [
        1116352408,
        3609767458,
        1899447441,
        602891725,
        3049323471,
        3964484399,
        3921009573,
        2173295548,
        961987163,
        4081628472,
        1508970993,
        3053834265,
        2453635748,
        2937671579,
        2870763221,
        3664609560,
        3624381080,
        2734883394,
        310598401,
        1164996542,
        607225278,
        1323610764,
        1426881987,
        3590304994,
        1925078388,
        4068182383,
        2162078206,
        991336113,
        2614888103,
        633803317,
        3248222580,
        3479774868,
        3835390401,
        2666613458,
        4022224774,
        944711139,
        264347078,
        2341262773,
        604807628,
        2007800933,
        770255983,
        1495990901,
        1249150122,
        1856431235,
        1555081692,
        3175218132,
        1996064986,
        2198950837,
        2554220882,
        3999719339,
        2821834349,
        766784016,
        2952996808,
        2566594879,
        3210313671,
        3203337956,
        3336571891,
        1034457026,
        3584528711,
        2466948901,
        113926993,
        3758326383,
        338241895,
        168717936,
        666307205,
        1188179964,
        773529912,
        1546045734,
        1294757372,
        1522805485,
        1396182291,
        2643833823,
        1695183700,
        2343527390,
        1986661051,
        1014477480,
        2177026350,
        1206759142,
        2456956037,
        344077627,
        2730485921,
        1290863460,
        2820302411,
        3158454273,
        3259730800,
        3505952657,
        3345764771,
        106217008,
        3516065817,
        3606008344,
        3600352804,
        1432725776,
        4094571909,
        1467031594,
        275423344,
        851169720,
        430227734,
        3100823752,
        506948616,
        1363258195,
        659060556,
        3750685593,
        883997877,
        3785050280,
        958139571,
        3318307427,
        1322822218,
        3812723403,
        1537002063,
        2003034995,
        1747873779,
        3602036899,
        1955562222,
        1575990012,
        2024104815,
        1125592928,
        2227730452,
        2716904306,
        2361852424,
        442776044,
        2428436474,
        593698344,
        2756734187,
        3733110249,
        3204031479,
        2999351573,
        3329325298,
        3815920427,
        3391569614,
        3928383900,
        3515267271,
        566280711,
        3940187606,
        3454069534,
        4118630271,
        4000239992,
        116418474,
        1914138554,
        174292421,
        2731055270,
        289380356,
        3203993006,
        460393269,
        320620315,
        685471733,
        587496836,
        852142971,
        1086792851,
        1017036298,
        365543100,
        1126000580,
        2618297676,
        1288033470,
        3409855158,
        1501505948,
        4234509866,
        1607167915,
        987167468,
        1816402316,
        1246189591
    ];
    function crypto_hashblocks_hl(hh, hl, m, n) {
        var wh = new Int32Array(16), wl = new Int32Array(16), bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7, bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7, th, tl, i, j, h, l, a, b, c, d;
        var ah0 = hh[0], ah1 = hh[1], ah2 = hh[2], ah3 = hh[3], ah4 = hh[4], ah5 = hh[5], ah6 = hh[6], ah7 = hh[7], al0 = hl[0], al1 = hl[1], al2 = hl[2], al3 = hl[3], al4 = hl[4], al5 = hl[5], al6 = hl[6], al7 = hl[7];
        var pos = 0;
        while(n >= 128){
            for(i = 0; i < 16; i++){
                j = 8 * i + pos;
                wh[i] = m[j + 0] << 24 | m[j + 1] << 16 | m[j + 2] << 8 | m[j + 3];
                wl[i] = m[j + 4] << 24 | m[j + 5] << 16 | m[j + 6] << 8 | m[j + 7];
            }
            for(i = 0; i < 80; i++){
                bh0 = ah0;
                bh1 = ah1;
                bh2 = ah2;
                bh3 = ah3;
                bh4 = ah4;
                bh5 = ah5;
                bh6 = ah6;
                bh7 = ah7;
                bl0 = al0;
                bl1 = al1;
                bl2 = al2;
                bl3 = al3;
                bl4 = al4;
                bl5 = al5;
                bl6 = al6;
                bl7 = al7;
                // add
                h = ah7;
                l = al7;
                a = l & 65535;
                b = l >>> 16;
                c = h & 65535;
                d = h >>> 16;
                // Sigma1
                h = (ah4 >>> 14 | al4 << 18) ^ (ah4 >>> 18 | al4 << 14) ^ (al4 >>> 9 | ah4 << 23);
                l = (al4 >>> 14 | ah4 << 18) ^ (al4 >>> 18 | ah4 << 14) ^ (ah4 >>> 9 | al4 << 23);
                a += l & 65535;
                b += l >>> 16;
                c += h & 65535;
                d += h >>> 16;
                // Ch
                h = ah4 & ah5 ^ ~ah4 & ah6;
                l = al4 & al5 ^ ~al4 & al6;
                a += l & 65535;
                b += l >>> 16;
                c += h & 65535;
                d += h >>> 16;
                // K
                h = K[i * 2];
                l = K[i * 2 + 1];
                a += l & 65535;
                b += l >>> 16;
                c += h & 65535;
                d += h >>> 16;
                // w
                h = wh[i % 16];
                l = wl[i % 16];
                a += l & 65535;
                b += l >>> 16;
                c += h & 65535;
                d += h >>> 16;
                b += a >>> 16;
                c += b >>> 16;
                d += c >>> 16;
                th = c & 65535 | d << 16;
                tl = a & 65535 | b << 16;
                // add
                h = th;
                l = tl;
                a = l & 65535;
                b = l >>> 16;
                c = h & 65535;
                d = h >>> 16;
                // Sigma0
                h = (ah0 >>> 28 | al0 << 4) ^ (al0 >>> 2 | ah0 << 30) ^ (al0 >>> 7 | ah0 << 25);
                l = (al0 >>> 28 | ah0 << 4) ^ (ah0 >>> 2 | al0 << 30) ^ (ah0 >>> 7 | al0 << 25);
                a += l & 65535;
                b += l >>> 16;
                c += h & 65535;
                d += h >>> 16;
                // Maj
                h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;
                l = al0 & al1 ^ al0 & al2 ^ al1 & al2;
                a += l & 65535;
                b += l >>> 16;
                c += h & 65535;
                d += h >>> 16;
                b += a >>> 16;
                c += b >>> 16;
                d += c >>> 16;
                bh7 = c & 65535 | d << 16;
                bl7 = a & 65535 | b << 16;
                // add
                h = bh3;
                l = bl3;
                a = l & 65535;
                b = l >>> 16;
                c = h & 65535;
                d = h >>> 16;
                h = th;
                l = tl;
                a += l & 65535;
                b += l >>> 16;
                c += h & 65535;
                d += h >>> 16;
                b += a >>> 16;
                c += b >>> 16;
                d += c >>> 16;
                bh3 = c & 65535 | d << 16;
                bl3 = a & 65535 | b << 16;
                ah1 = bh0;
                ah2 = bh1;
                ah3 = bh2;
                ah4 = bh3;
                ah5 = bh4;
                ah6 = bh5;
                ah7 = bh6;
                ah0 = bh7;
                al1 = bl0;
                al2 = bl1;
                al3 = bl2;
                al4 = bl3;
                al5 = bl4;
                al6 = bl5;
                al7 = bl6;
                al0 = bl7;
                if (i % 16 === 15) for(j = 0; j < 16; j++){
                    // add
                    h = wh[j];
                    l = wl[j];
                    a = l & 65535;
                    b = l >>> 16;
                    c = h & 65535;
                    d = h >>> 16;
                    h = wh[(j + 9) % 16];
                    l = wl[(j + 9) % 16];
                    a += l & 65535;
                    b += l >>> 16;
                    c += h & 65535;
                    d += h >>> 16;
                    // sigma0
                    th = wh[(j + 1) % 16];
                    tl = wl[(j + 1) % 16];
                    h = (th >>> 1 | tl << 31) ^ (th >>> 8 | tl << 24) ^ th >>> 7;
                    l = (tl >>> 1 | th << 31) ^ (tl >>> 8 | th << 24) ^ (tl >>> 7 | th << 25);
                    a += l & 65535;
                    b += l >>> 16;
                    c += h & 65535;
                    d += h >>> 16;
                    // sigma1
                    th = wh[(j + 14) % 16];
                    tl = wl[(j + 14) % 16];
                    h = (th >>> 19 | tl << 13) ^ (tl >>> 29 | th << 3) ^ th >>> 6;
                    l = (tl >>> 19 | th << 13) ^ (th >>> 29 | tl << 3) ^ (tl >>> 6 | th << 26);
                    a += l & 65535;
                    b += l >>> 16;
                    c += h & 65535;
                    d += h >>> 16;
                    b += a >>> 16;
                    c += b >>> 16;
                    d += c >>> 16;
                    wh[j] = c & 65535 | d << 16;
                    wl[j] = a & 65535 | b << 16;
                }
            }
            // add
            h = ah0;
            l = al0;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[0];
            l = hl[0];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[0] = ah0 = c & 65535 | d << 16;
            hl[0] = al0 = a & 65535 | b << 16;
            h = ah1;
            l = al1;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[1];
            l = hl[1];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[1] = ah1 = c & 65535 | d << 16;
            hl[1] = al1 = a & 65535 | b << 16;
            h = ah2;
            l = al2;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[2];
            l = hl[2];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[2] = ah2 = c & 65535 | d << 16;
            hl[2] = al2 = a & 65535 | b << 16;
            h = ah3;
            l = al3;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[3];
            l = hl[3];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[3] = ah3 = c & 65535 | d << 16;
            hl[3] = al3 = a & 65535 | b << 16;
            h = ah4;
            l = al4;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[4];
            l = hl[4];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[4] = ah4 = c & 65535 | d << 16;
            hl[4] = al4 = a & 65535 | b << 16;
            h = ah5;
            l = al5;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[5];
            l = hl[5];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[5] = ah5 = c & 65535 | d << 16;
            hl[5] = al5 = a & 65535 | b << 16;
            h = ah6;
            l = al6;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[6];
            l = hl[6];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[6] = ah6 = c & 65535 | d << 16;
            hl[6] = al6 = a & 65535 | b << 16;
            h = ah7;
            l = al7;
            a = l & 65535;
            b = l >>> 16;
            c = h & 65535;
            d = h >>> 16;
            h = hh[7];
            l = hl[7];
            a += l & 65535;
            b += l >>> 16;
            c += h & 65535;
            d += h >>> 16;
            b += a >>> 16;
            c += b >>> 16;
            d += c >>> 16;
            hh[7] = ah7 = c & 65535 | d << 16;
            hl[7] = al7 = a & 65535 | b << 16;
            pos += 128;
            n -= 128;
        }
        return n;
    }
    function crypto_hash(out, m, n) {
        var hh = new Int32Array(8), hl = new Int32Array(8), x = new Uint8Array(256), i, b = n;
        hh[0] = 1779033703;
        hh[1] = 3144134277;
        hh[2] = 1013904242;
        hh[3] = 2773480762;
        hh[4] = 1359893119;
        hh[5] = 2600822924;
        hh[6] = 528734635;
        hh[7] = 1541459225;
        hl[0] = 4089235720;
        hl[1] = 2227873595;
        hl[2] = 4271175723;
        hl[3] = 1595750129;
        hl[4] = 2917565137;
        hl[5] = 725511199;
        hl[6] = 4215389547;
        hl[7] = 327033209;
        crypto_hashblocks_hl(hh, hl, m, n);
        n %= 128;
        for(i = 0; i < n; i++)x[i] = m[b - n + i];
        x[n] = 128;
        n = 256 - 128 * (n < 112 ? 1 : 0);
        x[n - 9] = 0;
        ts64(x, n - 8, b / 536870912 | 0, b << 3);
        crypto_hashblocks_hl(hh, hl, x, n);
        for(i = 0; i < 8; i++)ts64(out, 8 * i, hh[i], hl[i]);
        return 0;
    }
    function add(p, q) {
        var a = gf(), b = gf(), c = gf(), d = gf(), e = gf(), f = gf(), g = gf(), h = gf(), t = gf();
        Z(a, p[1], p[0]);
        Z(t, q[1], q[0]);
        M(a, a, t);
        A(b, p[0], p[1]);
        A(t, q[0], q[1]);
        M(b, b, t);
        M(c, p[3], q[3]);
        M(c, c, D2);
        M(d, p[2], q[2]);
        A(d, d, d);
        Z(e, b, a);
        Z(f, d, c);
        A(g, d, c);
        A(h, b, a);
        M(p[0], e, f);
        M(p[1], h, g);
        M(p[2], g, f);
        M(p[3], e, h);
    }
    function cswap(p, q, b) {
        var i;
        for(i = 0; i < 4; i++)sel25519(p[i], q[i], b);
    }
    function pack(r, p) {
        var tx = gf(), ty = gf(), zi = gf();
        inv25519(zi, p[2]);
        M(tx, p[0], zi);
        M(ty, p[1], zi);
        pack25519(r, ty);
        r[31] ^= par25519(tx) << 7;
    }
    function scalarmult(p, q, s) {
        var b, i;
        set25519(p[0], gf0);
        set25519(p[1], gf1);
        set25519(p[2], gf1);
        set25519(p[3], gf0);
        for(i = 255; i >= 0; --i){
            b = s[i / 8 | 0] >> (i & 7) & 1;
            cswap(p, q, b);
            add(q, p);
            add(p, p);
            cswap(p, q, b);
        }
    }
    function scalarbase(p, s) {
        var q = [
            gf(),
            gf(),
            gf(),
            gf()
        ];
        set25519(q[0], X);
        set25519(q[1], Y);
        set25519(q[2], gf1);
        M(q[3], X, Y);
        scalarmult(p, q, s);
    }
    function crypto_sign_keypair(pk, sk, seeded) {
        var d = new Uint8Array(64);
        var p = [
            gf(),
            gf(),
            gf(),
            gf()
        ];
        var i;
        if (!seeded) randombytes(sk, 32);
        crypto_hash(d, sk, 32);
        d[0] &= 248;
        d[31] &= 127;
        d[31] |= 64;
        scalarbase(p, d);
        pack(pk, p);
        for(i = 0; i < 32; i++)sk[i + 32] = pk[i];
        return 0;
    }
    var L = new Float64Array([
        237,
        211,
        245,
        92,
        26,
        99,
        18,
        88,
        214,
        156,
        247,
        162,
        222,
        249,
        222,
        20,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        16
    ]);
    function modL(r, x) {
        var carry, i, j, k;
        for(i = 63; i >= 32; --i){
            carry = 0;
            for(j = i - 32, k = i - 12; j < k; ++j){
                x[j] += carry - 16 * x[i] * L[j - (i - 32)];
                carry = Math.floor((x[j] + 128) / 256);
                x[j] -= carry * 256;
            }
            x[j] += carry;
            x[i] = 0;
        }
        carry = 0;
        for(j = 0; j < 32; j++){
            x[j] += carry - (x[31] >> 4) * L[j];
            carry = x[j] >> 8;
            x[j] &= 255;
        }
        for(j = 0; j < 32; j++)x[j] -= carry * L[j];
        for(i = 0; i < 32; i++){
            x[i + 1] += x[i] >> 8;
            r[i] = x[i] & 255;
        }
    }
    function reduce(r) {
        var x = new Float64Array(64), i;
        for(i = 0; i < 64; i++)x[i] = r[i];
        for(i = 0; i < 64; i++)r[i] = 0;
        modL(r, x);
    }
    // Note: difference from C - smlen returned, not passed as argument.
    function crypto_sign(sm, m, n, sk) {
        var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);
        var i, j, x = new Float64Array(64);
        var p = [
            gf(),
            gf(),
            gf(),
            gf()
        ];
        crypto_hash(d, sk, 32);
        d[0] &= 248;
        d[31] &= 127;
        d[31] |= 64;
        var smlen = n + 64;
        for(i = 0; i < n; i++)sm[64 + i] = m[i];
        for(i = 0; i < 32; i++)sm[32 + i] = d[32 + i];
        crypto_hash(r, sm.subarray(32), n + 32);
        reduce(r);
        scalarbase(p, r);
        pack(sm, p);
        for(i = 32; i < 64; i++)sm[i] = sk[i];
        crypto_hash(h, sm, n + 64);
        reduce(h);
        for(i = 0; i < 64; i++)x[i] = 0;
        for(i = 0; i < 32; i++)x[i] = r[i];
        for(i = 0; i < 32; i++)for(j = 0; j < 32; j++)x[i + j] += h[i] * d[j];
        modL(sm.subarray(32), x);
        return smlen;
    }
    function unpackneg(r, p) {
        var t = gf(), chk = gf(), num = gf(), den = gf(), den2 = gf(), den4 = gf(), den6 = gf();
        set25519(r[2], gf1);
        unpack25519(r[1], p);
        S(num, r[1]);
        M(den, num, D);
        Z(num, num, r[2]);
        A(den, r[2], den);
        S(den2, den);
        S(den4, den2);
        M(den6, den4, den2);
        M(t, den6, num);
        M(t, t, den);
        pow2523(t, t);
        M(t, t, num);
        M(t, t, den);
        M(t, t, den);
        M(r[0], t, den);
        S(chk, r[0]);
        M(chk, chk, den);
        if (neq25519(chk, num)) M(r[0], r[0], I);
        S(chk, r[0]);
        M(chk, chk, den);
        if (neq25519(chk, num)) return -1;
        if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);
        M(r[3], r[0], r[1]);
        return 0;
    }
    function crypto_sign_open(m, sm, n, pk) {
        var i;
        var t = new Uint8Array(32), h = new Uint8Array(64);
        var p = [
            gf(),
            gf(),
            gf(),
            gf()
        ], q = [
            gf(),
            gf(),
            gf(),
            gf()
        ];
        if (n < 64) return -1;
        if (unpackneg(q, pk)) return -1;
        for(i = 0; i < n; i++)m[i] = sm[i];
        for(i = 0; i < 32; i++)m[i + 32] = pk[i];
        crypto_hash(h, m, n);
        reduce(h);
        scalarmult(p, q, h);
        scalarbase(q, sm.subarray(32));
        add(p, q);
        pack(t, p);
        n -= 64;
        if (crypto_verify_32(sm, 0, t, 0)) {
            for(i = 0; i < n; i++)m[i] = 0;
            return -1;
        }
        for(i = 0; i < n; i++)m[i] = sm[i + 64];
        return n;
    }
    var crypto_secretbox_KEYBYTES = 32, crypto_secretbox_NONCEBYTES = 24, crypto_secretbox_ZEROBYTES = 32, crypto_secretbox_BOXZEROBYTES = 16, crypto_scalarmult_BYTES = 32, crypto_scalarmult_SCALARBYTES = 32, crypto_box_PUBLICKEYBYTES = 32, crypto_box_SECRETKEYBYTES = 32, crypto_box_BEFORENMBYTES = 32, crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES, crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES, crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES, crypto_sign_BYTES = 64, crypto_sign_PUBLICKEYBYTES = 32, crypto_sign_SECRETKEYBYTES = 64, crypto_sign_SEEDBYTES = 32, crypto_hash_BYTES = 64;
    nacl.lowlevel = {
        crypto_core_hsalsa20: crypto_core_hsalsa20,
        crypto_stream_xor: crypto_stream_xor,
        crypto_stream: crypto_stream,
        crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,
        crypto_stream_salsa20: crypto_stream_salsa20,
        crypto_onetimeauth: crypto_onetimeauth,
        crypto_onetimeauth_verify: crypto_onetimeauth_verify,
        crypto_verify_16: crypto_verify_16,
        crypto_verify_32: crypto_verify_32,
        crypto_secretbox: crypto_secretbox,
        crypto_secretbox_open: crypto_secretbox_open,
        crypto_scalarmult: crypto_scalarmult,
        crypto_scalarmult_base: crypto_scalarmult_base,
        crypto_box_beforenm: crypto_box_beforenm,
        crypto_box_afternm: crypto_box_afternm,
        crypto_box: crypto_box,
        crypto_box_open: crypto_box_open,
        crypto_box_keypair: crypto_box_keypair,
        crypto_hash: crypto_hash,
        crypto_sign: crypto_sign,
        crypto_sign_keypair: crypto_sign_keypair,
        crypto_sign_open: crypto_sign_open,
        crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,
        crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,
        crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,
        crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,
        crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,
        crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,
        crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,
        crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,
        crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,
        crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,
        crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,
        crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,
        crypto_sign_BYTES: crypto_sign_BYTES,
        crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,
        crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,
        crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,
        crypto_hash_BYTES: crypto_hash_BYTES,
        gf: gf,
        D: D,
        L: L,
        pack25519: pack25519,
        unpack25519: unpack25519,
        M: M,
        A: A,
        S: S,
        Z: Z,
        pow2523: pow2523,
        add: add,
        set25519: set25519,
        modL: modL,
        scalarmult: scalarmult,
        scalarbase: scalarbase
    };
    /* High-level API */ function checkLengths(k, n) {
        if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');
        if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');
    }
    function checkBoxLengths(pk, sk) {
        if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');
        if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
    }
    function checkArrayTypes() {
        for(var i = 0; i < arguments.length; i++){
            if (!(arguments[i] instanceof Uint8Array)) throw new TypeError('unexpected type, use Uint8Array');
        }
    }
    function cleanup(arr) {
        for(var i = 0; i < arr.length; i++)arr[i] = 0;
    }
    nacl.randomBytes = function(n) {
        var b = new Uint8Array(n);
        randombytes(b, n);
        return b;
    };
    nacl.secretbox = function(msg, nonce, key) {
        checkArrayTypes(msg, nonce, key);
        checkLengths(key, nonce);
        var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);
        var c = new Uint8Array(m.length);
        for(var i = 0; i < msg.length; i++)m[i + crypto_secretbox_ZEROBYTES] = msg[i];
        crypto_secretbox(c, m, m.length, nonce, key);
        return c.subarray(crypto_secretbox_BOXZEROBYTES);
    };
    nacl.secretbox.open = function(box, nonce, key) {
        checkArrayTypes(box, nonce, key);
        checkLengths(key, nonce);
        var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);
        var m = new Uint8Array(c.length);
        for(var i = 0; i < box.length; i++)c[i + crypto_secretbox_BOXZEROBYTES] = box[i];
        if (c.length < 32) return null;
        if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;
        return m.subarray(crypto_secretbox_ZEROBYTES);
    };
    nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;
    nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;
    nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;
    nacl.scalarMult = function(n, p) {
        checkArrayTypes(n, p);
        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
        if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');
        var q = new Uint8Array(crypto_scalarmult_BYTES);
        crypto_scalarmult(q, n, p);
        return q;
    };
    nacl.scalarMult.base = function(n) {
        checkArrayTypes(n);
        if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');
        var q = new Uint8Array(crypto_scalarmult_BYTES);
        crypto_scalarmult_base(q, n);
        return q;
    };
    nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;
    nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;
    nacl.box = function(msg, nonce, publicKey, secretKey) {
        var k = nacl.box.before(publicKey, secretKey);
        return nacl.secretbox(msg, nonce, k);
    };
    nacl.box.before = function(publicKey, secretKey) {
        checkArrayTypes(publicKey, secretKey);
        checkBoxLengths(publicKey, secretKey);
        var k = new Uint8Array(crypto_box_BEFORENMBYTES);
        crypto_box_beforenm(k, publicKey, secretKey);
        return k;
    };
    nacl.box.after = nacl.secretbox;
    nacl.box.open = function(msg, nonce, publicKey, secretKey) {
        var k = nacl.box.before(publicKey, secretKey);
        return nacl.secretbox.open(msg, nonce, k);
    };
    nacl.box.open.after = nacl.secretbox.open;
    nacl.box.keyPair = function() {
        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
        var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);
        crypto_box_keypair(pk, sk);
        return {
            publicKey: pk,
            secretKey: sk
        };
    };
    nacl.box.keyPair.fromSecretKey = function(secretKey) {
        checkArrayTypes(secretKey);
        if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');
        var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);
        crypto_scalarmult_base(pk, secretKey);
        return {
            publicKey: pk,
            secretKey: new Uint8Array(secretKey)
        };
    };
    nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;
    nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;
    nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;
    nacl.box.nonceLength = crypto_box_NONCEBYTES;
    nacl.box.overheadLength = nacl.secretbox.overheadLength;
    nacl.sign = function(msg, secretKey) {
        checkArrayTypes(msg, secretKey);
        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');
        var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);
        crypto_sign(signedMsg, msg, msg.length, secretKey);
        return signedMsg;
    };
    nacl.sign.open = function(signedMsg, publicKey) {
        checkArrayTypes(signedMsg, publicKey);
        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');
        var tmp = new Uint8Array(signedMsg.length);
        var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);
        if (mlen < 0) return null;
        var m = new Uint8Array(mlen);
        for(var i = 0; i < m.length; i++)m[i] = tmp[i];
        return m;
    };
    nacl.sign.detached = function(msg, secretKey) {
        var signedMsg = nacl.sign(msg, secretKey);
        var sig = new Uint8Array(crypto_sign_BYTES);
        for(var i = 0; i < sig.length; i++)sig[i] = signedMsg[i];
        return sig;
    };
    nacl.sign.detached.verify = function(msg, sig, publicKey) {
        checkArrayTypes(msg, sig, publicKey);
        if (sig.length !== crypto_sign_BYTES) throw new Error('bad signature size');
        if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');
        var sm = new Uint8Array(crypto_sign_BYTES + msg.length);
        var m = new Uint8Array(crypto_sign_BYTES + msg.length);
        var i;
        for(i = 0; i < crypto_sign_BYTES; i++)sm[i] = sig[i];
        for(i = 0; i < msg.length; i++)sm[i + crypto_sign_BYTES] = msg[i];
        return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;
    };
    nacl.sign.keyPair = function() {
        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
        crypto_sign_keypair(pk, sk);
        return {
            publicKey: pk,
            secretKey: sk
        };
    };
    nacl.sign.keyPair.fromSecretKey = function(secretKey) {
        checkArrayTypes(secretKey);
        if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');
        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
        for(var i = 0; i < pk.length; i++)pk[i] = secretKey[32 + i];
        return {
            publicKey: pk,
            secretKey: new Uint8Array(secretKey)
        };
    };
    nacl.sign.keyPair.fromSeed = function(seed) {
        checkArrayTypes(seed);
        if (seed.length !== crypto_sign_SEEDBYTES) throw new Error('bad seed size');
        var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);
        var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);
        for(var i = 0; i < 32; i++)sk[i] = seed[i];
        crypto_sign_keypair(pk, sk, true);
        return {
            publicKey: pk,
            secretKey: sk
        };
    };
    nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;
    nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;
    nacl.sign.seedLength = crypto_sign_SEEDBYTES;
    nacl.sign.signatureLength = crypto_sign_BYTES;
    nacl.hash = function(msg) {
        checkArrayTypes(msg);
        var h = new Uint8Array(crypto_hash_BYTES);
        crypto_hash(h, msg, msg.length);
        return h;
    };
    nacl.hash.hashLength = crypto_hash_BYTES;
    nacl.verify = function(x, y) {
        checkArrayTypes(x, y);
        // Zero length arguments are considered not equal.
        if (x.length === 0 || y.length === 0) return false;
        if (x.length !== y.length) return false;
        return vn(x, 0, y, 0, x.length) === 0 ? true : false;
    };
    nacl.setPRNG = function(fn) {
        randombytes = fn;
    };
    (function() {
        // Initialize PRNG if environment provides CSPRNG.
        // If not, methods calling randombytes will throw.
        var crypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto : null;
        if (crypto && crypto.getRandomValues) {
            // Browsers.
            var QUOTA = 65536;
            nacl.setPRNG(function(x, n) {
                var i, v = new Uint8Array(n);
                for(i = 0; i < n; i += QUOTA)crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));
                for(i = 0; i < n; i++)x[i] = v[i];
                cleanup(v);
            });
        } else if ("function" !== 'undefined') {
            // Node.js.
            crypto = (parcelRequire("iMEq6"));
            if (crypto && crypto.randomBytes) nacl.setPRNG(function(x, n) {
                var i, v = crypto.randomBytes(n);
                for(i = 0; i < n; i++)x[i] = v[i];
                cleanup(v);
            });
        }
    })();
})("object" !== 'undefined' && module.exports ? module.exports : self.nacl = self.nacl || {
});

});
parcelRequire.register("iMEq6", function(module, exports) {
"use strict";

});


parcelRequire.register("BYdDX", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});

var $6CyfS = parcelRequire("6CyfS");
Object.defineProperty(module.exports, "base_encode", {
    enumerable: true,
    get: function() {
        return $6CyfS.baseEncode;
    }
});
Object.defineProperty(module.exports, "base_decode", {
    enumerable: true,
    get: function() {
        return $6CyfS.baseDecode;
    }
});
Object.defineProperty(module.exports, "serialize", {
    enumerable: true,
    get: function() {
        return $6CyfS.serialize;
    }
});
Object.defineProperty(module.exports, "deserialize", {
    enumerable: true,
    get: function() {
        return $6CyfS.deserialize;
    }
});
Object.defineProperty(module.exports, "BorshError", {
    enumerable: true,
    get: function() {
        return $6CyfS.BorshError;
    }
});
Object.defineProperty(module.exports, "BinaryWriter", {
    enumerable: true,
    get: function() {
        return $6CyfS.BinaryWriter;
    }
});
Object.defineProperty(module.exports, "BinaryReader", {
    enumerable: true,
    get: function() {
        return $6CyfS.BinaryReader;
    }
});

});
parcelRequire.register("6CyfS", function(module, exports) {

var $4d20dd03263e7bbd$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
"use strict";
var $4d20dd03263e7bbd$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var $4d20dd03263e7bbd$var$__setModuleDefault = module.exports && module.exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var $4d20dd03263e7bbd$var$__decorate = module.exports && module.exports.__decorate || function(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var $4d20dd03263e7bbd$var$__importStar = module.exports && module.exports.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.hasOwnProperty.call(mod, k)) $4d20dd03263e7bbd$var$__createBinding(result, mod, k);
    $4d20dd03263e7bbd$var$__setModuleDefault(result, mod);
    return result;
};
var $4d20dd03263e7bbd$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.deserializeUnchecked = module.exports.deserialize = module.exports.serialize = module.exports.BinaryReader = module.exports.BinaryWriter = module.exports.BorshError = module.exports.baseDecode = module.exports.baseEncode = void 0;

const $4d20dd03263e7bbd$var$bn_js_1 = $4d20dd03263e7bbd$var$__importDefault((parcelRequire("dezpI")));

const $4d20dd03263e7bbd$var$bs58_1 = $4d20dd03263e7bbd$var$__importDefault((parcelRequire("7oXTu")));

// TODO: Make sure this polyfill not included when not required
const $4d20dd03263e7bbd$var$encoding = $4d20dd03263e7bbd$var$__importStar((parcelRequire("4trgL")));
const $4d20dd03263e7bbd$var$TextDecoder = typeof $parcel$global.TextDecoder !== 'function' ? $4d20dd03263e7bbd$var$encoding.TextDecoder : $parcel$global.TextDecoder;
const $4d20dd03263e7bbd$var$textDecoder = new $4d20dd03263e7bbd$var$TextDecoder('utf-8', {
    fatal: true
});
function $4d20dd03263e7bbd$var$baseEncode(value) {
    if (typeof value === 'string') value = $4d20dd03263e7bbd$require$Buffer.from(value, 'utf8');
    return $4d20dd03263e7bbd$var$bs58_1.default.encode($4d20dd03263e7bbd$require$Buffer.from(value));
}
module.exports.baseEncode = $4d20dd03263e7bbd$var$baseEncode;
function $4d20dd03263e7bbd$var$baseDecode(value) {
    return $4d20dd03263e7bbd$require$Buffer.from($4d20dd03263e7bbd$var$bs58_1.default.decode(value));
}
module.exports.baseDecode = $4d20dd03263e7bbd$var$baseDecode;
const $4d20dd03263e7bbd$var$INITIAL_LENGTH = 1024;
class $4d20dd03263e7bbd$var$BorshError extends Error {
    constructor(message){
        super(message);
        this.fieldPath = [];
        this.originalMessage = message;
    }
    addToFieldPath(fieldName) {
        this.fieldPath.splice(0, 0, fieldName);
        // NOTE: Modifying message directly as jest doesn't use .toString()
        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');
    }
}
module.exports.BorshError = $4d20dd03263e7bbd$var$BorshError;
/// Binary encoder.
class $4d20dd03263e7bbd$var$BinaryWriter {
    constructor(){
        this.buf = $4d20dd03263e7bbd$require$Buffer.alloc($4d20dd03263e7bbd$var$INITIAL_LENGTH);
        this.length = 0;
    }
    maybeResize() {
        if (this.buf.length < 16 + this.length) this.buf = $4d20dd03263e7bbd$require$Buffer.concat([
            this.buf,
            $4d20dd03263e7bbd$require$Buffer.alloc($4d20dd03263e7bbd$var$INITIAL_LENGTH)
        ]);
    }
    writeU8(value) {
        this.maybeResize();
        this.buf.writeUInt8(value, this.length);
        this.length += 1;
    }
    writeU16(value) {
        this.maybeResize();
        this.buf.writeUInt16LE(value, this.length);
        this.length += 2;
    }
    writeU32(value) {
        this.maybeResize();
        this.buf.writeUInt32LE(value, this.length);
        this.length += 4;
    }
    writeU64(value) {
        this.maybeResize();
        this.writeBuffer($4d20dd03263e7bbd$require$Buffer.from(new $4d20dd03263e7bbd$var$bn_js_1.default(value).toArray('le', 8)));
    }
    writeU128(value) {
        this.maybeResize();
        this.writeBuffer($4d20dd03263e7bbd$require$Buffer.from(new $4d20dd03263e7bbd$var$bn_js_1.default(value).toArray('le', 16)));
    }
    writeU256(value) {
        this.maybeResize();
        this.writeBuffer($4d20dd03263e7bbd$require$Buffer.from(new $4d20dd03263e7bbd$var$bn_js_1.default(value).toArray('le', 32)));
    }
    writeU512(value) {
        this.maybeResize();
        this.writeBuffer($4d20dd03263e7bbd$require$Buffer.from(new $4d20dd03263e7bbd$var$bn_js_1.default(value).toArray('le', 64)));
    }
    writeBuffer(buffer) {
        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser
        this.buf = $4d20dd03263e7bbd$require$Buffer.concat([
            $4d20dd03263e7bbd$require$Buffer.from(this.buf.subarray(0, this.length)),
            buffer,
            $4d20dd03263e7bbd$require$Buffer.alloc($4d20dd03263e7bbd$var$INITIAL_LENGTH)
        ]);
        this.length += buffer.length;
    }
    writeString(str) {
        this.maybeResize();
        const b = $4d20dd03263e7bbd$require$Buffer.from(str, 'utf8');
        this.writeU32(b.length);
        this.writeBuffer(b);
    }
    writeFixedArray(array) {
        this.writeBuffer($4d20dd03263e7bbd$require$Buffer.from(array));
    }
    writeArray(array, fn) {
        this.maybeResize();
        this.writeU32(array.length);
        for (const elem of array){
            this.maybeResize();
            fn(elem);
        }
    }
    toArray() {
        return this.buf.subarray(0, this.length);
    }
}
module.exports.BinaryWriter = $4d20dd03263e7bbd$var$BinaryWriter;
function $4d20dd03263e7bbd$var$handlingRangeError(target, propertyKey, propertyDescriptor) {
    const originalMethod = propertyDescriptor.value;
    propertyDescriptor.value = function(...args) {
        try {
            return originalMethod.apply(this, args);
        } catch (e) {
            if (e instanceof RangeError) {
                const code = e.code;
                if ([
                    'ERR_BUFFER_OUT_OF_BOUNDS',
                    'ERR_OUT_OF_RANGE'
                ].indexOf(code) >= 0) throw new $4d20dd03263e7bbd$var$BorshError('Reached the end of buffer when deserializing');
            }
            throw e;
        }
    };
}
class $4d20dd03263e7bbd$var$BinaryReader {
    constructor(buf){
        this.buf = buf;
        this.offset = 0;
    }
    readU8() {
        const value = this.buf.readUInt8(this.offset);
        this.offset += 1;
        return value;
    }
    readU16() {
        const value = this.buf.readUInt16LE(this.offset);
        this.offset += 2;
        return value;
    }
    readU32() {
        const value = this.buf.readUInt32LE(this.offset);
        this.offset += 4;
        return value;
    }
    readU64() {
        const buf1 = this.readBuffer(8);
        return new $4d20dd03263e7bbd$var$bn_js_1.default(buf1, 'le');
    }
    readU128() {
        const buf1 = this.readBuffer(16);
        return new $4d20dd03263e7bbd$var$bn_js_1.default(buf1, 'le');
    }
    readU256() {
        const buf1 = this.readBuffer(32);
        return new $4d20dd03263e7bbd$var$bn_js_1.default(buf1, 'le');
    }
    readU512() {
        const buf1 = this.readBuffer(64);
        return new $4d20dd03263e7bbd$var$bn_js_1.default(buf1, 'le');
    }
    readBuffer(len) {
        if (this.offset + len > this.buf.length) throw new $4d20dd03263e7bbd$var$BorshError(`Expected buffer length ${len} isn't within bounds`);
        const result = this.buf.slice(this.offset, this.offset + len);
        this.offset += len;
        return result;
    }
    readString() {
        const len = this.readU32();
        const buf1 = this.readBuffer(len);
        try {
            // NOTE: Using TextDecoder to fail on invalid UTF-8
            return $4d20dd03263e7bbd$var$textDecoder.decode(buf1);
        } catch (e) {
            throw new $4d20dd03263e7bbd$var$BorshError(`Error decoding UTF-8 string: ${e}`);
        }
    }
    readFixedArray(len) {
        return new Uint8Array(this.readBuffer(len));
    }
    readArray(fn) {
        const len = this.readU32();
        const result = Array();
        for(let i = 0; i < len; ++i)result.push(fn());
        return result;
    }
}
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readU8", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readU16", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readU32", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readU64", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readU128", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readU256", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readU512", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readString", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readFixedArray", null);
$4d20dd03263e7bbd$var$__decorate([
    $4d20dd03263e7bbd$var$handlingRangeError
], $4d20dd03263e7bbd$var$BinaryReader.prototype, "readArray", null);
module.exports.BinaryReader = $4d20dd03263e7bbd$var$BinaryReader;
function $4d20dd03263e7bbd$var$capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
function $4d20dd03263e7bbd$var$serializeField(schema, fieldName, value, fieldType, writer) {
    try {
        // TODO: Handle missing values properly (make sure they never result in just skipped write)
        if (typeof fieldType === 'string') writer[`write${$4d20dd03263e7bbd$var$capitalizeFirstLetter(fieldType)}`](value);
        else if (fieldType instanceof Array) {
            if (typeof fieldType[0] === 'number') {
                if (value.length !== fieldType[0]) throw new $4d20dd03263e7bbd$var$BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);
                writer.writeFixedArray(value);
            } else writer.writeArray(value, (item)=>{
                $4d20dd03263e7bbd$var$serializeField(schema, fieldName, item, fieldType[0], writer);
            });
        } else if (fieldType.kind !== undefined) switch(fieldType.kind){
            case 'option':
                if (value === null || value === undefined) writer.writeU8(0);
                else {
                    writer.writeU8(1);
                    $4d20dd03263e7bbd$var$serializeField(schema, fieldName, value, fieldType.type, writer);
                }
                break;
            default:
                throw new $4d20dd03263e7bbd$var$BorshError(`FieldType ${fieldType} unrecognized`);
        }
        else $4d20dd03263e7bbd$var$serializeStruct(schema, value, writer);
    } catch (error) {
        if (error instanceof $4d20dd03263e7bbd$var$BorshError) error.addToFieldPath(fieldName);
        throw error;
    }
}
function $4d20dd03263e7bbd$var$serializeStruct(schema, obj, writer) {
    const structSchema = schema.get(obj.constructor);
    if (!structSchema) throw new $4d20dd03263e7bbd$var$BorshError(`Class ${obj.constructor.name} is missing in schema`);
    if (structSchema.kind === 'struct') structSchema.fields.map(([fieldName, fieldType])=>{
        $4d20dd03263e7bbd$var$serializeField(schema, fieldName, obj[fieldName], fieldType, writer);
    });
    else if (structSchema.kind === 'enum') {
        const name = obj[structSchema.field];
        for(let idx = 0; idx < structSchema.values.length; ++idx){
            const [fieldName, fieldType] = structSchema.values[idx];
            if (fieldName === name) {
                writer.writeU8(idx);
                $4d20dd03263e7bbd$var$serializeField(schema, fieldName, obj[fieldName], fieldType, writer);
                break;
            }
        }
    } else throw new $4d20dd03263e7bbd$var$BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);
}
/// Serialize given object using schema of the form:
/// { class_name -> [ [field_name, field_type], .. ], .. }
function $4d20dd03263e7bbd$var$serialize(schema, obj) {
    const writer = new $4d20dd03263e7bbd$var$BinaryWriter();
    $4d20dd03263e7bbd$var$serializeStruct(schema, obj, writer);
    return writer.toArray();
}
module.exports.serialize = $4d20dd03263e7bbd$var$serialize;
function $4d20dd03263e7bbd$var$deserializeField(schema, fieldName, fieldType, reader) {
    try {
        if (typeof fieldType === 'string') return reader[`read${$4d20dd03263e7bbd$var$capitalizeFirstLetter(fieldType)}`]();
        if (fieldType instanceof Array) {
            if (typeof fieldType[0] === 'number') return reader.readFixedArray(fieldType[0]);
            return reader.readArray(()=>$4d20dd03263e7bbd$var$deserializeField(schema, fieldName, fieldType[0], reader)
            );
        }
        if (fieldType.kind === 'option') {
            const option = reader.readU8();
            if (option) return $4d20dd03263e7bbd$var$deserializeField(schema, fieldName, fieldType.type, reader);
            return undefined;
        }
        return $4d20dd03263e7bbd$var$deserializeStruct(schema, fieldType, reader);
    } catch (error) {
        if (error instanceof $4d20dd03263e7bbd$var$BorshError) error.addToFieldPath(fieldName);
        throw error;
    }
}
function $4d20dd03263e7bbd$var$deserializeStruct(schema, classType, reader) {
    const structSchema = schema.get(classType);
    if (!structSchema) throw new $4d20dd03263e7bbd$var$BorshError(`Class ${classType.name} is missing in schema`);
    if (structSchema.kind === 'struct') {
        const result = {
        };
        for (const [fieldName, fieldType] of schema.get(classType).fields)result[fieldName] = $4d20dd03263e7bbd$var$deserializeField(schema, fieldName, fieldType, reader);
        return new classType(result);
    }
    if (structSchema.kind === 'enum') {
        const idx = reader.readU8();
        if (idx >= structSchema.values.length) throw new $4d20dd03263e7bbd$var$BorshError(`Enum index: ${idx} is out of range`);
        const [fieldName, fieldType] = structSchema.values[idx];
        const fieldValue = $4d20dd03263e7bbd$var$deserializeField(schema, fieldName, fieldType, reader);
        return new classType({
            [fieldName]: fieldValue
        });
    }
    throw new $4d20dd03263e7bbd$var$BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);
}
/// Deserializes object from bytes using schema.
function $4d20dd03263e7bbd$var$deserialize(schema, classType, buffer) {
    const reader = new $4d20dd03263e7bbd$var$BinaryReader(buffer);
    const result = $4d20dd03263e7bbd$var$deserializeStruct(schema, classType, reader);
    if (reader.offset < buffer.length) throw new $4d20dd03263e7bbd$var$BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);
    return result;
}
module.exports.deserialize = $4d20dd03263e7bbd$var$deserialize;
/// Deserializes object from bytes using schema, without checking the length read
function $4d20dd03263e7bbd$var$deserializeUnchecked(schema, classType, buffer) {
    const reader = new $4d20dd03263e7bbd$var$BinaryReader(buffer);
    return $4d20dd03263e7bbd$var$deserializeStruct(schema, classType, reader);
}
module.exports.deserializeUnchecked = $4d20dd03263e7bbd$var$deserializeUnchecked;

});
var $2c3d64c621547c03$exports = {};

$parcel$export($2c3d64c621547c03$exports, "SlowBuffer", () => $2c3d64c621547c03$export$9f582d359d137057, (v) => $2c3d64c621547c03$export$9f582d359d137057 = v);
$parcel$export($2c3d64c621547c03$exports, "Buffer", () => $2c3d64c621547c03$export$74954538e33d2f49, (v) => $2c3d64c621547c03$export$74954538e33d2f49 = v);
$parcel$export($2c3d64c621547c03$exports, "kMaxLength", () => $2c3d64c621547c03$export$1e08381891026987, (v) => $2c3d64c621547c03$export$1e08381891026987 = v);
$parcel$export($2c3d64c621547c03$exports, "INSPECT_MAX_BYTES", () => $2c3d64c621547c03$export$2dd1e73548b4e655, (v) => $2c3d64c621547c03$export$2dd1e73548b4e655 = v);
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ /* eslint-disable no-proto */ var $2c3d64c621547c03$export$74954538e33d2f49;
var $2c3d64c621547c03$export$2dd1e73548b4e655;
var $2c3d64c621547c03$export$1e08381891026987;
var $2c3d64c621547c03$export$9f582d359d137057;
'use strict';
var $37ab68b404fe6f39$export$68eb038afa20ab6d;
var $37ab68b404fe6f39$export$297b58465abed6df;
var $37ab68b404fe6f39$export$2367b5e7922a95be;
'use strict';
$37ab68b404fe6f39$export$68eb038afa20ab6d = $37ab68b404fe6f39$var$byteLength;
$37ab68b404fe6f39$export$2367b5e7922a95be = $37ab68b404fe6f39$var$toByteArray;
$37ab68b404fe6f39$export$297b58465abed6df = $37ab68b404fe6f39$var$fromByteArray;
var $37ab68b404fe6f39$var$lookup = [];
var $37ab68b404fe6f39$var$revLookup = [];
var $37ab68b404fe6f39$var$Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var $37ab68b404fe6f39$var$code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for(var $37ab68b404fe6f39$var$i = 0, $37ab68b404fe6f39$var$len = $37ab68b404fe6f39$var$code.length; $37ab68b404fe6f39$var$i < $37ab68b404fe6f39$var$len; ++$37ab68b404fe6f39$var$i){
    $37ab68b404fe6f39$var$lookup[$37ab68b404fe6f39$var$i] = $37ab68b404fe6f39$var$code[$37ab68b404fe6f39$var$i];
    $37ab68b404fe6f39$var$revLookup[$37ab68b404fe6f39$var$code.charCodeAt($37ab68b404fe6f39$var$i)] = $37ab68b404fe6f39$var$i;
}
// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
$37ab68b404fe6f39$var$revLookup['-'.charCodeAt(0)] = 62;
$37ab68b404fe6f39$var$revLookup['_'.charCodeAt(0)] = 63;
function $37ab68b404fe6f39$var$getLens(b64) {
    var len = b64.length;
    if (len % 4 > 0) throw new Error('Invalid string. Length must be a multiple of 4');
    // Trim off extra bytes after placeholder bytes are found
    // See: https://github.com/beatgammit/base64-js/issues/42
    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len;
    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
    return [
        validLen,
        placeHoldersLen
    ];
}
// base64 is 4/3 + up to two characters of the original data
function $37ab68b404fe6f39$var$byteLength(b64) {
    var lens = $37ab68b404fe6f39$var$getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function $37ab68b404fe6f39$var$_byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function $37ab68b404fe6f39$var$toByteArray(b64) {
    var tmp;
    var lens = $37ab68b404fe6f39$var$getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new $37ab68b404fe6f39$var$Arr($37ab68b404fe6f39$var$_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    // if there are placeholders, only get up to the last complete 4 chars
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i;
    for(i = 0; i < len; i += 4){
        tmp = $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i)] << 18 | $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i + 1)] << 12 | $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i + 2)] << 6 | $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 255;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
    }
    if (placeHoldersLen === 2) {
        tmp = $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i)] << 2 | $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = tmp & 255;
    }
    if (placeHoldersLen === 1) {
        tmp = $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i)] << 10 | $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i + 1)] << 4 | $37ab68b404fe6f39$var$revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 255;
        arr[curByte++] = tmp & 255;
    }
    return arr;
}
function $37ab68b404fe6f39$var$tripletToBase64(num) {
    return $37ab68b404fe6f39$var$lookup[num >> 18 & 63] + $37ab68b404fe6f39$var$lookup[num >> 12 & 63] + $37ab68b404fe6f39$var$lookup[num >> 6 & 63] + $37ab68b404fe6f39$var$lookup[num & 63];
}
function $37ab68b404fe6f39$var$encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for(var i = start; i < end; i += 3){
        tmp = (uint8[i] << 16 & 16711680) + (uint8[i + 1] << 8 & 65280) + (uint8[i + 2] & 255);
        output.push($37ab68b404fe6f39$var$tripletToBase64(tmp));
    }
    return output.join('');
}
function $37ab68b404fe6f39$var$fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
    ;
    var parts = [];
    var maxChunkLength = 16383 // must be multiple of 3
    ;
    // go through the array every three bytes, we'll deal with trailing stuff later
    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength)parts.push($37ab68b404fe6f39$var$encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
        tmp = uint8[len - 1];
        parts.push($37ab68b404fe6f39$var$lookup[tmp >> 2] + $37ab68b404fe6f39$var$lookup[tmp << 4 & 63] + '==');
    } else if (extraBytes === 2) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push($37ab68b404fe6f39$var$lookup[tmp >> 10] + $37ab68b404fe6f39$var$lookup[tmp >> 4 & 63] + $37ab68b404fe6f39$var$lookup[tmp << 2 & 63] + '=');
    }
    return parts.join('');
}


/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ var $6bd76725c024b5af$export$a9187e77005a4477;
var $6bd76725c024b5af$export$2c262a1484748b93;
$6bd76725c024b5af$export$2c262a1484748b93 = function(buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8);
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8);
    if (e === 0) e = 1 - eBias;
    else if (e === eMax) return m ? NaN : (s ? -1 : 1) * Infinity;
    else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};
$6bd76725c024b5af$export$a9187e77005a4477 = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
    } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) value += rt / c;
        else value += rt * Math.pow(2, 1 - eBias);
        if (value * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
        } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
        }
    }
    for(; mLen >= 8; buffer[offset + i] = m & 255, i += d, m /= 256, mLen -= 8);
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[offset + i] = e & 255, i += d, e /= 256, eLen -= 8);
    buffer[offset + i - d] |= s * 128;
};


var $2c3d64c621547c03$var$customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
 : null;
$2c3d64c621547c03$export$74954538e33d2f49 = $2c3d64c621547c03$var$Buffer;
$2c3d64c621547c03$export$9f582d359d137057 = $2c3d64c621547c03$var$SlowBuffer;
$2c3d64c621547c03$export$2dd1e73548b4e655 = 50;
var $2c3d64c621547c03$var$K_MAX_LENGTH = 2147483647;
$2c3d64c621547c03$export$1e08381891026987 = $2c3d64c621547c03$var$K_MAX_LENGTH;
/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */ $2c3d64c621547c03$var$Buffer.TYPED_ARRAY_SUPPORT = $2c3d64c621547c03$var$typedArraySupport();
if (!$2c3d64c621547c03$var$Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
function $2c3d64c621547c03$var$typedArraySupport() {
    // Can typed array instances can be augmented?
    try {
        var arr = new Uint8Array(1);
        var proto = {
            foo: function() {
                return 42;
            }
        };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
    } catch (e) {
        return false;
    }
}
Object.defineProperty($2c3d64c621547c03$var$Buffer.prototype, 'parent', {
    enumerable: true,
    get: function() {
        if (!$2c3d64c621547c03$var$Buffer.isBuffer(this)) return undefined;
        return this.buffer;
    }
});
Object.defineProperty($2c3d64c621547c03$var$Buffer.prototype, 'offset', {
    enumerable: true,
    get: function() {
        if (!$2c3d64c621547c03$var$Buffer.isBuffer(this)) return undefined;
        return this.byteOffset;
    }
});
function $2c3d64c621547c03$var$createBuffer(length) {
    if (length > $2c3d64c621547c03$var$K_MAX_LENGTH) throw new RangeError('The value "' + length + '" is invalid for option "size"');
    // Return an augmented `Uint8Array` instance
    var buf = new Uint8Array(length);
    Object.setPrototypeOf(buf, $2c3d64c621547c03$var$Buffer.prototype);
    return buf;
}
/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */ function $2c3d64c621547c03$var$Buffer(arg, encodingOrOffset, length) {
    // Common case.
    if (typeof arg === 'number') {
        if (typeof encodingOrOffset === 'string') throw new TypeError('The "string" argument must be of type string. Received type number');
        return $2c3d64c621547c03$var$allocUnsafe(arg);
    }
    return $2c3d64c621547c03$var$from(arg, encodingOrOffset, length);
}
$2c3d64c621547c03$var$Buffer.poolSize = 8192 // not used by this implementation
;
function $2c3d64c621547c03$var$from(value, encodingOrOffset, length) {
    if (typeof value === 'string') return $2c3d64c621547c03$var$fromString(value, encodingOrOffset);
    if (ArrayBuffer.isView(value)) return $2c3d64c621547c03$var$fromArrayView(value);
    if (value == null) throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
    if ($2c3d64c621547c03$var$isInstance(value, ArrayBuffer) || value && $2c3d64c621547c03$var$isInstance(value.buffer, ArrayBuffer)) return $2c3d64c621547c03$var$fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof SharedArrayBuffer !== 'undefined' && ($2c3d64c621547c03$var$isInstance(value, SharedArrayBuffer) || value && $2c3d64c621547c03$var$isInstance(value.buffer, SharedArrayBuffer))) return $2c3d64c621547c03$var$fromArrayBuffer(value, encodingOrOffset, length);
    if (typeof value === 'number') throw new TypeError('The "value" argument must not be of type number. Received type number');
    var valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value) return $2c3d64c621547c03$var$Buffer.from(valueOf, encodingOrOffset, length);
    var b = $2c3d64c621547c03$var$fromObject(value);
    if (b) return b;
    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') return $2c3d64c621547c03$var$Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof value);
}
/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/ $2c3d64c621547c03$var$Buffer.from = function(value, encodingOrOffset, length) {
    return $2c3d64c621547c03$var$from(value, encodingOrOffset, length);
};
// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf($2c3d64c621547c03$var$Buffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf($2c3d64c621547c03$var$Buffer, Uint8Array);
function $2c3d64c621547c03$var$assertSize(size) {
    if (typeof size !== 'number') throw new TypeError('"size" argument must be of type number');
    else if (size < 0) throw new RangeError('The value "' + size + '" is invalid for option "size"');
}
function $2c3d64c621547c03$var$alloc(size, fill, encoding) {
    $2c3d64c621547c03$var$assertSize(size);
    if (size <= 0) return $2c3d64c621547c03$var$createBuffer(size);
    if (fill !== undefined) // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpreted as a start offset.
    return typeof encoding === 'string' ? $2c3d64c621547c03$var$createBuffer(size).fill(fill, encoding) : $2c3d64c621547c03$var$createBuffer(size).fill(fill);
    return $2c3d64c621547c03$var$createBuffer(size);
}
/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/ $2c3d64c621547c03$var$Buffer.alloc = function(size, fill, encoding) {
    return $2c3d64c621547c03$var$alloc(size, fill, encoding);
};
function $2c3d64c621547c03$var$allocUnsafe(size) {
    $2c3d64c621547c03$var$assertSize(size);
    return $2c3d64c621547c03$var$createBuffer(size < 0 ? 0 : $2c3d64c621547c03$var$checked(size) | 0);
}
/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */ $2c3d64c621547c03$var$Buffer.allocUnsafe = function(size) {
    return $2c3d64c621547c03$var$allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */ $2c3d64c621547c03$var$Buffer.allocUnsafeSlow = function(size) {
    return $2c3d64c621547c03$var$allocUnsafe(size);
};
function $2c3d64c621547c03$var$fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8';
    if (!$2c3d64c621547c03$var$Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);
    var length = $2c3d64c621547c03$var$byteLength(string, encoding) | 0;
    var buf = $2c3d64c621547c03$var$createBuffer(length);
    var actual = buf.write(string, encoding);
    if (actual !== length) // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual);
    return buf;
}
function $2c3d64c621547c03$var$fromArrayLike(array) {
    var length = array.length < 0 ? 0 : $2c3d64c621547c03$var$checked(array.length) | 0;
    var buf = $2c3d64c621547c03$var$createBuffer(length);
    for(var i = 0; i < length; i += 1)buf[i] = array[i] & 255;
    return buf;
}
function $2c3d64c621547c03$var$fromArrayView(arrayView) {
    if ($2c3d64c621547c03$var$isInstance(arrayView, Uint8Array)) {
        var copy = new Uint8Array(arrayView);
        return $2c3d64c621547c03$var$fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
    }
    return $2c3d64c621547c03$var$fromArrayLike(arrayView);
}
function $2c3d64c621547c03$var$fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) throw new RangeError('"offset" is outside of buffer bounds');
    if (array.byteLength < byteOffset + (length || 0)) throw new RangeError('"length" is outside of buffer bounds');
    var buf;
    if (byteOffset === undefined && length === undefined) buf = new Uint8Array(array);
    else if (length === undefined) buf = new Uint8Array(array, byteOffset);
    else buf = new Uint8Array(array, byteOffset, length);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(buf, $2c3d64c621547c03$var$Buffer.prototype);
    return buf;
}
function $2c3d64c621547c03$var$fromObject(obj) {
    if ($2c3d64c621547c03$var$Buffer.isBuffer(obj)) {
        var len = $2c3d64c621547c03$var$checked(obj.length) | 0;
        var buf = $2c3d64c621547c03$var$createBuffer(len);
        if (buf.length === 0) return buf;
        obj.copy(buf, 0, 0, len);
        return buf;
    }
    if (obj.length !== undefined) {
        if (typeof obj.length !== 'number' || $2c3d64c621547c03$var$numberIsNaN(obj.length)) return $2c3d64c621547c03$var$createBuffer(0);
        return $2c3d64c621547c03$var$fromArrayLike(obj);
    }
    if (obj.type === 'Buffer' && Array.isArray(obj.data)) return $2c3d64c621547c03$var$fromArrayLike(obj.data);
}
function $2c3d64c621547c03$var$checked(length) {
    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= $2c3d64c621547c03$var$K_MAX_LENGTH) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + $2c3d64c621547c03$var$K_MAX_LENGTH.toString(16) + ' bytes');
    return length | 0;
}
function $2c3d64c621547c03$var$SlowBuffer(length) {
    if (+length != length) length = 0;
    return $2c3d64c621547c03$var$Buffer.alloc(+length);
}
$2c3d64c621547c03$var$Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== $2c3d64c621547c03$var$Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
    ;
};
$2c3d64c621547c03$var$Buffer.compare = function compare(a, b) {
    if ($2c3d64c621547c03$var$isInstance(a, Uint8Array)) a = $2c3d64c621547c03$var$Buffer.from(a, a.offset, a.byteLength);
    if ($2c3d64c621547c03$var$isInstance(b, Uint8Array)) b = $2c3d64c621547c03$var$Buffer.from(b, b.offset, b.byteLength);
    if (!$2c3d64c621547c03$var$Buffer.isBuffer(a) || !$2c3d64c621547c03$var$Buffer.isBuffer(b)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    if (a === b) return 0;
    var x = a.length;
    var y = b.length;
    for(var i = 0, len = Math.min(x, y); i < len; ++i)if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
$2c3d64c621547c03$var$Buffer.isEncoding = function isEncoding(encoding) {
    switch(String(encoding).toLowerCase()){
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'latin1':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return true;
        default:
            return false;
    }
};
$2c3d64c621547c03$var$Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) throw new TypeError('"list" argument must be an Array of Buffers');
    if (list.length === 0) return $2c3d64c621547c03$var$Buffer.alloc(0);
    var i;
    if (length === undefined) {
        length = 0;
        for(i = 0; i < list.length; ++i)length += list[i].length;
    }
    var buffer = $2c3d64c621547c03$var$Buffer.allocUnsafe(length);
    var pos = 0;
    for(i = 0; i < list.length; ++i){
        var buf = list[i];
        if ($2c3d64c621547c03$var$isInstance(buf, Uint8Array)) {
            if (pos + buf.length > buffer.length) $2c3d64c621547c03$var$Buffer.from(buf).copy(buffer, pos);
            else Uint8Array.prototype.set.call(buffer, buf, pos);
        } else if (!$2c3d64c621547c03$var$Buffer.isBuffer(buf)) throw new TypeError('"list" argument must be an Array of Buffers');
        else buf.copy(buffer, pos);
        pos += buf.length;
    }
    return buffer;
};
function $2c3d64c621547c03$var$byteLength(string, encoding) {
    if ($2c3d64c621547c03$var$Buffer.isBuffer(string)) return string.length;
    if (ArrayBuffer.isView(string) || $2c3d64c621547c03$var$isInstance(string, ArrayBuffer)) return string.byteLength;
    if (typeof string !== 'string') throw new TypeError("The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. Received type " + typeof string);
    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    // Use a for loop to avoid recursion
    var loweredCase = false;
    for(;;)switch(encoding){
        case 'ascii':
        case 'latin1':
        case 'binary':
            return len;
        case 'utf8':
        case 'utf-8':
            return $2c3d64c621547c03$var$utf8ToBytes(string).length;
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return len * 2;
        case 'hex':
            return len >>> 1;
        case 'base64':
            return $2c3d64c621547c03$var$base64ToBytes(string).length;
        default:
            if (loweredCase) return mustMatch ? -1 : $2c3d64c621547c03$var$utf8ToBytes(string).length // assume utf8
            ;
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
    }
}
$2c3d64c621547c03$var$Buffer.byteLength = $2c3d64c621547c03$var$byteLength;
function $2c3d64c621547c03$var$slowToString(encoding, start, end) {
    var loweredCase = false;
    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.
    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) start = 0;
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) return '';
    if (end === undefined || end > this.length) end = this.length;
    if (end <= 0) return '';
    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;
    if (end <= start) return '';
    if (!encoding) encoding = 'utf8';
    while(true)switch(encoding){
        case 'hex':
            return $2c3d64c621547c03$var$hexSlice(this, start, end);
        case 'utf8':
        case 'utf-8':
            return $2c3d64c621547c03$var$utf8Slice(this, start, end);
        case 'ascii':
            return $2c3d64c621547c03$var$asciiSlice(this, start, end);
        case 'latin1':
        case 'binary':
            return $2c3d64c621547c03$var$latin1Slice(this, start, end);
        case 'base64':
            return $2c3d64c621547c03$var$base64Slice(this, start, end);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return $2c3d64c621547c03$var$utf16leSlice(this, start, end);
        default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = (encoding + '').toLowerCase();
            loweredCase = true;
    }
}
// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
$2c3d64c621547c03$var$Buffer.prototype._isBuffer = true;
function $2c3d64c621547c03$var$swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
}
$2c3d64c621547c03$var$Buffer.prototype.swap16 = function swap16() {
    var len = this.length;
    if (len % 2 !== 0) throw new RangeError('Buffer size must be a multiple of 16-bits');
    for(var i = 0; i < len; i += 2)$2c3d64c621547c03$var$swap(this, i, i + 1);
    return this;
};
$2c3d64c621547c03$var$Buffer.prototype.swap32 = function swap32() {
    var len = this.length;
    if (len % 4 !== 0) throw new RangeError('Buffer size must be a multiple of 32-bits');
    for(var i = 0; i < len; i += 4){
        $2c3d64c621547c03$var$swap(this, i, i + 3);
        $2c3d64c621547c03$var$swap(this, i + 1, i + 2);
    }
    return this;
};
$2c3d64c621547c03$var$Buffer.prototype.swap64 = function swap64() {
    var len = this.length;
    if (len % 8 !== 0) throw new RangeError('Buffer size must be a multiple of 64-bits');
    for(var i = 0; i < len; i += 8){
        $2c3d64c621547c03$var$swap(this, i, i + 7);
        $2c3d64c621547c03$var$swap(this, i + 1, i + 6);
        $2c3d64c621547c03$var$swap(this, i + 2, i + 5);
        $2c3d64c621547c03$var$swap(this, i + 3, i + 4);
    }
    return this;
};
$2c3d64c621547c03$var$Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return $2c3d64c621547c03$var$utf8Slice(this, 0, length);
    return $2c3d64c621547c03$var$slowToString.apply(this, arguments);
};
$2c3d64c621547c03$var$Buffer.prototype.toLocaleString = $2c3d64c621547c03$var$Buffer.prototype.toString;
$2c3d64c621547c03$var$Buffer.prototype.equals = function equals(b) {
    if (!$2c3d64c621547c03$var$Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return $2c3d64c621547c03$var$Buffer.compare(this, b) === 0;
};
$2c3d64c621547c03$var$Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = $2c3d64c621547c03$export$2dd1e73548b4e655;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
};
if ($2c3d64c621547c03$var$customInspectSymbol) $2c3d64c621547c03$var$Buffer.prototype[$2c3d64c621547c03$var$customInspectSymbol] = $2c3d64c621547c03$var$Buffer.prototype.inspect;
$2c3d64c621547c03$var$Buffer.prototype.compare = function compare1(target, start, end, thisStart, thisEnd) {
    if ($2c3d64c621547c03$var$isInstance(target, Uint8Array)) target = $2c3d64c621547c03$var$Buffer.from(target, target.offset, target.byteLength);
    if (!$2c3d64c621547c03$var$Buffer.isBuffer(target)) throw new TypeError("The \"target\" argument must be one of type Buffer or Uint8Array. Received type " + typeof target);
    if (start === undefined) start = 0;
    if (end === undefined) end = target ? target.length : 0;
    if (thisStart === undefined) thisStart = 0;
    if (thisEnd === undefined) thisEnd = this.length;
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) throw new RangeError('out of range index');
    if (thisStart >= thisEnd && start >= end) return 0;
    if (thisStart >= thisEnd) return -1;
    if (start >= end) return 1;
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);
    for(var i = 0; i < len; ++i)if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break;
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function $2c3d64c621547c03$var$bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1;
    // Normalize byteOffset
    if (typeof byteOffset === 'string') {
        encoding = byteOffset;
        byteOffset = 0;
    } else if (byteOffset > 2147483647) byteOffset = 2147483647;
    else if (byteOffset < -2147483648) byteOffset = -2147483648;
    byteOffset = +byteOffset // Coerce to Number.
    ;
    if ($2c3d64c621547c03$var$numberIsNaN(byteOffset)) // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : buffer.length - 1;
    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
    }
    // Normalize val
    if (typeof val === 'string') val = $2c3d64c621547c03$var$Buffer.from(val, encoding);
    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if ($2c3d64c621547c03$var$Buffer.isBuffer(val)) {
        // Special case: looking for empty string/buffer always fails
        if (val.length === 0) return -1;
        return $2c3d64c621547c03$var$arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
        val = val & 255 // Search for a byte value [0-255]
        ;
        if (typeof Uint8Array.prototype.indexOf === 'function') {
            if (dir) return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
            else return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
        }
        return $2c3d64c621547c03$var$arrayIndexOf(buffer, [
            val
        ], byteOffset, encoding, dir);
    }
    throw new TypeError('val must be string, number or Buffer');
}
function $2c3d64c621547c03$var$arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;
    if (encoding !== undefined) {
        encoding = String(encoding).toLowerCase();
        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
            if (arr.length < 2 || val.length < 2) return -1;
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
        }
    }
    function read(buf, i) {
        if (indexSize === 1) return buf[i];
        else return buf.readUInt16BE(i * indexSize);
    }
    var i;
    if (dir) {
        var foundIndex = -1;
        for(i = byteOffset; i < arrLength; i++)if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
            if (foundIndex === -1) foundIndex = i;
            if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
        } else {
            if (foundIndex !== -1) i -= i - foundIndex;
            foundIndex = -1;
        }
    } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for(i = byteOffset; i >= 0; i--){
            var found = true;
            for(var j = 0; j < valLength; j++)if (read(arr, i + j) !== read(val, j)) {
                found = false;
                break;
            }
            if (found) return i;
        }
    }
    return -1;
}
$2c3d64c621547c03$var$Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
};
$2c3d64c621547c03$var$Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return $2c3d64c621547c03$var$bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};
$2c3d64c621547c03$var$Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return $2c3d64c621547c03$var$bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};
function $2c3d64c621547c03$var$hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) length = remaining;
    else {
        length = Number(length);
        if (length > remaining) length = remaining;
    }
    var strLen = string.length;
    if (length > strLen / 2) length = strLen / 2;
    for(var i = 0; i < length; ++i){
        var parsed = parseInt(string.substr(i * 2, 2), 16);
        if ($2c3d64c621547c03$var$numberIsNaN(parsed)) return i;
        buf[offset + i] = parsed;
    }
    return i;
}
function $2c3d64c621547c03$var$utf8Write(buf, string, offset, length) {
    return $2c3d64c621547c03$var$blitBuffer($2c3d64c621547c03$var$utf8ToBytes(string, buf.length - offset), buf, offset, length);
}
function $2c3d64c621547c03$var$asciiWrite(buf, string, offset, length) {
    return $2c3d64c621547c03$var$blitBuffer($2c3d64c621547c03$var$asciiToBytes(string), buf, offset, length);
}
function $2c3d64c621547c03$var$base64Write(buf, string, offset, length) {
    return $2c3d64c621547c03$var$blitBuffer($2c3d64c621547c03$var$base64ToBytes(string), buf, offset, length);
}
function $2c3d64c621547c03$var$ucs2Write(buf, string, offset, length) {
    return $2c3d64c621547c03$var$blitBuffer($2c3d64c621547c03$var$utf16leToBytes(string, buf.length - offset), buf, offset, length);
}
$2c3d64c621547c03$var$Buffer.prototype.write = function write(string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
        encoding = 'utf8';
        length = this.length;
        offset = 0;
    // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === 'string') {
        encoding = offset;
        length = this.length;
        offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
            length = length >>> 0;
            if (encoding === undefined) encoding = 'utf8';
        } else {
            encoding = length;
            length = undefined;
        }
    } else throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;
    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) throw new RangeError('Attempt to write outside buffer bounds');
    if (!encoding) encoding = 'utf8';
    var loweredCase = false;
    for(;;)switch(encoding){
        case 'hex':
            return $2c3d64c621547c03$var$hexWrite(this, string, offset, length);
        case 'utf8':
        case 'utf-8':
            return $2c3d64c621547c03$var$utf8Write(this, string, offset, length);
        case 'ascii':
        case 'latin1':
        case 'binary':
            return $2c3d64c621547c03$var$asciiWrite(this, string, offset, length);
        case 'base64':
            // Warning: maxLength not taken into account in base64Write
            return $2c3d64c621547c03$var$base64Write(this, string, offset, length);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return $2c3d64c621547c03$var$ucs2Write(this, string, offset, length);
        default:
            if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
            encoding = ('' + encoding).toLowerCase();
            loweredCase = true;
    }
};
$2c3d64c621547c03$var$Buffer.prototype.toJSON = function toJSON() {
    return {
        type: 'Buffer',
        data: Array.prototype.slice.call(this._arr || this, 0)
    };
};
function $2c3d64c621547c03$var$base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) return $37ab68b404fe6f39$export$297b58465abed6df(buf);
    else return $37ab68b404fe6f39$export$297b58465abed6df(buf.slice(start, end));
}
function $2c3d64c621547c03$var$utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;
    while(i < end){
        var firstByte = buf[i];
        var codePoint = null;
        var bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;
        if (i + bytesPerSequence <= end) {
            var secondByte, thirdByte, fourthByte, tempCodePoint;
            switch(bytesPerSequence){
                case 1:
                    if (firstByte < 128) codePoint = firstByte;
                    break;
                case 2:
                    secondByte = buf[i + 1];
                    if ((secondByte & 192) === 128) {
                        tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;
                        if (tempCodePoint > 127) codePoint = tempCodePoint;
                    }
                    break;
                case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;
                        if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) codePoint = tempCodePoint;
                    }
                    break;
                case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];
                    if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {
                        tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;
                        if (tempCodePoint > 65535 && tempCodePoint < 1114112) codePoint = tempCodePoint;
                    }
            }
        }
        if (codePoint === null) {
            // we did not generate a valid codePoint so insert a
            // replacement char (U+FFFD) and advance only 1 byte
            codePoint = 65533;
            bytesPerSequence = 1;
        } else if (codePoint > 65535) {
            // encode to utf16 (surrogate pair dance)
            codePoint -= 65536;
            res.push(codePoint >>> 10 & 1023 | 55296);
            codePoint = 56320 | codePoint & 1023;
        }
        res.push(codePoint);
        i += bytesPerSequence;
    }
    return $2c3d64c621547c03$var$decodeCodePointsArray(res);
}
// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var $2c3d64c621547c03$var$MAX_ARGUMENTS_LENGTH = 4096;
function $2c3d64c621547c03$var$decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= $2c3d64c621547c03$var$MAX_ARGUMENTS_LENGTH) return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
    ;
    // Decode in chunks to avoid "call stack size exceeded".
    var res = '';
    var i = 0;
    while(i < len)res += String.fromCharCode.apply(String, codePoints.slice(i, i += $2c3d64c621547c03$var$MAX_ARGUMENTS_LENGTH));
    return res;
}
function $2c3d64c621547c03$var$asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i] & 127);
    return ret;
}
function $2c3d64c621547c03$var$latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i)ret += String.fromCharCode(buf[i]);
    return ret;
}
function $2c3d64c621547c03$var$hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';
    for(var i = start; i < end; ++i)out += $2c3d64c621547c03$var$hexSliceLookupTable[buf[i]];
    return out;
}
function $2c3d64c621547c03$var$utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
    for(var i = 0; i < bytes.length - 1; i += 2)res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    return res;
}
$2c3d64c621547c03$var$Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;
    if (start < 0) {
        start += len;
        if (start < 0) start = 0;
    } else if (start > len) start = len;
    if (end < 0) {
        end += len;
        if (end < 0) end = 0;
    } else if (end > len) end = len;
    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(newBuf, $2c3d64c621547c03$var$Buffer.prototype);
    return newBuf;
};
/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */ function $2c3d64c621547c03$var$checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
}
$2c3d64c621547c03$var$Buffer.prototype.readUintLE = $2c3d64c621547c03$var$Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while((++i) < byteLength && (mul *= 256))val += this[offset + i] * mul;
    return val;
};
$2c3d64c621547c03$var$Buffer.prototype.readUintBE = $2c3d64c621547c03$var$Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, byteLength, this.length);
    var val = this[offset + --byteLength];
    var mul = 1;
    while(byteLength > 0 && (mul *= 256))val += this[offset + --byteLength] * mul;
    return val;
};
$2c3d64c621547c03$var$Buffer.prototype.readUint8 = $2c3d64c621547c03$var$Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 1, this.length);
    return this[offset];
};
$2c3d64c621547c03$var$Buffer.prototype.readUint16LE = $2c3d64c621547c03$var$Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
};
$2c3d64c621547c03$var$Buffer.prototype.readUint16BE = $2c3d64c621547c03$var$Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
};
$2c3d64c621547c03$var$Buffer.prototype.readUint32LE = $2c3d64c621547c03$var$Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 16777216;
};
$2c3d64c621547c03$var$Buffer.prototype.readUint32BE = $2c3d64c621547c03$var$Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 4, this.length);
    return this[offset] * 16777216 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};
$2c3d64c621547c03$var$Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while((++i) < byteLength && (mul *= 256))val += this[offset + i] * mul;
    mul *= 128;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
$2c3d64c621547c03$var$Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while(i > 0 && (mul *= 256))val += this[offset + --i] * mul;
    mul *= 128;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
$2c3d64c621547c03$var$Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 1, this.length);
    if (!(this[offset] & 128)) return this[offset];
    return (255 - this[offset] + 1) * -1;
};
$2c3d64c621547c03$var$Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 32768 ? val | 4294901760 : val;
};
$2c3d64c621547c03$var$Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 32768 ? val | 4294901760 : val;
};
$2c3d64c621547c03$var$Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};
$2c3d64c621547c03$var$Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};
$2c3d64c621547c03$var$Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 4, this.length);
    return $6bd76725c024b5af$export$2c262a1484748b93(this, offset, true, 23, 4);
};
$2c3d64c621547c03$var$Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 4, this.length);
    return $6bd76725c024b5af$export$2c262a1484748b93(this, offset, false, 23, 4);
};
$2c3d64c621547c03$var$Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 8, this.length);
    return $6bd76725c024b5af$export$2c262a1484748b93(this, offset, true, 52, 8);
};
$2c3d64c621547c03$var$Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkOffset(offset, 8, this.length);
    return $6bd76725c024b5af$export$2c262a1484748b93(this, offset, false, 52, 8);
};
function $2c3d64c621547c03$var$checkInt(buf, value, offset, ext, max, min) {
    if (!$2c3d64c621547c03$var$Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
}
$2c3d64c621547c03$var$Buffer.prototype.writeUintLE = $2c3d64c621547c03$var$Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        $2c3d64c621547c03$var$checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var mul = 1;
    var i = 0;
    this[offset] = value & 255;
    while((++i) < byteLength && (mul *= 256))this[offset + i] = value / mul & 255;
    return offset + byteLength;
};
$2c3d64c621547c03$var$Buffer.prototype.writeUintBE = $2c3d64c621547c03$var$Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        $2c3d64c621547c03$var$checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 255;
    while((--i) >= 0 && (mul *= 256))this[offset + i] = value / mul & 255;
    return offset + byteLength;
};
$2c3d64c621547c03$var$Buffer.prototype.writeUint8 = $2c3d64c621547c03$var$Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 1, 255, 0);
    this[offset] = value & 255;
    return offset + 1;
};
$2c3d64c621547c03$var$Buffer.prototype.writeUint16LE = $2c3d64c621547c03$var$Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 2, 65535, 0);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
$2c3d64c621547c03$var$Buffer.prototype.writeUint16BE = $2c3d64c621547c03$var$Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 2, 65535, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 255;
    return offset + 2;
};
$2c3d64c621547c03$var$Buffer.prototype.writeUint32LE = $2c3d64c621547c03$var$Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 4, 4294967295, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 255;
    return offset + 4;
};
$2c3d64c621547c03$var$Buffer.prototype.writeUint32BE = $2c3d64c621547c03$var$Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 4, 4294967295, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 255;
    return offset + 4;
};
$2c3d64c621547c03$var$Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        $2c3d64c621547c03$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 255;
    while((++i) < byteLength && (mul *= 256)){
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 255;
    }
    return offset + byteLength;
};
$2c3d64c621547c03$var$Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        $2c3d64c621547c03$var$checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 255;
    while((--i) >= 0 && (mul *= 256)){
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) sub = 1;
        this[offset + i] = (value / mul >> 0) - sub & 255;
    }
    return offset + byteLength;
};
$2c3d64c621547c03$var$Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 1, 127, -128);
    if (value < 0) value = 255 + value + 1;
    this[offset] = value & 255;
    return offset + 1;
};
$2c3d64c621547c03$var$Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 2, 32767, -32768);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
$2c3d64c621547c03$var$Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 2, 32767, -32768);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 255;
    return offset + 2;
};
$2c3d64c621547c03$var$Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 4, 2147483647, -2147483648);
    this[offset] = value & 255;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
};
$2c3d64c621547c03$var$Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkInt(this, value, offset, 4, 2147483647, -2147483648);
    if (value < 0) value = 4294967295 + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 255;
    return offset + 4;
};
function $2c3d64c621547c03$var$checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
}
function $2c3d64c621547c03$var$writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkIEEE754(buf, value, offset, 4, 340282346638528860000000000000000000000, -340282346638528860000000000000000000000);
    $6bd76725c024b5af$export$a9187e77005a4477(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
}
$2c3d64c621547c03$var$Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return $2c3d64c621547c03$var$writeFloat(this, value, offset, true, noAssert);
};
$2c3d64c621547c03$var$Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return $2c3d64c621547c03$var$writeFloat(this, value, offset, false, noAssert);
};
function $2c3d64c621547c03$var$writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) $2c3d64c621547c03$var$checkIEEE754(buf, value, offset
    $6bd76725c024b5af$export$a9187e77005a4477(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
}
$2c3d64c621547c03$var$Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return $2c3d64c621547c03$var$writeDouble(this, value, offset, true, noAssert);
};
$2c3d64c621547c03$var$Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return $2c3d64c621547c03$var$writeDouble(this, value, offset, false, noAssert);
};
// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
$2c3d64c621547c03$var$Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!$2c3d64c621547c03$var$Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    // Copy 0 bytes; we're done
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;
    // Fatal error conditions
    if (targetStart < 0) throw new RangeError('targetStart out of bounds');
    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) end = target.length - targetStart + start;
    var len = end - start;
    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end);
    else Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    return len;
};
// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
$2c3d64c621547c03$var$Buffer.prototype.fill = function fill(val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === 'string') {
        if (typeof start === 'string') {
            encoding = start;
            start = 0;
            end = this.length;
        } else if (typeof end === 'string') {
            encoding = end;
            end = this.length;
        }
        if (encoding !== undefined && typeof encoding !== 'string') throw new TypeError('encoding must be a string');
        if (typeof encoding === 'string' && !$2c3d64c621547c03$var$Buffer.isEncoding(encoding)) throw new TypeError('Unknown encoding: ' + encoding);
        if (val.length === 1) {
            var code = val.charCodeAt(0);
            if (encoding === 'utf8' && code < 128 || encoding === 'latin1') // Fast path: If `val` fits into a single byte, use that numeric value.
            val = code;
        }
    } else if (typeof val === 'number') val = val & 255;
    else if (typeof val === 'boolean') val = Number(val);
    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) throw new RangeError('Out of range index');
    if (end <= start) return this;
    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;
    if (typeof val === 'number') for(i = start; i < end; ++i)this[i] = val;
    else {
        var bytes = $2c3d64c621547c03$var$Buffer.isBuffer(val) ? val : $2c3d64c621547c03$var$Buffer.from(val, encoding);
        var len = bytes.length;
        if (len === 0) throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        for(i = 0; i < end - start; ++i)this[i + start] = bytes[i % len];
    }
    return this;
};
// HELPER FUNCTIONS
// ================
var $2c3d64c621547c03$var$INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
function $2c3d64c621547c03$var$base64clean(str) {
    // Node takes equal signs as end of the Base64 encoding
    str = str.split('=')[0];
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = str.trim().replace($2c3d64c621547c03$var$INVALID_BASE64_RE, '');
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return '';
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while(str.length % 4 !== 0)str = str + '=';
    return str;
}
function $2c3d64c621547c03$var$utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];
    for(var i = 0; i < length; ++i){
        codePoint = string.charCodeAt(i);
        // is surrogate component
        if (codePoint > 55295 && codePoint < 57344) {
            // last char was a lead
            if (!leadSurrogate) {
                // no lead yet
                if (codePoint > 56319) {
                    // unexpected trail
                    if ((units -= 3) > -1) bytes.push(239, 191, 189);
                    continue;
                } else if (i + 1 === length) {
                    // unpaired lead
                    if ((units -= 3) > -1) bytes.push(239, 191, 189);
                    continue;
                }
                // valid lead
                leadSurrogate = codePoint;
                continue;
            }
            // 2 leads in a row
            if (codePoint < 56320) {
                if ((units -= 3) > -1) bytes.push(239, 191, 189);
                leadSurrogate = codePoint;
                continue;
            }
            // valid surrogate pair
            codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;
        } else if (leadSurrogate) // valid bmp char, but last char was a lead
        {
            if ((units -= 3) > -1) bytes.push(239, 191, 189);
        }
        leadSurrogate = null;
        // encode utf8
        if (codePoint < 128) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
        } else if (codePoint < 2048) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);
        } else if (codePoint < 65536) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else if (codePoint < 1114112) {
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);
        } else throw new Error('Invalid code point');
    }
    return bytes;
}
function $2c3d64c621547c03$var$asciiToBytes(str) {
    var byteArray = [];
    for(var i = 0; i < str.length; ++i)// Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 255);
    return byteArray;
}
function $2c3d64c621547c03$var$utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];
    for(var i = 0; i < str.length; ++i){
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
    }
    return byteArray;
}
function $2c3d64c621547c03$var$base64ToBytes(str) {
    return $37ab68b404fe6f39$export$2367b5e7922a95be($2c3d64c621547c03$var$base64clean(str));
}
function $2c3d64c621547c03$var$blitBuffer(src, dst, offset, length) {
    for(var i = 0; i < length; ++i){
        if (i + offset >= dst.length || i >= src.length) break;
        dst[i + offset] = src[i];
    }
    return i;
}
// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function $2c3d64c621547c03$var$isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}
function $2c3d64c621547c03$var$numberIsNaN(obj) {
    // For IE11 support
    return obj !== obj // eslint-disable-line no-self-compare
    ;
}
// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var $2c3d64c621547c03$var$hexSliceLookupTable = function() {
    var alphabet = '0123456789abcdef';
    var table = new Array(256);
    for(var i = 0; i < 16; ++i){
        var i16 = i * 16;
        for(var j = 0; j < 16; ++j)table[i16 + j] = alphabet[i] + alphabet[j];
    }
    return table;
}();

parcelRequire.register("dezpI", function(module, exports) {

(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        Buffer = (parcelRequire("iMEq6")).Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') start++;
        if (base === 16) this._parseHex(number, start);
        else this._parseBase(number, base, start);
        if (number[0] === '-') this.negative = 1;
        this._strip();
        if (endian !== 'le') return;
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this._strip();
    };
    function parseHex(str, start, end) {
        var r = 0;
        var len = Math.min(str.length, end);
        var z = 0;
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r <<= 4;
            var b;
            // 'a' - 'f'
            if (c >= 49 && c <= 54) b = c - 49 + 10;
            else if (c >= 17 && c <= 22) b = c - 17 + 10;
            else b = c;
            r |= b;
            z |= b;
        }
        assert(!(z & 240), 'Invalid character in ' + str);
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        // Scan 24-bit chunks and add them to the number
        var off = 0;
        for(i = number.length - 6, j = 0; i >= start; i -= 6){
            w = parseHex(number, i, i + 6);
            this.words[j] |= w << off & 67108863;
            // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
            this.words[j + 1] |= w >>> 26 - off & 4194303;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        if (i + 6 !== start) {
            w = parseHex(number, start, i + 6);
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] |= w >>> 26 - off & 4194303;
        }
        this._strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) b = c - 49 + 10;
            else if (c >= 17) b = c - 17 + 10;
            else b = c;
            assert(c >= 0 && b < mul, 'Invalid character');
            r += b;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
        move(dest, this);
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') try {
        BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
        BN.prototype.inspect = inspect;
    }
    else BN.prototype.inspect = inspect;
    function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modrn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
    };
    if (Buffer) BN.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate1(ArrayType, size) {
        if (ArrayType.allocUnsafe) return ArrayType.allocUnsafe(size);
        return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === 'le' ? 'LE' : 'BE';
        this['_toArrayLike' + postfix](res, byteLength);
        return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position++] = word & 255;
            if (position < res.length) res[position++] = word >> 8 & 255;
            if (position < res.length) res[position++] = word >> 16 & 255;
            if (shift === 6) {
                if (position < res.length) res[position++] = word >> 24 & 255;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position < res.length) {
            res[position++] = carry;
            while(position < res.length)res[position++] = 0;
        }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position--] = word & 255;
            if (position >= 0) res[position--] = word >> 8 & 255;
            if (position >= 0) res[position--] = word >> 16 & 255;
            if (shift === 6) {
                if (position >= 0) res[position--] = word >> 24 & 255;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position >= 0) {
            res[position--] = carry;
            while(position >= 0)res[position--] = 0;
        }
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 1;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this._strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this._strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this._strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this._strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this._strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out._strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out._strip();
    }
    function jumboMulTo(self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this._strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this._strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this._strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q._strip();
        a._strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modrn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modrn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return isNegNum ? -acc : acc;
    };
    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
        return this.modrn(num);
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this._strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is a BN v4 instance
        r.strip();
        else // r is a BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})("object" === 'undefined' || module, this);

});

parcelRequire.register("7oXTu", function(module, exports) {

var $NQ6ON = parcelRequire("NQ6ON");
var $56393c0290319e5f$var$ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';
module.exports = $NQ6ON($56393c0290319e5f$var$ALPHABET);

});
parcelRequire.register("NQ6ON", function(module, exports) {
'use strict';

var $j74Rf = parcelRequire("j74Rf");
var $095cff795a6822c2$require$_Buffer = $j74Rf.Buffer;
function $095cff795a6822c2$var$base(ALPHABET) {
    if (ALPHABET.length >= 255) throw new TypeError('Alphabet too long');
    var BASE_MAP = new Uint8Array(256);
    for(var j = 0; j < BASE_MAP.length; j++)BASE_MAP[j] = 255;
    for(var i = 0; i < ALPHABET.length; i++){
        var x = ALPHABET.charAt(i);
        var xc = x.charCodeAt(0);
        if (BASE_MAP[xc] !== 255) throw new TypeError(x + ' is ambiguous');
        BASE_MAP[xc] = i;
    }
    var BASE = ALPHABET.length;
    var LEADER = ALPHABET.charAt(0);
    var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up
    ;
    var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up
    ;
    function encode(source) {
        if (Array.isArray(source) || source instanceof Uint8Array) source = $095cff795a6822c2$require$_Buffer.from(source);
        if (!$095cff795a6822c2$require$_Buffer.isBuffer(source)) throw new TypeError('Expected Buffer');
        if (source.length === 0) return '';
        // Skip & count leading zeroes.
        var zeroes = 0;
        var length = 0;
        var pbegin = 0;
        var pend = source.length;
        while(pbegin !== pend && source[pbegin] === 0){
            pbegin++;
            zeroes++;
        }
        // Allocate enough space in big-endian base58 representation.
        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
        var b58 = new Uint8Array(size);
        // Process the bytes.
        while(pbegin !== pend){
            var carry = source[pbegin];
            // Apply "b58 = b58 * 256 + ch".
            var i1 = 0;
            for(var it1 = size - 1; (carry !== 0 || i1 < length) && it1 !== -1; it1--, i1++){
                carry += 256 * b58[it1] >>> 0;
                b58[it1] = carry % BASE >>> 0;
                carry = carry / BASE >>> 0;
            }
            if (carry !== 0) throw new Error('Non-zero carry');
            length = i1;
            pbegin++;
        }
        // Skip leading zeroes in base58 result.
        var it2 = size - length;
        while(it2 !== size && b58[it2] === 0)it2++;
        // Translate the result into a string.
        var str = LEADER.repeat(zeroes);
        for(; it2 < size; ++it2)str += ALPHABET.charAt(b58[it2]);
        return str;
    }
    function decodeUnsafe(source) {
        if (typeof source !== 'string') throw new TypeError('Expected String');
        if (source.length === 0) return $095cff795a6822c2$require$_Buffer.alloc(0);
        var psz = 0;
        // Skip leading spaces.
        if (source[psz] === ' ') return;
        // Skip and count leading '1's.
        var zeroes = 0;
        var length = 0;
        while(source[psz] === LEADER){
            zeroes++;
            psz++;
        }
        // Allocate enough space in big-endian base256 representation.
        var size = (source.length - psz) * FACTOR + 1 >>> 0 // log(58) / log(256), rounded up.
        ;
        var b256 = new Uint8Array(size);
        // Process the characters.
        while(source[psz]){
            // Decode character
            var carry = BASE_MAP[source.charCodeAt(psz)];
            // Invalid character
            if (carry === 255) return;
            var i2 = 0;
            for(var it3 = size - 1; (carry !== 0 || i2 < length) && it3 !== -1; it3--, i2++){
                carry += BASE * b256[it3] >>> 0;
                b256[it3] = carry % 256 >>> 0;
                carry = carry / 256 >>> 0;
            }
            if (carry !== 0) throw new Error('Non-zero carry');
            length = i2;
            psz++;
        }
        // Skip trailing spaces.
        if (source[psz] === ' ') return;
        // Skip leading zeroes in b256.
        var it4 = size - length;
        while(it4 !== size && b256[it4] === 0)it4++;
        var vch = $095cff795a6822c2$require$_Buffer.allocUnsafe(zeroes + (size - it4));
        vch.fill(0, 0, zeroes);
        var j1 = zeroes;
        while(it4 !== size)vch[j1++] = b256[it4++];
        return vch;
    }
    function decode(string) {
        var buffer = decodeUnsafe(string);
        if (buffer) return buffer;
        throw new Error('Non-base' + BASE + ' character');
    }
    return {
        encode: encode,
        decodeUnsafe: decodeUnsafe,
        decode: decode
    };
}
module.exports = $095cff795a6822c2$var$base;

});
parcelRequire.register("j74Rf", function(module, exports) {

var $dea2706b7ec49092$var$Buffer = $2c3d64c621547c03$exports.Buffer;
// alternative to using Object.keys for old browsers
function $dea2706b7ec49092$var$copyProps(src, dst) {
    for(var key in src)dst[key] = src[key];
}
if ($dea2706b7ec49092$var$Buffer.from && $dea2706b7ec49092$var$Buffer.alloc && $dea2706b7ec49092$var$Buffer.allocUnsafe && $dea2706b7ec49092$var$Buffer.allocUnsafeSlow) module.exports = $2c3d64c621547c03$exports;
else {
    // Copy properties from require('buffer')
    $dea2706b7ec49092$var$copyProps($2c3d64c621547c03$exports, module.exports);
    module.exports.Buffer = $dea2706b7ec49092$var$SafeBuffer;
}
function $dea2706b7ec49092$var$SafeBuffer(arg, encodingOrOffset, length) {
    return $dea2706b7ec49092$var$Buffer(arg, encodingOrOffset, length);
}
$dea2706b7ec49092$var$SafeBuffer.prototype = Object.create($dea2706b7ec49092$var$Buffer.prototype);
// Copy static methods from Buffer
$dea2706b7ec49092$var$copyProps($dea2706b7ec49092$var$Buffer, $dea2706b7ec49092$var$SafeBuffer);
$dea2706b7ec49092$var$SafeBuffer.from = function(arg, encodingOrOffset, length) {
    if (typeof arg === 'number') throw new TypeError('Argument must not be a number');
    return $dea2706b7ec49092$var$Buffer(arg, encodingOrOffset, length);
};
$dea2706b7ec49092$var$SafeBuffer.alloc = function(size, fill, encoding) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    var buf = $dea2706b7ec49092$var$Buffer(size);
    if (fill !== undefined) {
        if (typeof encoding === 'string') buf.fill(fill, encoding);
        else buf.fill(fill);
    } else buf.fill(0);
    return buf;
};
$dea2706b7ec49092$var$SafeBuffer.allocUnsafe = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return $dea2706b7ec49092$var$Buffer(size);
};
$dea2706b7ec49092$var$SafeBuffer.allocUnsafeSlow = function(size) {
    if (typeof size !== 'number') throw new TypeError('Argument must be a number');
    return $2c3d64c621547c03$exports.SlowBuffer(size);
};

});



parcelRequire.register("4trgL", function(module, exports) {

$parcel$export(module.exports, "TextDecoder", () => $341f05f7330e49f4$export$baaf8468c0f7e81d, (v) => $341f05f7330e49f4$export$baaf8468c0f7e81d = v);
$parcel$export(module.exports, "TextEncoder", () => $341f05f7330e49f4$export$7c6e7422be5f9c7, (v) => $341f05f7330e49f4$export$7c6e7422be5f9c7 = v);
var $341f05f7330e49f4$export$baaf8468c0f7e81d;
var $341f05f7330e49f4$export$7c6e7422be5f9c7;
'use strict';
// This is free and unencumbered software released into the public domain.
// See LICENSE.md for more information.
//
// Utilities
//
/**
 * @param {number} a The number to test.
 * @param {number} min The minimum value in the range, inclusive.
 * @param {number} max The maximum value in the range, inclusive.
 * @return {boolean} True if a >= min and a <= max.
 */ function $341f05f7330e49f4$var$inRange(a, min, max) {
    return min <= a && a <= max;
}
/**
 * @param {*} o
 * @return {Object}
 */ function $341f05f7330e49f4$var$ToDictionary(o) {
    if (o === undefined) return {
    };
    if (o === Object(o)) return o;
    throw TypeError('Could not convert argument to dictionary');
}
/**
 * @param {string} string Input string of UTF-16 code units.
 * @return {!Array.<number>} Code points.
 */ function $341f05f7330e49f4$var$stringToCodePoints(string) {
    // https://heycam.github.io/webidl/#dfn-obtain-unicode
    // 1. Let S be the DOMString value.
    var s = String(string);
    // 2. Let n be the length of S.
    var n = s.length;
    // 3. Initialize i to 0.
    var i = 0;
    // 4. Initialize U to be an empty sequence of Unicode characters.
    var u = [];
    // 5. While i < n:
    while(i < n){
        // 1. Let c be the code unit in S at index i.
        var c = s.charCodeAt(i);
        // 2. Depending on the value of c:
        // c < 0xD800 or c > 0xDFFF
        if (c < 55296 || c > 57343) // Append to U the Unicode character with code point c.
        u.push(c);
        else if (56320 <= c && c <= 57343) // Append to U a U+FFFD REPLACEMENT CHARACTER.
        u.push(65533);
        else if (55296 <= c && c <= 56319) {
            // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT
            // CHARACTER.
            if (i === n - 1) u.push(65533);
            else {
                // 1. Let d be the code unit in S at index i+1.
                var d = string.charCodeAt(i + 1);
                // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:
                if (56320 <= d && d <= 57343) {
                    // 1. Let a be c & 0x3FF.
                    var a = c & 1023;
                    // 2. Let b be d & 0x3FF.
                    var b = d & 1023;
                    // 3. Append to U the Unicode character with code point
                    // 2^16+2^10*a+b.
                    u.push(65536 + (a << 10) + b);
                    // 4. Set i to i+1.
                    i += 1;
                } else u.push(65533);
            }
        }
        // 3. Set i to i+1.
        i += 1;
    }
    // 6. Return U.
    return u;
}
/**
 * @param {!Array.<number>} code_points Array of code points.
 * @return {string} string String of UTF-16 code units.
 */ function $341f05f7330e49f4$var$codePointsToString(code_points) {
    var s = '';
    for(var i = 0; i < code_points.length; ++i){
        var cp = code_points[i];
        if (cp <= 65535) s += String.fromCharCode(cp);
        else {
            cp -= 65536;
            s += String.fromCharCode((cp >> 10) + 55296, (cp & 1023) + 56320);
        }
    }
    return s;
}
//
// Implementation of Encoding specification
// https://encoding.spec.whatwg.org/
//
//
// 3. Terminology
//
/**
 * End-of-stream is a special token that signifies no more tokens
 * are in the stream.
 * @const
 */ var $341f05f7330e49f4$var$end_of_stream = -1;
/**
 * A stream represents an ordered sequence of tokens.
 *
 * @constructor
 * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the
 * stream.
 */ function $341f05f7330e49f4$var$Stream(tokens) {
    /** @type {!Array.<number>} */ this.tokens = [].slice.call(tokens);
}
$341f05f7330e49f4$var$Stream.prototype = {
    /**
   * @return {boolean} True if end-of-stream has been hit.
   */ endOfStream: function() {
        return !this.tokens.length;
    },
    /**
   * When a token is read from a stream, the first token in the
   * stream must be returned and subsequently removed, and
   * end-of-stream must be returned otherwise.
   *
   * @return {number} Get the next token from the stream, or
   * end_of_stream.
   */ read: function() {
        if (!this.tokens.length) return $341f05f7330e49f4$var$end_of_stream;
        return this.tokens.shift();
    },
    /**
   * When one or more tokens are prepended to a stream, those tokens
   * must be inserted, in given order, before the first token in the
   * stream.
   *
   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.
   */ prepend: function(token) {
        if (Array.isArray(token)) {
            var tokens = token;
            while(tokens.length)this.tokens.unshift(tokens.pop());
        } else this.tokens.unshift(token);
    },
    /**
   * When one or more tokens are pushed to a stream, those tokens
   * must be inserted, in given order, after the last token in the
   * stream.
   *
   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.
   */ push: function(token) {
        if (Array.isArray(token)) {
            var tokens = token;
            while(tokens.length)this.tokens.push(tokens.shift());
        } else this.tokens.push(token);
    }
};
//
// 4. Encodings
//
// 4.1 Encoders and decoders
/** @const */ var $341f05f7330e49f4$var$finished = -1;
/**
 * @param {boolean} fatal If true, decoding errors raise an exception.
 * @param {number=} opt_code_point Override the standard fallback code point.
 * @return {number} The code point to insert on a decoding error.
 */ function $341f05f7330e49f4$var$decoderError(fatal, opt_code_point) {
    if (fatal) throw TypeError('Decoder error');
    return opt_code_point || 65533;
}
//
// 7. API
//
/** @const */ var $341f05f7330e49f4$var$DEFAULT_ENCODING = 'utf-8';
// 7.1 Interface TextDecoder
/**
 * @constructor
 * @param {string=} encoding The label of the encoding;
 *     defaults to 'utf-8'.
 * @param {Object=} options
 */ function $341f05f7330e49f4$var$TextDecoder(encoding, options) {
    if (!(this instanceof $341f05f7330e49f4$var$TextDecoder)) return new $341f05f7330e49f4$var$TextDecoder(encoding, options);
    encoding = encoding !== undefined ? String(encoding).toLowerCase() : $341f05f7330e49f4$var$DEFAULT_ENCODING;
    if (encoding !== $341f05f7330e49f4$var$DEFAULT_ENCODING) throw new Error('Encoding not supported. Only utf-8 is supported');
    options = $341f05f7330e49f4$var$ToDictionary(options);
    /** @private @type {boolean} */ this._streaming = false;
    /** @private @type {boolean} */ this._BOMseen = false;
    /** @private @type {?Decoder} */ this._decoder = null;
    /** @private @type {boolean} */ this._fatal = Boolean(options['fatal']);
    /** @private @type {boolean} */ this._ignoreBOM = Boolean(options['ignoreBOM']);
    Object.defineProperty(this, 'encoding', {
        value: 'utf-8'
    });
    Object.defineProperty(this, 'fatal', {
        value: this._fatal
    });
    Object.defineProperty(this, 'ignoreBOM', {
        value: this._ignoreBOM
    });
}
$341f05f7330e49f4$var$TextDecoder.prototype = {
    /**
   * @param {ArrayBufferView=} input The buffer of bytes to decode.
   * @param {Object=} options
   * @return {string} The decoded string.
   */ decode: function decode(input, options) {
        var bytes;
        if (typeof input === 'object' && input instanceof ArrayBuffer) bytes = new Uint8Array(input);
        else if (typeof input === 'object' && 'buffer' in input && input.buffer instanceof ArrayBuffer) bytes = new Uint8Array(input.buffer, input.byteOffset, input.byteLength);
        else bytes = new Uint8Array(0);
        options = $341f05f7330e49f4$var$ToDictionary(options);
        if (!this._streaming) {
            this._decoder = new $341f05f7330e49f4$var$UTF8Decoder({
                fatal: this._fatal
            });
            this._BOMseen = false;
        }
        this._streaming = Boolean(options['stream']);
        var input_stream = new $341f05f7330e49f4$var$Stream(bytes);
        var code_points = [];
        /** @type {?(number|!Array.<number>)} */ var result;
        while(!input_stream.endOfStream()){
            result = this._decoder.handler(input_stream, input_stream.read());
            if (result === $341f05f7330e49f4$var$finished) break;
            if (result === null) continue;
            if (Array.isArray(result)) code_points.push.apply(code_points, result);
            else code_points.push(result);
        }
        if (!this._streaming) {
            do {
                result = this._decoder.handler(input_stream, input_stream.read());
                if (result === $341f05f7330e49f4$var$finished) break;
                if (result === null) continue;
                if (Array.isArray(result)) code_points.push.apply(code_points, result);
                else code_points.push(result);
            }while (!input_stream.endOfStream())
            this._decoder = null;
        }
        if (code_points.length) // If encoding is one of utf-8, utf-16be, and utf-16le, and
        // ignore BOM flag and BOM seen flag are unset, run these
        // subsubsteps:
        {
            if ([
                'utf-8'
            ].indexOf(this.encoding) !== -1 && !this._ignoreBOM && !this._BOMseen) {
                // If token is U+FEFF, set BOM seen flag.
                if (code_points[0] === 65279) {
                    this._BOMseen = true;
                    code_points.shift();
                } else // Otherwise, if token is not end-of-stream, set BOM seen
                // flag and append token to output.
                this._BOMseen = true;
            }
        }
        return $341f05f7330e49f4$var$codePointsToString(code_points);
    }
};
// 7.2 Interface TextEncoder
/**
 * @constructor
 * @param {string=} encoding The label of the encoding;
 *     defaults to 'utf-8'.
 * @param {Object=} options
 */ function $341f05f7330e49f4$var$TextEncoder(encoding, options) {
    if (!(this instanceof $341f05f7330e49f4$var$TextEncoder)) return new $341f05f7330e49f4$var$TextEncoder(encoding, options);
    encoding = encoding !== undefined ? String(encoding).toLowerCase() : $341f05f7330e49f4$var$DEFAULT_ENCODING;
    if (encoding !== $341f05f7330e49f4$var$DEFAULT_ENCODING) throw new Error('Encoding not supported. Only utf-8 is supported');
    options = $341f05f7330e49f4$var$ToDictionary(options);
    /** @private @type {boolean} */ this._streaming = false;
    /** @private @type {?Encoder} */ this._encoder = null;
    /** @private @type {{fatal: boolean}} */ this._options = {
        fatal: Boolean(options['fatal'])
    };
    Object.defineProperty(this, 'encoding', {
        value: 'utf-8'
    });
}
$341f05f7330e49f4$var$TextEncoder.prototype = {
    /**
   * @param {string=} opt_string The string to encode.
   * @param {Object=} options
   * @return {Uint8Array} Encoded bytes, as a Uint8Array.
   */ encode: function encode(opt_string, options) {
        opt_string = opt_string ? String(opt_string) : '';
        options = $341f05f7330e49f4$var$ToDictionary(options);
        // NOTE: This option is nonstandard. None of the encodings
        // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,
        // so streaming is not necessary.
        if (!this._streaming) this._encoder = new $341f05f7330e49f4$var$UTF8Encoder(this._options);
        this._streaming = Boolean(options['stream']);
        var bytes = [];
        var input_stream = new $341f05f7330e49f4$var$Stream($341f05f7330e49f4$var$stringToCodePoints(opt_string));
        /** @type {?(number|!Array.<number>)} */ var result;
        while(!input_stream.endOfStream()){
            result = this._encoder.handler(input_stream, input_stream.read());
            if (result === $341f05f7330e49f4$var$finished) break;
            if (Array.isArray(result)) bytes.push.apply(bytes, result);
            else bytes.push(result);
        }
        if (!this._streaming) {
            while(true){
                result = this._encoder.handler(input_stream, input_stream.read());
                if (result === $341f05f7330e49f4$var$finished) break;
                if (Array.isArray(result)) bytes.push.apply(bytes, result);
                else bytes.push(result);
            }
            this._encoder = null;
        }
        return new Uint8Array(bytes);
    }
};
//
// 8. The encoding
//
// 8.1 utf-8
/**
 * @constructor
 * @implements {Decoder}
 * @param {{fatal: boolean}} options
 */ function $341f05f7330e49f4$var$UTF8Decoder(options) {
    var fatal = options.fatal;
    // utf-8's decoder's has an associated utf-8 code point, utf-8
    // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8
    // lower boundary (initially 0x80), and a utf-8 upper boundary
    // (initially 0xBF).
    var /** @type {number} */ utf8_code_point = 0, /** @type {number} */ utf8_bytes_seen = 0, /** @type {number} */ utf8_bytes_needed = 0, /** @type {number} */ utf8_lower_boundary = 128, /** @type {number} */ utf8_upper_boundary = 191;
    /**
   * @param {Stream} stream The stream of bytes being decoded.
   * @param {number} bite The next byte read from the stream.
   * @return {?(number|!Array.<number>)} The next code point(s)
   *     decoded, or null if not enough data exists in the input
   *     stream to decode a complete code point.
   */ this.handler = function(stream, bite) {
        // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,
        // set utf-8 bytes needed to 0 and return error.
        if (bite === $341f05f7330e49f4$var$end_of_stream && utf8_bytes_needed !== 0) {
            utf8_bytes_needed = 0;
            return $341f05f7330e49f4$var$decoderError(fatal);
        }
        // 2. If byte is end-of-stream, return finished.
        if (bite === $341f05f7330e49f4$var$end_of_stream) return $341f05f7330e49f4$var$finished;
        // 3. If utf-8 bytes needed is 0, based on byte:
        if (utf8_bytes_needed === 0) {
            // 0x00 to 0x7F
            if ($341f05f7330e49f4$var$inRange(bite, 0, 127)) // Return a code point whose value is byte.
            return bite;
            // 0xC2 to 0xDF
            if ($341f05f7330e49f4$var$inRange(bite, 194, 223)) {
                // Set utf-8 bytes needed to 1 and utf-8 code point to byte
                // − 0xC0.
                utf8_bytes_needed = 1;
                utf8_code_point = bite - 192;
            } else if ($341f05f7330e49f4$var$inRange(bite, 224, 239)) {
                // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.
                if (bite === 224) utf8_lower_boundary = 160;
                // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.
                if (bite === 237) utf8_upper_boundary = 159;
                // 3. Set utf-8 bytes needed to 2 and utf-8 code point to
                // byte − 0xE0.
                utf8_bytes_needed = 2;
                utf8_code_point = bite - 224;
            } else if ($341f05f7330e49f4$var$inRange(bite, 240, 244)) {
                // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.
                if (bite === 240) utf8_lower_boundary = 144;
                // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.
                if (bite === 244) utf8_upper_boundary = 143;
                // 3. Set utf-8 bytes needed to 3 and utf-8 code point to
                // byte − 0xF0.
                utf8_bytes_needed = 3;
                utf8_code_point = bite - 240;
            } else // Return error.
            return $341f05f7330e49f4$var$decoderError(fatal);
            // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code
            // point to utf-8 code point << (6 × utf-8 bytes needed) and
            // return continue.
            utf8_code_point = utf8_code_point << 6 * utf8_bytes_needed;
            return null;
        }
        // 4. If byte is not in the range utf-8 lower boundary to utf-8
        // upper boundary, run these substeps:
        if (!$341f05f7330e49f4$var$inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {
            // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8
            // bytes seen to 0, set utf-8 lower boundary to 0x80, and set
            // utf-8 upper boundary to 0xBF.
            utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;
            utf8_lower_boundary = 128;
            utf8_upper_boundary = 191;
            // 2. Prepend byte to stream.
            stream.prepend(bite);
            // 3. Return error.
            return $341f05f7330e49f4$var$decoderError(fatal);
        }
        // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary
        // to 0xBF.
        utf8_lower_boundary = 128;
        utf8_upper_boundary = 191;
        // 6. Increase utf-8 bytes seen by one and set utf-8 code point
        // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes
        // needed − utf-8 bytes seen)).
        utf8_bytes_seen += 1;
        utf8_code_point += bite - 128 << 6 * (utf8_bytes_needed - utf8_bytes_seen);
        // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,
        // continue.
        if (utf8_bytes_seen !== utf8_bytes_needed) return null;
        // 8. Let code point be utf-8 code point.
        var code_point = utf8_code_point;
        // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes
        // seen to 0.
        utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;
        // 10. Return a code point whose value is code point.
        return code_point;
    };
}
/**
 * @constructor
 * @implements {Encoder}
 * @param {{fatal: boolean}} options
 */ function $341f05f7330e49f4$var$UTF8Encoder(options) {
    var fatal = options.fatal;
    /**
   * @param {Stream} stream Input stream.
   * @param {number} code_point Next code point read from the stream.
   * @return {(number|!Array.<number>)} Byte(s) to emit.
   */ this.handler = function(stream, code_point) {
        // 1. If code point is end-of-stream, return finished.
        if (code_point === $341f05f7330e49f4$var$end_of_stream) return $341f05f7330e49f4$var$finished;
        // 2. If code point is in the range U+0000 to U+007F, return a
        // byte whose value is code point.
        if ($341f05f7330e49f4$var$inRange(code_point, 0, 127)) return code_point;
        // 3. Set count and offset based on the range code point is in:
        var count, offset;
        // U+0080 to U+07FF:    1 and 0xC0
        if ($341f05f7330e49f4$var$inRange(code_point, 128, 2047)) {
            count = 1;
            offset = 192;
        } else if ($341f05f7330e49f4$var$inRange(code_point, 2048, 65535)) {
            count = 2;
            offset = 224;
        } else if ($341f05f7330e49f4$var$inRange(code_point, 65536, 1114111)) {
            count = 3;
            offset = 240;
        }
        // 4.Let bytes be a byte sequence whose first byte is (code
        // point >> (6 × count)) + offset.
        var bytes = [
            (code_point >> 6 * count) + offset
        ];
        // 5. Run these substeps while count is greater than 0:
        while(count > 0){
            // 1. Set temp to code point >> (6 × (count − 1)).
            var temp = code_point >> 6 * (count - 1);
            // 2. Append to bytes 0x80 | (temp & 0x3F).
            bytes.push(128 | temp & 63);
            // 3. Decrease count by one.
            count -= 1;
        }
        // 6. Return bytes bytes, in order.
        return bytes;
    };
}
$341f05f7330e49f4$export$7c6e7422be5f9c7 = $341f05f7330e49f4$var$TextEncoder;
$341f05f7330e49f4$export$baaf8468c0f7e81d = $341f05f7330e49f4$var$TextDecoder;

});



parcelRequire.register("iBavB", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.Assignable = module.exports.Enum = void 0;
/** @hidden @module */ class $d8a3d584d44bcf3f$var$Enum {
    constructor(properties){
        if (Object.keys(properties).length !== 1) throw new Error('Enum can only take single value');
        Object.keys(properties).map((key)=>{
            this[key] = properties[key];
            this.enum = key;
        });
    }
}
module.exports.Enum = $d8a3d584d44bcf3f$var$Enum;
class $d8a3d584d44bcf3f$var$Assignable {
    constructor(properties1){
        Object.keys(properties1).map((key)=>{
            this[key] = properties1[key];
        });
    }
}
module.exports.Assignable = $d8a3d584d44bcf3f$var$Assignable;

});



parcelRequire.register("ETzao", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.BrowserLocalStorageKeyStore = void 0;

var $5iAoJ = parcelRequire("5iAoJ");

var $bqi77 = parcelRequire("bqi77");
const $07aed6d4f424f0ef$var$LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';
/**
 * This class is used to store keys in the browsers local storage.
 *
 * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#key-store}
 * @example
 * ```js
 * import { connect, keyStores } from 'near-api-js';
 *
 * const keyStore = new keyStores.BrowserLocalStorageKeyStore();
 * const config = {
 *   keyStore, // instance of BrowserLocalStorageKeyStore
 *   networkId: 'testnet',
 *   nodeUrl: 'https://rpc.testnet.near.org',
 *   walletUrl: 'https://wallet.testnet.near.org',
 *   helperUrl: 'https://helper.testnet.near.org',
 *   explorerUrl: 'https://explorer.testnet.near.org'
 * };
 *
 * // inside an async function
 * const near = await connect(config)
 * ```
 */ class $07aed6d4f424f0ef$var$BrowserLocalStorageKeyStore extends $5iAoJ.KeyStore {
    /**
     * @param localStorage defaults to window.localStorage
     * @param prefix defaults to `near-api-js:keystore:`
     */ constructor(localStorage = window.localStorage, prefix = $07aed6d4f424f0ef$var$LOCAL_STORAGE_KEY_PREFIX){
        super();
        this.localStorage = localStorage;
        this.prefix = prefix;
    }
    /**
     * Stores a {@link KeyPair} in local storage.
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     * @param keyPair The key pair to store in local storage
     */ async setKey(networkId, accountId, keyPair) {
        this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());
    }
    /**
     * Gets a {@link KeyPair} from local storage
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     * @returns {Promise<KeyPair>}
     */ async getKey(networkId, accountId) {
        const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));
        if (!value) return null;
        return $bqi77.KeyPair.fromString(value);
    }
    /**
     * Removes a {@link KeyPair} from local storage
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     */ async removeKey(networkId, accountId) {
        this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));
    }
    /**
     * Removes all items that start with `prefix` from local storage
     */ async clear() {
        for (const key of this.storageKeys())if (key.startsWith(this.prefix)) this.localStorage.removeItem(key);
    }
    /**
     * Get the network(s) from local storage
     * @returns {Promise<string[]>}
     */ async getNetworks() {
        const result = new Set();
        for (const key of this.storageKeys())if (key.startsWith(this.prefix)) {
            const parts = key.substring(this.prefix.length).split(':');
            result.add(parts[1]);
        }
        return Array.from(result.values());
    }
    /**
     * Gets the account(s) from local storage
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @returns{Promise<string[]>}
     */ async getAccounts(networkId) {
        const result = new Array();
        for (const key of this.storageKeys())if (key.startsWith(this.prefix)) {
            const parts = key.substring(this.prefix.length).split(':');
            if (parts[1] === networkId) result.push(parts[0]);
        }
        return result;
    }
    /**
     * @hidden
     * Helper function to retrieve a local storage key
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the storage keythat's sought
     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`
     */ storageKeyForSecretKey(networkId, accountId) {
        return `${this.prefix}${accountId}:${networkId}`;
    }
    /** @hidden */ *storageKeys() {
        for(let i = 0; i < this.localStorage.length; i++)yield this.localStorage.key(i);
    }
}
module.exports.BrowserLocalStorageKeyStore = $07aed6d4f424f0ef$var$BrowserLocalStorageKeyStore;

});

parcelRequire.register("kiSA5", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.MergeKeyStore = void 0;

var $5iAoJ = parcelRequire("5iAoJ");
class $ec7fd3c089941c09$var$MergeKeyStore extends $5iAoJ.KeyStore {
    /**
     * @param keyStores read calls are attempted from start to end of array
     * @param options.writeKeyStoreIndex the keystore index that will receive all write calls
     */ constructor(keyStores, options = {
        writeKeyStoreIndex: 0
    }){
        super();
        this.options = options;
        this.keyStores = keyStores;
    }
    /**
     * Store a {@link KeyPain} to the first index of a key store array
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     * @param keyPair The key pair to store in local storage
     */ async setKey(networkId, accountId, keyPair) {
        await this.keyStores[this.options.writeKeyStoreIndex].setKey(networkId, accountId, keyPair);
    }
    /**
     * Gets a {@link KeyPair} from the array of key stores
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     * @returns {Promise<KeyPair>}
     */ async getKey(networkId, accountId) {
        for (const keyStore of this.keyStores){
            const keyPair = await keyStore.getKey(networkId, accountId);
            if (keyPair) return keyPair;
        }
        return null;
    }
    /**
     * Removes a {@link KeyPair} from the array of key stores
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account tied to the key pair
     */ async removeKey(networkId, accountId) {
        for (const keyStore of this.keyStores)await keyStore.removeKey(networkId, accountId);
    }
    /**
     * Removes all items from each key store
     */ async clear() {
        for (const keyStore of this.keyStores)await keyStore.clear();
    }
    /**
     * Get the network(s) from the array of key stores
     * @returns {Promise<string[]>}
     */ async getNetworks() {
        const result = new Set();
        for (const keyStore of this.keyStores)for (const network of await keyStore.getNetworks())result.add(network);
        return Array.from(result);
    }
    /**
     * Gets the account(s) from the array of key stores
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @returns{Promise<string[]>}
     */ async getAccounts(networkId) {
        const result = new Set();
        for (const keyStore of this.keyStores)for (const account of await keyStore.getAccounts(networkId))result.add(account);
        return Array.from(result);
    }
    /** @hidden */ toString() {
        return `MergeKeyStore(${this.keyStores.join(', ')})`;
    }
}
module.exports.MergeKeyStore = $ec7fd3c089941c09$var$MergeKeyStore;

});



/** @hidden @module */ $eed45acf6a4b99e3$exports.keyStores = $eed45acf6a4b99e3$var$__importStar((parcelRequire("eTs0t")));
parcelRequire.register("54fqz", function(module, exports) {
"use strict";
var $3b094b138dce06c7$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var $3b094b138dce06c7$var$__setModuleDefault = module.exports && module.exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var $3b094b138dce06c7$var$__importStar = module.exports && module.exports.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.hasOwnProperty.call(mod, k)) $3b094b138dce06c7$var$__createBinding(result, mod, k);
    $3b094b138dce06c7$var$__setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.WalletConnection = module.exports.WalletAccount = module.exports.ConnectedWalletAccount = module.exports.Near = module.exports.KeyPair = module.exports.Signer = module.exports.InMemorySigner = module.exports.Contract = module.exports.Connection = module.exports.Account = module.exports.multisig = module.exports.validators = module.exports.transactions = module.exports.utils = module.exports.providers = module.exports.accountCreator = void 0;

/** @hidden @module */ const $3b094b138dce06c7$var$providers = $3b094b138dce06c7$var$__importStar((parcelRequire("2drwM")));
module.exports.providers = $3b094b138dce06c7$var$providers;

const $3b094b138dce06c7$var$utils = $3b094b138dce06c7$var$__importStar((parcelRequire("6JjgF")));
module.exports.utils = $3b094b138dce06c7$var$utils;

const $3b094b138dce06c7$var$transactions = $3b094b138dce06c7$var$__importStar((parcelRequire("7Z5VI")));
module.exports.transactions = $3b094b138dce06c7$var$transactions;

const $3b094b138dce06c7$var$validators = $3b094b138dce06c7$var$__importStar((parcelRequire("e7N3F")));
module.exports.validators = $3b094b138dce06c7$var$validators;

var $gwyhm = parcelRequire("gwyhm");
Object.defineProperty(module.exports, "Account", {
    enumerable: true,
    get: function() {
        return $gwyhm.Account;
    }
});

const $3b094b138dce06c7$var$multisig = $3b094b138dce06c7$var$__importStar((parcelRequire("ih9ZG")));
module.exports.multisig = $3b094b138dce06c7$var$multisig;

const $3b094b138dce06c7$var$accountCreator = $3b094b138dce06c7$var$__importStar((parcelRequire("lIRwQ")));
module.exports.accountCreator = $3b094b138dce06c7$var$accountCreator;

var $kDTDJ = parcelRequire("kDTDJ");
Object.defineProperty(module.exports, "Connection", {
    enumerable: true,
    get: function() {
        return $kDTDJ.Connection;
    }
});

var $jcKrI = parcelRequire("jcKrI");
Object.defineProperty(module.exports, "Signer", {
    enumerable: true,
    get: function() {
        return $jcKrI.Signer;
    }
});
Object.defineProperty(module.exports, "InMemorySigner", {
    enumerable: true,
    get: function() {
        return $jcKrI.InMemorySigner;
    }
});

var $8wIEw = parcelRequire("8wIEw");
Object.defineProperty(module.exports, "Contract", {
    enumerable: true,
    get: function() {
        return $8wIEw.Contract;
    }
});

var $bqi77 = parcelRequire("bqi77");
Object.defineProperty(module.exports, "KeyPair", {
    enumerable: true,
    get: function() {
        return $bqi77.KeyPair;
    }
});

var $9MD2d = parcelRequire("9MD2d");
Object.defineProperty(module.exports, "Near", {
    enumerable: true,
    get: function() {
        return $9MD2d.Near;
    }
});

var $1Bput = parcelRequire("1Bput");
Object.defineProperty(module.exports, "ConnectedWalletAccount", {
    enumerable: true,
    get: function() {
        return $1Bput.ConnectedWalletAccount;
    }
});
Object.defineProperty(module.exports, "WalletAccount", {
    enumerable: true,
    get: function() {
        return $1Bput.WalletAccount;
    }
});
Object.defineProperty(module.exports, "WalletConnection", {
    enumerable: true,
    get: function() {
        return $1Bput.WalletConnection;
    }
});

});
parcelRequire.register("2drwM", function(module, exports) {
"use strict";
/** @hidden @module */ Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.ErrorContext = module.exports.TypedError = module.exports.getTransactionLastResult = module.exports.FinalExecutionStatusBasic = module.exports.JsonRpcProvider = module.exports.Provider = void 0;

var $9l8SL = parcelRequire("9l8SL");
Object.defineProperty(module.exports, "Provider", {
    enumerable: true,
    get: function() {
        return $9l8SL.Provider;
    }
});
Object.defineProperty(module.exports, "getTransactionLastResult", {
    enumerable: true,
    get: function() {
        return $9l8SL.getTransactionLastResult;
    }
});
Object.defineProperty(module.exports, "FinalExecutionStatusBasic", {
    enumerable: true,
    get: function() {
        return $9l8SL.FinalExecutionStatusBasic;
    }
});

var $itu5O = parcelRequire("itu5O");
Object.defineProperty(module.exports, "JsonRpcProvider", {
    enumerable: true,
    get: function() {
        return $itu5O.JsonRpcProvider;
    }
});
Object.defineProperty(module.exports, "TypedError", {
    enumerable: true,
    get: function() {
        return $itu5O.TypedError;
    }
});
Object.defineProperty(module.exports, "ErrorContext", {
    enumerable: true,
    get: function() {
        return $itu5O.ErrorContext;
    }
});

});
parcelRequire.register("9l8SL", function(module, exports) {

var $6cccf7151ff92272$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
"use strict";
/**
 * NEAR RPC API request types and responses
 * @module
 */ Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.getTransactionLastResult = module.exports.Provider = module.exports.IdType = module.exports.FinalExecutionStatusBasic = module.exports.ExecutionStatusBasic = void 0;
var $6cccf7151ff92272$var$ExecutionStatusBasic;
(function(ExecutionStatusBasic) {
    ExecutionStatusBasic["Unknown"] = "Unknown";
    ExecutionStatusBasic["Pending"] = "Pending";
    ExecutionStatusBasic["Failure"] = "Failure";
})($6cccf7151ff92272$var$ExecutionStatusBasic = module.exports.ExecutionStatusBasic || (module.exports.ExecutionStatusBasic = {
}));
var $6cccf7151ff92272$var$FinalExecutionStatusBasic;
(function(FinalExecutionStatusBasic) {
    FinalExecutionStatusBasic["NotStarted"] = "NotStarted";
    FinalExecutionStatusBasic["Started"] = "Started";
    FinalExecutionStatusBasic["Failure"] = "Failure";
})($6cccf7151ff92272$var$FinalExecutionStatusBasic = module.exports.FinalExecutionStatusBasic || (module.exports.FinalExecutionStatusBasic = {
}));
var $6cccf7151ff92272$var$IdType;
(function(IdType) {
    IdType["Transaction"] = "transaction";
    IdType["Receipt"] = "receipt";
})($6cccf7151ff92272$var$IdType = module.exports.IdType || (module.exports.IdType = {
}));
/** @hidden */ class $6cccf7151ff92272$var$Provider {
}
module.exports.Provider = $6cccf7151ff92272$var$Provider;
/** @hidden */ function $6cccf7151ff92272$var$getTransactionLastResult(txResult) {
    if (typeof txResult.status === 'object' && typeof txResult.status.SuccessValue === 'string') {
        const value = $6cccf7151ff92272$require$Buffer.from(txResult.status.SuccessValue, 'base64').toString();
        try {
            return JSON.parse(value);
        } catch (e) {
            return value;
        }
    }
    return null;
}
module.exports.getTransactionLastResult = $6cccf7151ff92272$var$getTransactionLastResult;

});

parcelRequire.register("itu5O", function(module, exports) {

var $d732473b1a2513cf$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
"use strict";
var $d732473b1a2513cf$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.JsonRpcProvider = module.exports.ErrorContext = module.exports.TypedError = void 0;

/**
 * This module contains the {@link JsonRpcProvider} client class
 * which can be used to interact with the NEAR RPC API.
 * @see {@link providers/provider} for a list of request and response types
 */ const $d732473b1a2513cf$var$depd_1 = $d732473b1a2513cf$var$__importDefault((parcelRequire("9NoLj")));

var $9l8SL = parcelRequire("9l8SL");

var $4iS3f = parcelRequire("4iS3f");

var $9ZP4J = parcelRequire("9ZP4J");
Object.defineProperty(module.exports, "TypedError", {
    enumerable: true,
    get: function() {
        return $9ZP4J.TypedError;
    }
});
Object.defineProperty(module.exports, "ErrorContext", {
    enumerable: true,
    get: function() {
        return $9ZP4J.ErrorContext;
    }
});

var $6CyfS = parcelRequire("6CyfS");

const $d732473b1a2513cf$var$exponential_backoff_1 = $d732473b1a2513cf$var$__importDefault((parcelRequire("7XMBM")));

var $4VSha = parcelRequire("4VSha");
// Default number of retries before giving up on a request.
const $d732473b1a2513cf$var$REQUEST_RETRY_NUMBER = 12;
// Default wait until next retry in millis.
const $d732473b1a2513cf$var$REQUEST_RETRY_WAIT = 500;
// Exponential back off for waiting to retry.
const $d732473b1a2513cf$var$REQUEST_RETRY_WAIT_BACKOFF = 1.5;
/// Keep ids unique across all connections.
let $d732473b1a2513cf$var$_nextId = 123;
/**
 * Client class to interact with the NEAR RPC API.
 * @see {@link https://github.com/near/nearcore/tree/master/chain/jsonrpc}
 */ class $d732473b1a2513cf$var$JsonRpcProvider extends $9l8SL.Provider {
    /**
     * @param url RPC API endpoint URL
     */ constructor(url){
        super();
        this.connection = {
            url: url
        };
    }
    /**
     * Gets the RPC's status
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#general-validator-status}
     */ async status() {
        return this.sendJsonRpc('status', []);
    }
    /**
     * Sends a signed transaction to the RPC and waits until transaction is fully complete
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#send-transaction-await}
     *
     * @param signedTransaction The signed transaction being sent
     */ async sendTransaction(signedTransaction) {
        const bytes = signedTransaction.encode();
        return this.sendJsonRpc('broadcast_tx_commit', [
            $d732473b1a2513cf$require$Buffer.from(bytes).toString('base64')
        ]);
    }
    /**
     * Sends a signed transaction to the RPC and immediately returns transaction hash
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#send-transaction-async)
     * @param signedTransaction The signed transaction being sent
     * @returns {Promise<FinalExecutionOutcome>}
     */ async sendTransactionAsync(signedTransaction) {
        const bytes = signedTransaction.encode();
        return this.sendJsonRpc('broadcast_tx_async', [
            $d732473b1a2513cf$require$Buffer.from(bytes).toString('base64')
        ]);
    }
    /**
     * Gets a transaction's status from the RPC
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#transaction-status}
     *
     * @param txHash A transaction hash as either a Uint8Array or a base58 encoded string
     * @param accountId The NEAR account that signed the transaction
     */ async txStatus(txHash, accountId) {
        if (typeof txHash === 'string') return this.txStatusString(txHash, accountId);
        else return this.txStatusUint8Array(txHash, accountId);
    }
    async txStatusUint8Array(txHash, accountId) {
        return this.sendJsonRpc('tx', [
            $6CyfS.baseEncode(txHash),
            accountId
        ]);
    }
    async txStatusString(txHash, accountId) {
        return this.sendJsonRpc('tx', [
            txHash,
            accountId
        ]);
    }
    /**
     * Gets a transaction's status from the RPC with receipts
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#transaction-status-with-receipts)
     * @param txHash The hash of the transaction
     * @param accountId The NEAR account that signed the transaction
     * @returns {Promise<FinalExecutionOutcome>}
     */ async txStatusReceipts(txHash, accountId) {
        return this.sendJsonRpc('EXPERIMENTAL_tx_status', [
            $6CyfS.baseEncode(txHash),
            accountId
        ]);
    }
    /**
     * Query the RPC as [shown in the docs](https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts)
     * Query the RPC by passing an {@link RpcQueryRequest}
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#accounts--contracts}
     *
     * @typeParam T the shape of the returned query response
     */ async query(...args) {
        let result;
        if (args.length === 1) result = await this.sendJsonRpc('query', args[0]);
        else {
            const [path, data] = args;
            result = await this.sendJsonRpc('query', [
                path,
                data
            ]);
        }
        if (result && result.error) throw new $9ZP4J.TypedError(`Querying ${args} failed: ${result.error}.\n${JSON.stringify(result, null, 2)}`, $4VSha.getErrorTypeFromErrorMessage(result.error));
        return result;
    }
    /**
     * Query for block info from the RPC
     * pass block_id OR finality as blockQuery, not both
     * @see {@link https://docs.near.org/docs/interaction/rpc#block}
     *
     * @param blockQuery {@link BlockReference} (passing a {@link BlockId} is deprecated)
     */ async block(blockQuery) {
        const { finality: finality  } = blockQuery;
        let { blockId: blockId  } = blockQuery;
        if (typeof blockQuery !== 'object') {
            const deprecate = $d732473b1a2513cf$var$depd_1.default('JsonRpcProvider.block(blockId)');
            deprecate('use `block({ blockId })` or `block({ finality })` instead');
            blockId = blockQuery;
        }
        return this.sendJsonRpc('block', {
            block_id: blockId,
            finality: finality
        });
    }
    /**
     * Query changes in block from the RPC
     * pass block_id OR finality as blockQuery, not both
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#block-details)
     */ async blockChanges(blockQuery) {
        const { finality: finality  } = blockQuery;
        const { blockId: blockId  } = blockQuery;
        return this.sendJsonRpc('EXPERIMENTAL_changes_in_block', {
            block_id: blockId,
            finality: finality
        });
    }
    /**
     * Queries for details about a specific chunk appending details of receipts and transactions to the same chunk data provided by a block
     * @see {@link https://docs.near.org/docs/interaction/rpc#chunk}
     *
     * @param chunkId Hash of a chunk ID or shard ID
     */ async chunk(chunkId) {
        return this.sendJsonRpc('chunk', [
            chunkId
        ]);
    }
    /**
     * Query validators of the epoch defined by the given block id.
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#detailed-validator-status}
     *
     * @param blockId Block hash or height, or null for latest.
     */ async validators(blockId) {
        return this.sendJsonRpc('validators', [
            blockId
        ]);
    }
    /**
     * @deprecated
     * Gets the genesis config from RPC
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#genesis-config}
     */ async experimental_genesisConfig() {
        const deprecate = $d732473b1a2513cf$var$depd_1.default('JsonRpcProvider.experimental_protocolConfig()');
        deprecate('use `experimental_protocolConfig({ sync_checkpoint: \'genesis\' })` to fetch the up-to-date or genesis protocol config explicitly');
        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', {
            sync_checkpoint: 'genesis'
        });
    }
    /**
     * Gets the protocol config at a block from RPC
     * @see {@link }
     *
     * @param blockReference specifies the block to get the protocol config for
     */ async experimental_protocolConfig(blockReference) {
        return await this.sendJsonRpc('EXPERIMENTAL_protocol_config', blockReference);
    }
    /**
     * @deprecated Use {@link lightClientProof} instead
     */ async experimental_lightClientProof(request) {
        const deprecate = $d732473b1a2513cf$var$depd_1.default('JsonRpcProvider.experimental_lightClientProof(request)');
        deprecate('use `lightClientProof` instead');
        return await this.lightClientProof(request);
    }
    /**
     * Gets a light client execution proof for verifying execution outcomes
     * @see {@link https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof}
     */ async lightClientProof(request) {
        return await this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);
    }
    /**
     * Gets access key changes for a given array of accountIds
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-all)
     * @returns {Promise<ChangeResult>}
     */ async accessKeyChanges(accountIdArray, blockQuery) {
        const { finality: finality  } = blockQuery;
        const { blockId: blockId  } = blockQuery;
        return this.sendJsonRpc('EXPERIMENTAL_changes', {
            changes_type: 'all_access_key_changes',
            account_ids: accountIdArray,
            block_id: blockId,
            finality: finality
        });
    }
    /**
     * Gets single access key changes for a given array of access keys
     * pass block_id OR finality as blockQuery, not both
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-access-key-changes-single)
     * @returns {Promise<ChangeResult>}
     */ async singleAccessKeyChanges(accessKeyArray, blockQuery) {
        const { finality: finality  } = blockQuery;
        const { blockId: blockId  } = blockQuery;
        return this.sendJsonRpc('EXPERIMENTAL_changes', {
            changes_type: 'single_access_key_changes',
            keys: accessKeyArray,
            block_id: blockId,
            finality: finality
        });
    }
    /**
     * Gets account changes for a given array of accountIds
     * pass block_id OR finality as blockQuery, not both
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-account-changes)
     * @returns {Promise<ChangeResult>}
     */ async accountChanges(accountIdArray, blockQuery) {
        const { finality: finality  } = blockQuery;
        const { blockId: blockId  } = blockQuery;
        return this.sendJsonRpc('EXPERIMENTAL_changes', {
            changes_type: 'account_changes',
            account_ids: accountIdArray,
            block_id: blockId,
            finality: finality
        });
    }
    /**
     * Gets contract state changes for a given array of accountIds
     * pass block_id OR finality as blockQuery, not both
     * Note: If you pass a keyPrefix it must be base64 encoded
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-state-changes)
     * @returns {Promise<ChangeResult>}
     */ async contractStateChanges(accountIdArray, blockQuery, keyPrefix = '') {
        const { finality: finality  } = blockQuery;
        const { blockId: blockId  } = blockQuery;
        return this.sendJsonRpc('EXPERIMENTAL_changes', {
            changes_type: 'data_changes',
            account_ids: accountIdArray,
            key_prefix_base64: keyPrefix,
            block_id: blockId,
            finality: finality
        });
    }
    /**
     * Gets contract code changes for a given array of accountIds
     * pass block_id OR finality as blockQuery, not both
     * Note: Change is returned in a base64 encoded WASM file
     * See [docs for more info](https://docs.near.org/docs/develop/front-end/rpc#view-contract-code-changes)
     * @returns {Promise<ChangeResult>}
     */ async contractCodeChanges(accountIdArray, blockQuery) {
        const { finality: finality  } = blockQuery;
        const { blockId: blockId  } = blockQuery;
        return this.sendJsonRpc('EXPERIMENTAL_changes', {
            changes_type: 'contract_code_changes',
            account_ids: accountIdArray,
            block_id: blockId,
            finality: finality
        });
    }
    /**
     * Returns gas price for a specific block_height or block_hash.
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#gas-price}
     *
     * @param blockId Block hash or height, or null for latest.
     */ async gasPrice(blockId) {
        return await this.sendJsonRpc('gas_price', [
            blockId
        ]);
    }
    /**
     * Directly call the RPC specifying the method and params
     *
     * @param method RPC method
     * @param params Parameters to the method
     */ async sendJsonRpc(method, params) {
        const response = await $d732473b1a2513cf$var$exponential_backoff_1.default($d732473b1a2513cf$var$REQUEST_RETRY_WAIT, $d732473b1a2513cf$var$REQUEST_RETRY_NUMBER, $d732473b1a2513cf$var$REQUEST_RETRY_WAIT_BACKOFF, async ()=>{
            try {
                const request = {
                    method: method,
                    params: params,
                    id: $d732473b1a2513cf$var$_nextId++,
                    jsonrpc: '2.0'
                };
                const response1 = await $4iS3f.fetchJson(this.connection, JSON.stringify(request));
                if (response1.error) {
                    if (typeof response1.error.data === 'object') {
                        if (typeof response1.error.data.error_message === 'string' && typeof response1.error.data.error_type === 'string') // if error data has error_message and error_type properties, we consider that node returned an error in the old format
                        throw new $9ZP4J.TypedError(response1.error.data.error_message, response1.error.data.error_type);
                        throw $4VSha.parseRpcError(response1.error.data);
                    } else {
                        const errorMessage = `[${response1.error.code}] ${response1.error.message}: ${response1.error.data}`;
                        // NOTE: All this hackery is happening because structured errors not implemented
                        // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved
                        if (response1.error.data === 'Timeout' || errorMessage.includes('Timeout error') || errorMessage.includes('query has timed out')) throw new $9ZP4J.TypedError(errorMessage, 'TimeoutError');
                        throw new $9ZP4J.TypedError(errorMessage, $4VSha.getErrorTypeFromErrorMessage(response1.error.data));
                    }
                }
                // Success when response.error is not exist
                return response1;
            } catch (error) {
                if (error.type === 'TimeoutError') {
                    console.warn(`Retrying request to ${method} as it has timed out`, params);
                    return null;
                }
                throw error;
            }
        });
        const { result: result  } = response;
        // From jsonrpc spec:
        // result
        //   This member is REQUIRED on success.
        //   This member MUST NOT exist if there was an error invoking the method.
        if (typeof result === 'undefined') throw new $9ZP4J.TypedError(`Exceeded ${$d732473b1a2513cf$var$REQUEST_RETRY_NUMBER} attempts for request to ${method}.`, 'RetriesExceeded');
        return result;
    }
}
module.exports.JsonRpcProvider = $d732473b1a2513cf$var$JsonRpcProvider;

});
parcelRequire.register("9NoLj", function(module, exports) {
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */ 'use strict';
/**
 * Module exports.
 * @public
 */ module.exports = $721be5e2b11f299b$var$depd;
/**
 * Create deprecate for namespace in caller.
 */ function $721be5e2b11f299b$var$depd(namespace) {
    if (!namespace) throw new TypeError('argument namespace is required');
    function deprecate(message) {
    // no-op in browser
    }
    deprecate._file = undefined;
    deprecate._ignored = true;
    deprecate._namespace = namespace;
    deprecate._traced = false;
    deprecate._warned = Object.create(null);
    deprecate.function = $721be5e2b11f299b$var$wrapfunction;
    deprecate.property = $721be5e2b11f299b$var$wrapproperty;
    return deprecate;
}
/**
 * Return a wrapped function in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */ function $721be5e2b11f299b$var$wrapfunction(fn, message) {
    if (typeof fn !== 'function') throw new TypeError('argument fn must be a function');
    return fn;
}
/**
 * Wrap property in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */ function $721be5e2b11f299b$var$wrapproperty(obj, prop, message) {
    if (!obj || typeof obj !== 'object' && typeof obj !== 'function') throw new TypeError('argument obj must be object');
    var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (!descriptor) throw new TypeError('must call property on owner object');
    if (!descriptor.configurable) throw new TypeError('property must be configurable');
}

});

parcelRequire.register("4iS3f", function(module, exports) {
"use strict";
var $3222c557d021f7f7$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.fetchJson = void 0;

const $3222c557d021f7f7$var$http_errors_1 = $3222c557d021f7f7$var$__importDefault((parcelRequire("7Ct7k")));

const $3222c557d021f7f7$var$exponential_backoff_1 = $3222c557d021f7f7$var$__importDefault((parcelRequire("7XMBM")));

var $2drwM = parcelRequire("2drwM");
const $3222c557d021f7f7$var$START_WAIT_TIME_MS = 1000;
const $3222c557d021f7f7$var$BACKOFF_MULTIPLIER = 1.5;
const $3222c557d021f7f7$var$RETRY_NUMBER = 10;
async function $3222c557d021f7f7$var$fetchJson(connection, json) {
    let url = null;
    if (typeof connection === 'string') url = connection;
    else url = connection.url;
    const response = await $3222c557d021f7f7$var$exponential_backoff_1.default($3222c557d021f7f7$var$START_WAIT_TIME_MS, $3222c557d021f7f7$var$RETRY_NUMBER, $3222c557d021f7f7$var$BACKOFF_MULTIPLIER, async ()=>{
        try {
            const response1 = await fetch(url, {
                method: json ? 'POST' : 'GET',
                body: json ? json : undefined,
                headers: {
                    'Content-Type': 'application/json; charset=utf-8'
                }
            });
            if (!response1.ok) {
                if (response1.status === 503) {
                    console.warn(`Retrying HTTP request for ${url} as it's not available now`);
                    return null;
                }
                throw $3222c557d021f7f7$var$http_errors_1.default(response1.status, await response1.text());
            }
            return response1;
        } catch (error) {
            if (error.toString().includes('FetchError') || error.toString().includes('Failed to fetch')) {
                console.warn(`Retrying HTTP request for ${url} because of error: ${error}`);
                return null;
            }
            throw error;
        }
    });
    if (!response) throw new $2drwM.TypedError(`Exceeded ${$3222c557d021f7f7$var$RETRY_NUMBER} attempts for ${url}.`, 'RetriesExceeded');
    return await response.json();
}
module.exports.fetchJson = $3222c557d021f7f7$var$fetchJson;

});
parcelRequire.register("7Ct7k", function(module, exports) {
/*!
 * http-errors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */ 'use strict';

/**
 * Module dependencies.
 * @private
 */ var $58c2ab13265f74a3$var$deprecate = (parcelRequire("3NuVH"))('http-errors');

var $Y2Tfa = parcelRequire("Y2Tfa");

var $hJOOG = parcelRequire("hJOOG");

var $12Lgy = parcelRequire("12Lgy");

var $2YOos = parcelRequire("2YOos");
/**
 * Module exports.
 * @public
 */ module.exports = $58c2ab13265f74a3$var$createError;
module.exports.HttpError = $58c2ab13265f74a3$var$createHttpErrorConstructor();
module.exports.isHttpError = $58c2ab13265f74a3$var$createIsHttpErrorFunction(module.exports.HttpError);
// Populate exports for all constructors
$58c2ab13265f74a3$var$populateConstructorExports(module.exports, $hJOOG.codes, module.exports.HttpError);
/**
 * Get the code class of a status code.
 * @private
 */ function $58c2ab13265f74a3$var$codeClass(status) {
    return Number(String(status).charAt(0) + '00');
}
/**
 * Create a new HTTP Error.
 *
 * @returns {Error}
 * @public
 */ function $58c2ab13265f74a3$var$createError() {
    // so much arity going on ~_~
    var err;
    var msg;
    var status = 500;
    var props = {
    };
    for(var i = 0; i < arguments.length; i++){
        var arg = arguments[i];
        if (arg instanceof Error) {
            err = arg;
            status = err.status || err.statusCode || status;
            continue;
        }
        switch(typeof arg){
            case 'string':
                msg = arg;
                break;
            case 'number':
                status = arg;
                if (i !== 0) $58c2ab13265f74a3$var$deprecate('non-first-argument status code; replace with createError(' + arg + ', ...)');
                break;
            case 'object':
                props = arg;
                break;
        }
    }
    if (typeof status === 'number' && (status < 400 || status >= 600)) $58c2ab13265f74a3$var$deprecate('non-error status code; use only 4xx or 5xx status codes');
    if (typeof status !== 'number' || !$hJOOG[status] && (status < 400 || status >= 600)) status = 500;
    // constructor
    var HttpError = $58c2ab13265f74a3$var$createError[status] || $58c2ab13265f74a3$var$createError[$58c2ab13265f74a3$var$codeClass(status)];
    if (!err) {
        // create error
        err = HttpError ? new HttpError(msg) : new Error(msg || $hJOOG[status]);
        Error.captureStackTrace(err, $58c2ab13265f74a3$var$createError);
    }
    if (!HttpError || !(err instanceof HttpError) || err.status !== status) {
        // add properties to generic error
        err.expose = status < 500;
        err.status = err.statusCode = status;
    }
    for(var key in props)if (key !== 'status' && key !== 'statusCode') err[key] = props[key];
    return err;
}
/**
 * Create HTTP error abstract base class.
 * @private
 */ function $58c2ab13265f74a3$var$createHttpErrorConstructor() {
    function HttpError() {
        throw new TypeError('cannot construct abstract class');
    }
    $12Lgy(HttpError, Error);
    return HttpError;
}
/**
 * Create a constructor for a client error.
 * @private
 */ function $58c2ab13265f74a3$var$createClientErrorConstructor(HttpError, name, code) {
    var className = $58c2ab13265f74a3$var$toClassName(name);
    function ClientError(message) {
        // create the error object
        var msg = message != null ? message : $hJOOG[code];
        var err = new Error(msg);
        // capture a stack trace to the construction point
        Error.captureStackTrace(err, ClientError);
        // adjust the [[Prototype]]
        $Y2Tfa(err, ClientError.prototype);
        // redefine the error message
        Object.defineProperty(err, 'message', {
            enumerable: true,
            configurable: true,
            value: msg,
            writable: true
        });
        // redefine the error name
        Object.defineProperty(err, 'name', {
            enumerable: false,
            configurable: true,
            value: className,
            writable: true
        });
        return err;
    }
    $12Lgy(ClientError, HttpError);
    $58c2ab13265f74a3$var$nameFunc(ClientError, className);
    ClientError.prototype.status = code;
    ClientError.prototype.statusCode = code;
    ClientError.prototype.expose = true;
    return ClientError;
}
/**
 * Create function to test is a value is a HttpError.
 * @private
 */ function $58c2ab13265f74a3$var$createIsHttpErrorFunction(HttpError) {
    return function isHttpError(val) {
        if (!val || typeof val !== 'object') return false;
        if (val instanceof HttpError) return true;
        return val instanceof Error && typeof val.expose === 'boolean' && typeof val.statusCode === 'number' && val.status === val.statusCode;
    };
}
/**
 * Create a constructor for a server error.
 * @private
 */ function $58c2ab13265f74a3$var$createServerErrorConstructor(HttpError, name, code) {
    var className = $58c2ab13265f74a3$var$toClassName(name);
    function ServerError(message) {
        // create the error object
        var msg = message != null ? message : $hJOOG[code];
        var err = new Error(msg);
        // capture a stack trace to the construction point
        Error.captureStackTrace(err, ServerError);
        // adjust the [[Prototype]]
        $Y2Tfa(err, ServerError.prototype);
        // redefine the error message
        Object.defineProperty(err, 'message', {
            enumerable: true,
            configurable: true,
            value: msg,
            writable: true
        });
        // redefine the error name
        Object.defineProperty(err, 'name', {
            enumerable: false,
            configurable: true,
            value: className,
            writable: true
        });
        return err;
    }
    $12Lgy(ServerError, HttpError);
    $58c2ab13265f74a3$var$nameFunc(ServerError, className);
    ServerError.prototype.status = code;
    ServerError.prototype.statusCode = code;
    ServerError.prototype.expose = false;
    return ServerError;
}
/**
 * Set the name of a function, if possible.
 * @private
 */ function $58c2ab13265f74a3$var$nameFunc(func, name) {
    var desc = Object.getOwnPropertyDescriptor(func, 'name');
    if (desc && desc.configurable) {
        desc.value = name;
        Object.defineProperty(func, 'name', desc);
    }
}
/**
 * Populate the exports object with constructors for every error class.
 * @private
 */ function $58c2ab13265f74a3$var$populateConstructorExports(exports, codes, HttpError) {
    codes.forEach(function forEachCode(code) {
        var CodeError;
        var name = $2YOos($hJOOG[code]);
        switch($58c2ab13265f74a3$var$codeClass(code)){
            case 400:
                CodeError = $58c2ab13265f74a3$var$createClientErrorConstructor(HttpError, name, code);
                break;
            case 500:
                CodeError = $58c2ab13265f74a3$var$createServerErrorConstructor(HttpError, name, code);
                break;
        }
        if (CodeError) {
            // export the constructor
            exports[code] = CodeError;
            exports[name] = CodeError;
        }
    });
    // backwards-compatibility
    exports["I'mateapot"] = $58c2ab13265f74a3$var$deprecate.function(exports.ImATeapot, '"I\'mateapot"; use "ImATeapot" instead');
}
/**
 * Get a class name from a name identifier.
 * @private
 */ function $58c2ab13265f74a3$var$toClassName(name) {
    return name.substr(-5) !== 'Error' ? name + 'Error' : name;
}

});
parcelRequire.register("3NuVH", function(module, exports) {
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */ 'use strict';
/**
 * Module exports.
 * @public
 */ module.exports = $2c3df0b14c86530a$var$depd;
/**
 * Create deprecate for namespace in caller.
 */ function $2c3df0b14c86530a$var$depd(namespace) {
    if (!namespace) throw new TypeError('argument namespace is required');
    function deprecate(message) {
    // no-op in browser
    }
    deprecate._file = undefined;
    deprecate._ignored = true;
    deprecate._namespace = namespace;
    deprecate._traced = false;
    deprecate._warned = Object.create(null);
    deprecate.function = $2c3df0b14c86530a$var$wrapfunction;
    deprecate.property = $2c3df0b14c86530a$var$wrapproperty;
    return deprecate;
}
/**
 * Return a wrapped function in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */ function $2c3df0b14c86530a$var$wrapfunction(fn, message) {
    if (typeof fn !== 'function') throw new TypeError('argument fn must be a function');
    return fn;
}
/**
 * Wrap property in a deprecation message.
 *
 * This is a no-op version of the wrapper, which does nothing but call
 * validation.
 */ function $2c3df0b14c86530a$var$wrapproperty(obj, prop, message) {
    if (!obj || typeof obj !== 'object' && typeof obj !== 'function') throw new TypeError('argument obj must be object');
    var descriptor = Object.getOwnPropertyDescriptor(obj, prop);
    if (!descriptor) throw new TypeError('must call property on owner object');
    if (!descriptor.configurable) throw new TypeError('property must be configurable');
}

});

parcelRequire.register("Y2Tfa", function(module, exports) {
'use strict';
/* eslint no-proto: 0 */ module.exports = Object.setPrototypeOf || (({
    __proto__: []
}) instanceof Array ? $0b47d89c4e01e92f$var$setProtoOf : $0b47d89c4e01e92f$var$mixinProperties);
function $0b47d89c4e01e92f$var$setProtoOf(obj, proto) {
    obj.__proto__ = proto;
    return obj;
}
function $0b47d89c4e01e92f$var$mixinProperties(obj, proto) {
    for(var prop in proto)if (!Object.prototype.hasOwnProperty.call(obj, prop)) obj[prop] = proto[prop];
    return obj;
}

});

parcelRequire.register("hJOOG", function(module, exports) {
/*!
 * statuses
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */ 'use strict';

var $c5hgM = parcelRequire("c5hgM");
/**
 * Module exports.
 * @public
 */ module.exports = $ce9e0ebfae298137$var$status;
// status code to message map
$ce9e0ebfae298137$var$status.STATUS_CODES = $c5hgM;
// array of status codes
$ce9e0ebfae298137$var$status.codes = $ce9e0ebfae298137$var$populateStatusesMap($ce9e0ebfae298137$var$status, $c5hgM);
// status codes for redirects
$ce9e0ebfae298137$var$status.redirect = {
    300: true,
    301: true,
    302: true,
    303: true,
    305: true,
    307: true,
    308: true
};
// status codes for empty bodies
$ce9e0ebfae298137$var$status.empty = {
    204: true,
    205: true,
    304: true
};
// status codes for when you should retry the request
$ce9e0ebfae298137$var$status.retry = {
    502: true,
    503: true,
    504: true
};
/**
 * Populate the statuses map for given codes.
 * @private
 */ function $ce9e0ebfae298137$var$populateStatusesMap(statuses, codes) {
    var arr = [];
    Object.keys(codes).forEach(function forEachCode(code) {
        var message = codes[code];
        var status = Number(code);
        // Populate properties
        statuses[status] = message;
        statuses[message] = status;
        statuses[message.toLowerCase()] = status;
        // Add to array
        arr.push(status);
    });
    return arr;
}
/**
 * Get the status code.
 *
 * Given a number, this will throw if it is not a known status
 * code, otherwise the code will be returned. Given a string,
 * the string will be parsed for a number and return the code
 * if valid, otherwise will lookup the code assuming this is
 * the status message.
 *
 * @param {string|number} code
 * @returns {number}
 * @public
 */ function $ce9e0ebfae298137$var$status(code) {
    if (typeof code === 'number') {
        if (!$ce9e0ebfae298137$var$status[code]) throw new Error('invalid status code: ' + code);
        return code;
    }
    if (typeof code !== 'string') throw new TypeError('code must be a number or string');
    // '403'
    var n = parseInt(code, 10);
    if (!isNaN(n)) {
        if (!$ce9e0ebfae298137$var$status[n]) throw new Error('invalid status code: ' + n);
        return n;
    }
    n = $ce9e0ebfae298137$var$status[code.toLowerCase()];
    if (!n) throw new Error('invalid status message: "' + code + '"');
    return n;
}

});
parcelRequire.register("c5hgM", function(module, exports) {
module.exports = JSON.parse("{\"100\":\"Continue\",\"101\":\"Switching Protocols\",\"102\":\"Processing\",\"103\":\"Early Hints\",\"200\":\"OK\",\"201\":\"Created\",\"202\":\"Accepted\",\"203\":\"Non-Authoritative Information\",\"204\":\"No Content\",\"205\":\"Reset Content\",\"206\":\"Partial Content\",\"207\":\"Multi-Status\",\"208\":\"Already Reported\",\"226\":\"IM Used\",\"300\":\"Multiple Choices\",\"301\":\"Moved Permanently\",\"302\":\"Found\",\"303\":\"See Other\",\"304\":\"Not Modified\",\"305\":\"Use Proxy\",\"306\":\"(Unused)\",\"307\":\"Temporary Redirect\",\"308\":\"Permanent Redirect\",\"400\":\"Bad Request\",\"401\":\"Unauthorized\",\"402\":\"Payment Required\",\"403\":\"Forbidden\",\"404\":\"Not Found\",\"405\":\"Method Not Allowed\",\"406\":\"Not Acceptable\",\"407\":\"Proxy Authentication Required\",\"408\":\"Request Timeout\",\"409\":\"Conflict\",\"410\":\"Gone\",\"411\":\"Length Required\",\"412\":\"Precondition Failed\",\"413\":\"Payload Too Large\",\"414\":\"URI Too Long\",\"415\":\"Unsupported Media Type\",\"416\":\"Range Not Satisfiable\",\"417\":\"Expectation Failed\",\"418\":\"I'm a teapot\",\"421\":\"Misdirected Request\",\"422\":\"Unprocessable Entity\",\"423\":\"Locked\",\"424\":\"Failed Dependency\",\"425\":\"Unordered Collection\",\"426\":\"Upgrade Required\",\"428\":\"Precondition Required\",\"429\":\"Too Many Requests\",\"431\":\"Request Header Fields Too Large\",\"451\":\"Unavailable For Legal Reasons\",\"500\":\"Internal Server Error\",\"501\":\"Not Implemented\",\"502\":\"Bad Gateway\",\"503\":\"Service Unavailable\",\"504\":\"Gateway Timeout\",\"505\":\"HTTP Version Not Supported\",\"506\":\"Variant Also Negotiates\",\"507\":\"Insufficient Storage\",\"508\":\"Loop Detected\",\"509\":\"Bandwidth Limit Exceeded\",\"510\":\"Not Extended\",\"511\":\"Network Authentication Required\"}");

});


parcelRequire.register("12Lgy", function(module, exports) {
if (typeof Object.create === 'function') // implementation from standard node.js 'util' module
module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
        ctor.super_ = superCtor;
        ctor.prototype = Object.create(superCtor.prototype, {
            constructor: {
                value: ctor,
                enumerable: false,
                writable: true,
                configurable: true
            }
        });
    }
};
else // old school shim for old browsers
module.exports = function inherits1(ctor, superCtor) {
    if (superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
};

});

parcelRequire.register("2YOos", function(module, exports) {
/*!
 * toidentifier
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */ /**
 * Module exports.
 * @public
 */ module.exports = $22b846708ab1ea94$var$toIdentifier;
/**
 * Trasform the given string into a JavaScript identifier
 *
 * @param {string} str
 * @returns {string}
 * @public
 */ function $22b846708ab1ea94$var$toIdentifier(str) {
    return str.split(' ').map(function(token) {
        return token.slice(0, 1).toUpperCase() + token.slice(1);
    }).join('').replace(/[^ _0-9a-z]/gi, '');
}

});


parcelRequire.register("7XMBM", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
async function $5cc3bfad3cf5fe28$var$exponentialBackoff(startWaitTime, retryNumber, waitBackoff, getResult) {
    // TODO: jitter?
    let waitTime = startWaitTime;
    for(let i = 0; i < retryNumber; i++){
        const result = await getResult();
        if (result) return result;
        await $5cc3bfad3cf5fe28$var$sleep(waitTime);
        waitTime *= waitBackoff;
    }
    return null;
}
module.exports.default = $5cc3bfad3cf5fe28$var$exponentialBackoff;
// Sleep given number of millis.
function $5cc3bfad3cf5fe28$var$sleep(millis) {
    return new Promise((resolve)=>setTimeout(resolve, millis)
    );
}

});


parcelRequire.register("9ZP4J", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.ErrorContext = module.exports.TypedError = module.exports.ArgumentTypeError = module.exports.PositionalArgsError = void 0;
class $74716e114589bf38$var$PositionalArgsError extends Error {
    constructor(){
        super('Contract method calls expect named arguments wrapped in object, e.g. { argName1: argValue1, argName2: argValue2 }');
    }
}
module.exports.PositionalArgsError = $74716e114589bf38$var$PositionalArgsError;
class $74716e114589bf38$var$ArgumentTypeError extends Error {
    constructor(argName, argType, argValue){
        super(`Expected ${argType} for '${argName}' argument, but got '${JSON.stringify(argValue)}'`);
    }
}
module.exports.ArgumentTypeError = $74716e114589bf38$var$ArgumentTypeError;
class $74716e114589bf38$var$TypedError extends Error {
    constructor(message, type, context){
        super(message);
        this.type = type || 'UntypedError';
        this.context = context;
    }
}
module.exports.TypedError = $74716e114589bf38$var$TypedError;
class $74716e114589bf38$var$ErrorContext {
    constructor(transactionHash){
        this.transactionHash = transactionHash;
    }
}
module.exports.ErrorContext = $74716e114589bf38$var$ErrorContext;

});

parcelRequire.register("4VSha", function(module, exports) {
"use strict";
var $397696592eea6084$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.getErrorTypeFromErrorMessage = module.exports.formatError = module.exports.parseResultError = module.exports.parseRpcError = module.exports.ServerError = void 0;

const $397696592eea6084$var$mustache_1 = $397696592eea6084$var$__importDefault((parcelRequire("bS6Pg")));

const $397696592eea6084$var$rpc_error_schema_json_1 = $397696592eea6084$var$__importDefault((parcelRequire("kma5f")));

const $397696592eea6084$var$error_messages_json_1 = $397696592eea6084$var$__importDefault((parcelRequire("lvaE4")));

var $54fqz = parcelRequire("54fqz");

var $9ZP4J = parcelRequire("9ZP4J");
const $397696592eea6084$var$mustacheHelpers = {
    formatNear: ()=>(n, render)=>$54fqz.utils.format.formatNearAmount(render(n))
};
class $397696592eea6084$var$ServerError extends $9ZP4J.TypedError {
}
module.exports.ServerError = $397696592eea6084$var$ServerError;
class $397696592eea6084$var$ServerTransactionError extends $397696592eea6084$var$ServerError {
}
function $397696592eea6084$var$parseRpcError(errorObj) {
    const result = {
    };
    const errorClassName = $397696592eea6084$var$walkSubtype(errorObj, $397696592eea6084$var$rpc_error_schema_json_1.default.schema, result, '');
    // NOTE: This assumes that all errors extend TypedError
    const error = new $397696592eea6084$var$ServerError($397696592eea6084$var$formatError(errorClassName, result), errorClassName);
    Object.assign(error, result);
    return error;
}
module.exports.parseRpcError = $397696592eea6084$var$parseRpcError;
function $397696592eea6084$var$parseResultError(result) {
    const server_error = $397696592eea6084$var$parseRpcError(result.status.Failure);
    const server_tx_error = new $397696592eea6084$var$ServerTransactionError();
    Object.assign(server_tx_error, server_error);
    server_tx_error.type = server_error.type;
    server_tx_error.message = server_error.message;
    server_tx_error.transaction_outcome = result.transaction_outcome;
    return server_tx_error;
}
module.exports.parseResultError = $397696592eea6084$var$parseResultError;
function $397696592eea6084$var$formatError(errorClassName, errorData) {
    if (typeof $397696592eea6084$var$error_messages_json_1.default[errorClassName] === 'string') return $397696592eea6084$var$mustache_1.default.render($397696592eea6084$var$error_messages_json_1.default[errorClassName], {
        ...errorData,
        ...$397696592eea6084$var$mustacheHelpers
    });
    return JSON.stringify(errorData);
}
module.exports.formatError = $397696592eea6084$var$formatError;
/**
 * Walks through defined schema returning error(s) recursively
 * @param errorObj The error to be parsed
 * @param schema A defined schema in JSON mapping to the RPC errors
 * @param result An object used in recursion or called directly
 * @param typeName The human-readable error type name as defined in the JSON mapping
 */ function $397696592eea6084$var$walkSubtype(errorObj, schema, result, typeName) {
    let error;
    let type;
    let errorTypeName;
    for(const errorName in schema){
        if ($397696592eea6084$var$isString(errorObj[errorName])) // Return early if error type is in a schema
        return errorObj[errorName];
        if ($397696592eea6084$var$isObject(errorObj[errorName])) {
            error = errorObj[errorName];
            type = schema[errorName];
            errorTypeName = errorName;
        } else if ($397696592eea6084$var$isObject(errorObj.kind) && $397696592eea6084$var$isObject(errorObj.kind[errorName])) {
            error = errorObj.kind[errorName];
            type = schema[errorName];
            errorTypeName = errorName;
        } else continue;
    }
    if (error && type) {
        for (const prop of Object.keys(type.props))result[prop] = error[prop];
        return $397696592eea6084$var$walkSubtype(error, schema, result, errorTypeName);
    } else {
        // TODO: is this the right thing to do?
        result.kind = errorObj;
        return typeName;
    }
}
function $397696592eea6084$var$getErrorTypeFromErrorMessage(errorMessage) {
    return 'UntypedError';
}
module.exports.getErrorTypeFromErrorMessage = $397696592eea6084$var$getErrorTypeFromErrorMessage;
/**
 * Helper function determining if the argument is an object
 * @param n Value to check
 */ function $397696592eea6084$var$isObject(n) {
    return Object.prototype.toString.call(n) === '[object Object]';
}
/**
 * Helper function determining if the argument is a string
 * @param n Value to check
 */ function $397696592eea6084$var$isString(n) {
    return Object.prototype.toString.call(n) === '[object String]';
}

});
parcelRequire.register("bS6Pg", function(module, exports) {
(function(global, factory) {
    typeof module.exports === 'object' && "object" !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = global || self, global.Mustache = factory());
})(module.exports, function() {
    'use strict';
    /*!
   * mustache.js - Logic-less {{mustache}} templates with JavaScript
   * http://github.com/janl/mustache.js
   */ var objectToString = Object.prototype.toString;
    var isArray = Array.isArray || function isArrayPolyfill(object) {
        return objectToString.call(object) === '[object Array]';
    };
    function isFunction(object) {
        return typeof object === 'function';
    }
    /**
   * More correct typeof string handling array
   * which normally returns typeof 'object'
   */ function typeStr(obj) {
        return isArray(obj) ? 'array' : typeof obj;
    }
    function escapeRegExp(string) {
        return string.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
    }
    /**
   * Null safe way of checking whether or not an object,
   * including its prototype, has a given property
   */ function hasProperty(obj, propName) {
        return obj != null && typeof obj === 'object' && propName in obj;
    }
    /**
   * Safe way of detecting whether or not the given thing is a primitive and
   * whether it has the given property
   */ function primitiveHasOwnProperty(primitive, propName) {
        return primitive != null && typeof primitive !== 'object' && primitive.hasOwnProperty && primitive.hasOwnProperty(propName);
    }
    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577
    // See https://github.com/janl/mustache.js/issues/189
    var regExpTest = RegExp.prototype.test;
    function testRegExp(re, string) {
        return regExpTest.call(re, string);
    }
    var nonSpaceRe = /\S/;
    function isWhitespace(string) {
        return !testRegExp(nonSpaceRe, string);
    }
    var entityMap = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#39;',
        '/': '&#x2F;',
        '`': '&#x60;',
        '=': '&#x3D;'
    };
    function escapeHtml(string) {
        return String(string).replace(/[&<>"'`=\/]/g, function fromEntityMap(s) {
            return entityMap[s];
        });
    }
    var whiteRe = /\s*/;
    var spaceRe = /\s+/;
    var equalsRe = /\s*=/;
    var curlyRe = /\s*\}/;
    var tagRe = /#|\^|\/|>|\{|&|=|!/;
    /**
   * Breaks up the given `template` string into a tree of tokens. If the `tags`
   * argument is given here it must be an array with two string values: the
   * opening and closing tags used in the template (e.g. [ "<%", "%>" ]). Of
   * course, the default is to use mustaches (i.e. mustache.tags).
   *
   * A token is an array with at least 4 elements. The first element is the
   * mustache symbol that was used inside the tag, e.g. "#" or "&". If the tag
   * did not contain a symbol (i.e. {{myValue}}) this element is "name". For
   * all text that appears outside a symbol this element is "text".
   *
   * The second element of a token is its "value". For mustache tags this is
   * whatever else was inside the tag besides the opening symbol. For text tokens
   * this is the text itself.
   *
   * The third and fourth elements of the token are the start and end indices,
   * respectively, of the token in the original template.
   *
   * Tokens that are the root node of a subtree contain two more elements: 1) an
   * array of tokens in the subtree and 2) the index in the original template at
   * which the closing tag for that section begins.
   *
   * Tokens for partials also contain two more elements: 1) a string value of
   * indendation prior to that tag and 2) the index of that tag on that line -
   * eg a value of 2 indicates the partial is the third tag on this line.
   */ function parseTemplate(template, tags) {
        if (!template) return [];
        var lineHasNonSpace = false;
        var sections = []; // Stack to hold section tokens
        var tokens = []; // Buffer to hold the tokens
        var spaces = []; // Indices of whitespace tokens on the current line
        var hasTag = false; // Is there a {{tag}} on the current line?
        var nonSpace = false; // Is there a non-space char on the current line?
        var indentation = ''; // Tracks indentation for tags that use it
        var tagIndex = 0; // Stores a count of number of tags encountered on a line
        // Strips all whitespace tokens array for the current line
        // if there was a {{#tag}} on it and otherwise only space.
        function stripSpace() {
            if (hasTag && !nonSpace) while(spaces.length)delete tokens[spaces.pop()];
            else spaces = [];
            hasTag = false;
            nonSpace = false;
        }
        var openingTagRe, closingTagRe, closingCurlyRe;
        function compileTags(tagsToCompile) {
            if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);
            if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);
            openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\s*');
            closingTagRe = new RegExp('\\s*' + escapeRegExp(tagsToCompile[1]));
            closingCurlyRe = new RegExp('\\s*' + escapeRegExp('}' + tagsToCompile[1]));
        }
        compileTags(tags || mustache.tags);
        var scanner = new Scanner(template);
        var start, type, value, chr, token, openSection;
        while(!scanner.eos()){
            start = scanner.pos;
            // Match any text between tags.
            value = scanner.scanUntil(openingTagRe);
            if (value) for(var i = 0, valueLength = value.length; i < valueLength; ++i){
                chr = value.charAt(i);
                if (isWhitespace(chr)) {
                    spaces.push(tokens.length);
                    indentation += chr;
                } else {
                    nonSpace = true;
                    lineHasNonSpace = true;
                    indentation += ' ';
                }
                tokens.push([
                    'text',
                    chr,
                    start,
                    start + 1
                ]);
                start += 1;
                // Check for whitespace on the current line.
                if (chr === '\n') {
                    stripSpace();
                    indentation = '';
                    tagIndex = 0;
                    lineHasNonSpace = false;
                }
            }
            // Match the opening tag.
            if (!scanner.scan(openingTagRe)) break;
            hasTag = true;
            // Get the tag type.
            type = scanner.scan(tagRe) || 'name';
            scanner.scan(whiteRe);
            // Get the tag value.
            if (type === '=') {
                value = scanner.scanUntil(equalsRe);
                scanner.scan(equalsRe);
                scanner.scanUntil(closingTagRe);
            } else if (type === '{') {
                value = scanner.scanUntil(closingCurlyRe);
                scanner.scan(curlyRe);
                scanner.scanUntil(closingTagRe);
                type = '&';
            } else value = scanner.scanUntil(closingTagRe);
            // Match the closing tag.
            if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);
            if (type == '>') token = [
                type,
                value,
                start,
                scanner.pos,
                indentation,
                tagIndex,
                lineHasNonSpace
            ];
            else token = [
                type,
                value,
                start,
                scanner.pos
            ];
            tagIndex++;
            tokens.push(token);
            if (type === '#' || type === '^') sections.push(token);
            else if (type === '/') {
                // Check section nesting.
                openSection = sections.pop();
                if (!openSection) throw new Error('Unopened section "' + value + '" at ' + start);
                if (openSection[1] !== value) throw new Error('Unclosed section "' + openSection[1] + '" at ' + start);
            } else if (type === 'name' || type === '{' || type === '&') nonSpace = true;
            else if (type === '=') // Set the tags for the next time around.
            compileTags(value);
        }
        stripSpace();
        // Make sure there are no open sections when we're done.
        openSection = sections.pop();
        if (openSection) throw new Error('Unclosed section "' + openSection[1] + '" at ' + scanner.pos);
        return nestTokens(squashTokens(tokens));
    }
    /**
   * Combines the values of consecutive text tokens in the given `tokens` array
   * to a single token.
   */ function squashTokens(tokens) {
        var squashedTokens = [];
        var token, lastToken;
        for(var i = 0, numTokens = tokens.length; i < numTokens; ++i){
            token = tokens[i];
            if (token) {
                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {
                    lastToken[1] += token[1];
                    lastToken[3] = token[3];
                } else {
                    squashedTokens.push(token);
                    lastToken = token;
                }
            }
        }
        return squashedTokens;
    }
    /**
   * Forms the given array of `tokens` into a nested tree structure where
   * tokens that represent a section have two additional items: 1) an array of
   * all tokens that appear in that section and 2) the index in the original
   * template that represents the end of that section.
   */ function nestTokens(tokens) {
        var nestedTokens = [];
        var collector = nestedTokens;
        var sections = [];
        var token, section;
        for(var i = 0, numTokens = tokens.length; i < numTokens; ++i){
            token = tokens[i];
            switch(token[0]){
                case '#':
                case '^':
                    collector.push(token);
                    sections.push(token);
                    collector = token[4] = [];
                    break;
                case '/':
                    section = sections.pop();
                    section[5] = token[2];
                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;
                    break;
                default:
                    collector.push(token);
            }
        }
        return nestedTokens;
    }
    /**
   * A simple string scanner that is used by the template parser to find
   * tokens in template strings.
   */ function Scanner(string) {
        this.string = string;
        this.tail = string;
        this.pos = 0;
    }
    /**
   * Returns `true` if the tail is empty (end of string).
   */ Scanner.prototype.eos = function eos() {
        return this.tail === '';
    };
    /**
   * Tries to match the given regular expression at the current position.
   * Returns the matched text if it can match, the empty string otherwise.
   */ Scanner.prototype.scan = function scan(re) {
        var match = this.tail.match(re);
        if (!match || match.index !== 0) return '';
        var string = match[0];
        this.tail = this.tail.substring(string.length);
        this.pos += string.length;
        return string;
    };
    /**
   * Skips all text until the given regular expression can be matched. Returns
   * the skipped string, which is the entire tail if no match can be made.
   */ Scanner.prototype.scanUntil = function scanUntil(re) {
        var index = this.tail.search(re), match;
        switch(index){
            case -1:
                match = this.tail;
                this.tail = '';
                break;
            case 0:
                match = '';
                break;
            default:
                match = this.tail.substring(0, index);
                this.tail = this.tail.substring(index);
        }
        this.pos += match.length;
        return match;
    };
    /**
   * Represents a rendering context by wrapping a view object and
   * maintaining a reference to the parent context.
   */ function Context(view, parentContext) {
        this.view = view;
        this.cache = {
            '.': this.view
        };
        this.parent = parentContext;
    }
    /**
   * Creates a new context using the given view with this context
   * as the parent.
   */ Context.prototype.push = function push(view) {
        return new Context(view, this);
    };
    /**
   * Returns the value of the given name in this context, traversing
   * up the context hierarchy if the value is absent in this context's view.
   */ Context.prototype.lookup = function lookup(name) {
        var cache = this.cache;
        var value;
        if (cache.hasOwnProperty(name)) value = cache[name];
        else {
            var context = this, intermediateValue, names, index, lookupHit = false;
            while(context){
                if (name.indexOf('.') > 0) {
                    intermediateValue = context.view;
                    names = name.split('.');
                    index = 0;
                    /**
           * Using the dot notion path in `name`, we descend through the
           * nested objects.
           *
           * To be certain that the lookup has been successful, we have to
           * check if the last object in the path actually has the property
           * we are looking for. We store the result in `lookupHit`.
           *
           * This is specially necessary for when the value has been set to
           * `undefined` and we want to avoid looking up parent contexts.
           *
           * In the case where dot notation is used, we consider the lookup
           * to be successful even if the last "object" in the path is
           * not actually an object but a primitive (e.g., a string, or an
           * integer), because it is sometimes useful to access a property
           * of an autoboxed primitive, such as the length of a string.
           **/ while(intermediateValue != null && index < names.length){
                        if (index === names.length - 1) lookupHit = hasProperty(intermediateValue, names[index]) || primitiveHasOwnProperty(intermediateValue, names[index]);
                        intermediateValue = intermediateValue[names[index++]];
                    }
                } else {
                    intermediateValue = context.view[name];
                    /**
           * Only checking against `hasProperty`, which always returns `false` if
           * `context.view` is not an object. Deliberately omitting the check
           * against `primitiveHasOwnProperty` if dot notation is not used.
           *
           * Consider this example:
           * ```
           * Mustache.render("The length of a football field is {{#length}}{{length}}{{/length}}.", {length: "100 yards"})
           * ```
           *
           * If we were to check also against `primitiveHasOwnProperty`, as we do
           * in the dot notation case, then render call would return:
           *
           * "The length of a football field is 9."
           *
           * rather than the expected:
           *
           * "The length of a football field is 100 yards."
           **/ lookupHit = hasProperty(context.view, name);
                }
                if (lookupHit) {
                    value = intermediateValue;
                    break;
                }
                context = context.parent;
            }
            cache[name] = value;
        }
        if (isFunction(value)) value = value.call(this.view);
        return value;
    };
    /**
   * A Writer knows how to take a stream of tokens and render them to a
   * string, given a context. It also maintains a cache of templates to
   * avoid the need to parse the same template twice.
   */ function Writer() {
        this.templateCache = {
            _cache: {
            },
            set: function set(key, value) {
                this._cache[key] = value;
            },
            get: function get(key) {
                return this._cache[key];
            },
            clear: function clear() {
                this._cache = {
                };
            }
        };
    }
    /**
   * Clears all cached templates in this writer.
   */ Writer.prototype.clearCache = function clearCache() {
        if (typeof this.templateCache !== 'undefined') this.templateCache.clear();
    };
    /**
   * Parses and caches the given `template` according to the given `tags` or
   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens
   * that is generated from the parse.
   */ Writer.prototype.parse = function parse(template, tags) {
        var cache = this.templateCache;
        var cacheKey = template + ':' + (tags || mustache.tags).join(':');
        var isCacheEnabled = typeof cache !== 'undefined';
        var tokens = isCacheEnabled ? cache.get(cacheKey) : undefined;
        if (tokens == undefined) {
            tokens = parseTemplate(template, tags);
            isCacheEnabled && cache.set(cacheKey, tokens);
        }
        return tokens;
    };
    /**
   * High-level method that is used to render the given `template` with
   * the given `view`.
   *
   * The optional `partials` argument may be an object that contains the
   * names and templates of partials that are used in the template. It may
   * also be a function that is used to load partial templates on the fly
   * that takes a single argument: the name of the partial.
   *
   * If the optional `config` argument is given here, then it should be an
   * object with a `tags` attribute or an `escape` attribute or both.
   * If an array is passed, then it will be interpreted the same way as
   * a `tags` attribute on a `config` object.
   *
   * The `tags` attribute of a `config` object must be an array with two
   * string values: the opening and closing tags used in the template (e.g.
   * [ "<%", "%>" ]). The default is to mustache.tags.
   *
   * The `escape` attribute of a `config` object must be a function which
   * accepts a string as input and outputs a safely escaped string.
   * If an `escape` function is not provided, then an HTML-safe string
   * escaping function is used as the default.
   */ Writer.prototype.render = function render(template, view, partials, config) {
        var tags = this.getConfigTags(config);
        var tokens = this.parse(template, tags);
        var context = view instanceof Context ? view : new Context(view, undefined);
        return this.renderTokens(tokens, context, partials, template, config);
    };
    /**
   * Low-level method that renders the given array of `tokens` using
   * the given `context` and `partials`.
   *
   * Note: The `originalTemplate` is only ever used to extract the portion
   * of the original template that was contained in a higher-order section.
   * If the template doesn't use higher-order sections, this argument may
   * be omitted.
   */ Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate, config) {
        var buffer = '';
        var token, symbol, value;
        for(var i = 0, numTokens = tokens.length; i < numTokens; ++i){
            value = undefined;
            token = tokens[i];
            symbol = token[0];
            if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate, config);
            else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate, config);
            else if (symbol === '>') value = this.renderPartial(token, context, partials, config);
            else if (symbol === '&') value = this.unescapedValue(token, context);
            else if (symbol === 'name') value = this.escapedValue(token, context, config);
            else if (symbol === 'text') value = this.rawValue(token);
            if (value !== undefined) buffer += value;
        }
        return buffer;
    };
    Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate, config) {
        var self = this;
        var buffer = '';
        var value = context.lookup(token[1]);
        // This function is used to render an arbitrary template
        // in the current context by higher-order sections.
        function subRender(template) {
            return self.render(template, context, partials, config);
        }
        if (!value) return;
        if (isArray(value)) for(var j = 0, valueLength = value.length; j < valueLength; ++j)buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate, config);
        else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate, config);
        else if (isFunction(value)) {
            if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template');
            // Extract the portion of the original template that the section contains.
            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);
            if (value != null) buffer += value;
        } else buffer += this.renderTokens(token[4], context, partials, originalTemplate, config);
        return buffer;
    };
    Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate, config) {
        var value = context.lookup(token[1]);
        // Use JavaScript's definition of falsy. Include empty arrays.
        // See https://github.com/janl/mustache.js/issues/186
        if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate, config);
    };
    Writer.prototype.indentPartial = function indentPartial(partial, indentation, lineHasNonSpace) {
        var filteredIndentation = indentation.replace(/[^ \t]/g, '');
        var partialByNl = partial.split('\n');
        for(var i = 0; i < partialByNl.length; i++)if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) partialByNl[i] = filteredIndentation + partialByNl[i];
        return partialByNl.join('\n');
    };
    Writer.prototype.renderPartial = function renderPartial(token, context, partials, config) {
        if (!partials) return;
        var tags = this.getConfigTags(config);
        var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];
        if (value != null) {
            var lineHasNonSpace = token[6];
            var tagIndex = token[5];
            var indentation = token[4];
            var indentedValue = value;
            if (tagIndex == 0 && indentation) indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);
            var tokens = this.parse(indentedValue, tags);
            return this.renderTokens(tokens, context, partials, indentedValue, config);
        }
    };
    Writer.prototype.unescapedValue = function unescapedValue(token, context) {
        var value = context.lookup(token[1]);
        if (value != null) return value;
    };
    Writer.prototype.escapedValue = function escapedValue(token, context, config) {
        var escape = this.getConfigEscape(config) || mustache.escape;
        var value = context.lookup(token[1]);
        if (value != null) return typeof value === 'number' && escape === mustache.escape ? String(value) : escape(value);
    };
    Writer.prototype.rawValue = function rawValue(token) {
        return token[1];
    };
    Writer.prototype.getConfigTags = function getConfigTags(config) {
        if (isArray(config)) return config;
        else if (config && typeof config === 'object') return config.tags;
        else return undefined;
    };
    Writer.prototype.getConfigEscape = function getConfigEscape(config) {
        if (config && typeof config === 'object' && !isArray(config)) return config.escape;
        else return undefined;
    };
    var mustache = {
        name: 'mustache.js',
        version: '4.2.0',
        tags: [
            '{{',
            '}}'
        ],
        clearCache: undefined,
        escape: undefined,
        parse: undefined,
        render: undefined,
        Scanner: undefined,
        Context: undefined,
        Writer: undefined,
        /**
     * Allows a user to override the default caching strategy, by providing an
     * object with set, get and clear methods. This can also be used to disable
     * the cache by setting it to the literal `undefined`.
     */ set templateCache (cache){
            defaultWriter.templateCache = cache;
        },
        /**
     * Gets the default or overridden caching object from the default writer.
     */ get templateCache () {
            return defaultWriter.templateCache;
        }
    };
    // All high-level mustache.* functions use this writer.
    var defaultWriter = new Writer();
    /**
   * Clears all cached templates in the default writer.
   */ mustache.clearCache = function clearCache1() {
        return defaultWriter.clearCache();
    };
    /**
   * Parses and caches the given template in the default writer and returns the
   * array of tokens it contains. Doing this ahead of time avoids the need to
   * parse templates on the fly as they are rendered.
   */ mustache.parse = function parse1(template, tags) {
        return defaultWriter.parse(template, tags);
    };
    /**
   * Renders the `template` with the given `view`, `partials`, and `config`
   * using the default writer.
   */ mustache.render = function render1(template, view, partials, config) {
        if (typeof template !== 'string') throw new TypeError("Invalid template! Template should be a \"string\" but \"" + typeStr(template) + '" was given as the first ' + 'argument for mustache#render(template, view, partials)');
        return defaultWriter.render(template, view, partials, config);
    };
    // Export the escaping function so that the user may override it.
    // See https://github.com/janl/mustache.js/issues/244
    mustache.escape = escapeHtml;
    // Export these mainly for testing, but also for advanced usage.
    mustache.Scanner = Scanner;
    mustache.Context = Context;
    mustache.Writer = Writer;
    return mustache;
});

});

parcelRequire.register("kma5f", function(module, exports) {
module.exports = JSON.parse("{\"schema\":{\"BadUTF16\":{\"name\":\"BadUTF16\",\"subtypes\":[],\"props\":{}},\"BadUTF8\":{\"name\":\"BadUTF8\",\"subtypes\":[],\"props\":{}},\"BalanceExceeded\":{\"name\":\"BalanceExceeded\",\"subtypes\":[],\"props\":{}},\"BreakpointTrap\":{\"name\":\"BreakpointTrap\",\"subtypes\":[],\"props\":{}},\"CacheError\":{\"name\":\"CacheError\",\"subtypes\":[\"ReadError\",\"WriteError\",\"DeserializationError\",\"SerializationError\"],\"props\":{}},\"CallIndirectOOB\":{\"name\":\"CallIndirectOOB\",\"subtypes\":[],\"props\":{}},\"CannotAppendActionToJointPromise\":{\"name\":\"CannotAppendActionToJointPromise\",\"subtypes\":[],\"props\":{}},\"CannotReturnJointPromise\":{\"name\":\"CannotReturnJointPromise\",\"subtypes\":[],\"props\":{}},\"CodeDoesNotExist\":{\"name\":\"CodeDoesNotExist\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"CompilationError\":{\"name\":\"CompilationError\",\"subtypes\":[\"CodeDoesNotExist\",\"PrepareError\",\"WasmerCompileError\"],\"props\":{}},\"ContractSizeExceeded\":{\"name\":\"ContractSizeExceeded\",\"subtypes\":[],\"props\":{\"limit\":\"\",\"size\":\"\"}},\"Deprecated\":{\"name\":\"Deprecated\",\"subtypes\":[],\"props\":{\"method_name\":\"\"}},\"Deserialization\":{\"name\":\"Deserialization\",\"subtypes\":[],\"props\":{}},\"DeserializationError\":{\"name\":\"DeserializationError\",\"subtypes\":[],\"props\":{}},\"EmptyMethodName\":{\"name\":\"EmptyMethodName\",\"subtypes\":[],\"props\":{}},\"FunctionCallError\":{\"name\":\"FunctionCallError\",\"subtypes\":[\"CompilationError\",\"LinkError\",\"MethodResolveError\",\"WasmTrap\",\"WasmUnknownError\",\"HostError\",\"EvmError\"],\"props\":{}},\"GasExceeded\":{\"name\":\"GasExceeded\",\"subtypes\":[],\"props\":{}},\"GasInstrumentation\":{\"name\":\"GasInstrumentation\",\"subtypes\":[],\"props\":{}},\"GasLimitExceeded\":{\"name\":\"GasLimitExceeded\",\"subtypes\":[],\"props\":{}},\"GenericTrap\":{\"name\":\"GenericTrap\",\"subtypes\":[],\"props\":{}},\"GuestPanic\":{\"name\":\"GuestPanic\",\"subtypes\":[],\"props\":{\"panic_msg\":\"\"}},\"HostError\":{\"name\":\"HostError\",\"subtypes\":[\"BadUTF16\",\"BadUTF8\",\"GasExceeded\",\"GasLimitExceeded\",\"BalanceExceeded\",\"EmptyMethodName\",\"GuestPanic\",\"IntegerOverflow\",\"InvalidPromiseIndex\",\"CannotAppendActionToJointPromise\",\"CannotReturnJointPromise\",\"InvalidPromiseResultIndex\",\"InvalidRegisterId\",\"IteratorWasInvalidated\",\"MemoryAccessViolation\",\"InvalidReceiptIndex\",\"InvalidIteratorIndex\",\"InvalidAccountId\",\"InvalidMethodName\",\"InvalidPublicKey\",\"ProhibitedInView\",\"NumberOfLogsExceeded\",\"KeyLengthExceeded\",\"ValueLengthExceeded\",\"TotalLogLengthExceeded\",\"NumberPromisesExceeded\",\"NumberInputDataDependenciesExceeded\",\"ReturnedValueLengthExceeded\",\"ContractSizeExceeded\",\"Deprecated\"],\"props\":{}},\"IllegalArithmetic\":{\"name\":\"IllegalArithmetic\",\"subtypes\":[],\"props\":{}},\"IncorrectCallIndirectSignature\":{\"name\":\"IncorrectCallIndirectSignature\",\"subtypes\":[],\"props\":{}},\"Instantiate\":{\"name\":\"Instantiate\",\"subtypes\":[],\"props\":{}},\"IntegerOverflow\":{\"name\":\"IntegerOverflow\",\"subtypes\":[],\"props\":{}},\"InternalMemoryDeclared\":{\"name\":\"InternalMemoryDeclared\",\"subtypes\":[],\"props\":{}},\"InvalidAccountId\":{\"name\":\"InvalidAccountId\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"InvalidIteratorIndex\":{\"name\":\"InvalidIteratorIndex\",\"subtypes\":[],\"props\":{\"iterator_index\":\"\"}},\"InvalidMethodName\":{\"name\":\"InvalidMethodName\",\"subtypes\":[],\"props\":{}},\"InvalidPromiseIndex\":{\"name\":\"InvalidPromiseIndex\",\"subtypes\":[],\"props\":{\"promise_idx\":\"\"}},\"InvalidPromiseResultIndex\":{\"name\":\"InvalidPromiseResultIndex\",\"subtypes\":[],\"props\":{\"result_idx\":\"\"}},\"InvalidPublicKey\":{\"name\":\"InvalidPublicKey\",\"subtypes\":[],\"props\":{}},\"InvalidReceiptIndex\":{\"name\":\"InvalidReceiptIndex\",\"subtypes\":[],\"props\":{\"receipt_index\":\"\"}},\"InvalidRegisterId\":{\"name\":\"InvalidRegisterId\",\"subtypes\":[],\"props\":{\"register_id\":\"\"}},\"IteratorWasInvalidated\":{\"name\":\"IteratorWasInvalidated\",\"subtypes\":[],\"props\":{\"iterator_index\":\"\"}},\"KeyLengthExceeded\":{\"name\":\"KeyLengthExceeded\",\"subtypes\":[],\"props\":{\"length\":\"\",\"limit\":\"\"}},\"LinkError\":{\"name\":\"LinkError\",\"subtypes\":[],\"props\":{\"msg\":\"\"}},\"Memory\":{\"name\":\"Memory\",\"subtypes\":[],\"props\":{}},\"MemoryAccessViolation\":{\"name\":\"MemoryAccessViolation\",\"subtypes\":[],\"props\":{}},\"MemoryOutOfBounds\":{\"name\":\"MemoryOutOfBounds\",\"subtypes\":[],\"props\":{}},\"MethodEmptyName\":{\"name\":\"MethodEmptyName\",\"subtypes\":[],\"props\":{}},\"MethodInvalidSignature\":{\"name\":\"MethodInvalidSignature\",\"subtypes\":[],\"props\":{}},\"MethodNotFound\":{\"name\":\"MethodNotFound\",\"subtypes\":[],\"props\":{}},\"MethodResolveError\":{\"name\":\"MethodResolveError\",\"subtypes\":[\"MethodEmptyName\",\"MethodUTF8Error\",\"MethodNotFound\",\"MethodInvalidSignature\"],\"props\":{}},\"MethodUTF8Error\":{\"name\":\"MethodUTF8Error\",\"subtypes\":[],\"props\":{}},\"MisalignedAtomicAccess\":{\"name\":\"MisalignedAtomicAccess\",\"subtypes\":[],\"props\":{}},\"NumberInputDataDependenciesExceeded\":{\"name\":\"NumberInputDataDependenciesExceeded\",\"subtypes\":[],\"props\":{\"limit\":\"\",\"number_of_input_data_dependencies\":\"\"}},\"NumberOfLogsExceeded\":{\"name\":\"NumberOfLogsExceeded\",\"subtypes\":[],\"props\":{\"limit\":\"\"}},\"NumberPromisesExceeded\":{\"name\":\"NumberPromisesExceeded\",\"subtypes\":[],\"props\":{\"limit\":\"\",\"number_of_promises\":\"\"}},\"PrepareError\":{\"name\":\"PrepareError\",\"subtypes\":[\"Serialization\",\"Deserialization\",\"InternalMemoryDeclared\",\"GasInstrumentation\",\"StackHeightInstrumentation\",\"Instantiate\",\"Memory\"],\"props\":{}},\"ProhibitedInView\":{\"name\":\"ProhibitedInView\",\"subtypes\":[],\"props\":{\"method_name\":\"\"}},\"ReadError\":{\"name\":\"ReadError\",\"subtypes\":[],\"props\":{}},\"ReturnedValueLengthExceeded\":{\"name\":\"ReturnedValueLengthExceeded\",\"subtypes\":[],\"props\":{\"length\":\"\",\"limit\":\"\"}},\"Serialization\":{\"name\":\"Serialization\",\"subtypes\":[],\"props\":{}},\"SerializationError\":{\"name\":\"SerializationError\",\"subtypes\":[],\"props\":{\"hash\":\"\"}},\"StackHeightInstrumentation\":{\"name\":\"StackHeightInstrumentation\",\"subtypes\":[],\"props\":{}},\"StackOverflow\":{\"name\":\"StackOverflow\",\"subtypes\":[],\"props\":{}},\"TotalLogLengthExceeded\":{\"name\":\"TotalLogLengthExceeded\",\"subtypes\":[],\"props\":{\"length\":\"\",\"limit\":\"\"}},\"Unreachable\":{\"name\":\"Unreachable\",\"subtypes\":[],\"props\":{}},\"ValueLengthExceeded\":{\"name\":\"ValueLengthExceeded\",\"subtypes\":[],\"props\":{\"length\":\"\",\"limit\":\"\"}},\"WasmTrap\":{\"name\":\"WasmTrap\",\"subtypes\":[\"Unreachable\",\"IncorrectCallIndirectSignature\",\"MemoryOutOfBounds\",\"CallIndirectOOB\",\"IllegalArithmetic\",\"MisalignedAtomicAccess\",\"BreakpointTrap\",\"StackOverflow\",\"GenericTrap\"],\"props\":{}},\"WasmUnknownError\":{\"name\":\"WasmUnknownError\",\"subtypes\":[],\"props\":{}},\"WasmerCompileError\":{\"name\":\"WasmerCompileError\",\"subtypes\":[],\"props\":{\"msg\":\"\"}},\"WriteError\":{\"name\":\"WriteError\",\"subtypes\":[],\"props\":{}},\"AccessKeyNotFound\":{\"name\":\"AccessKeyNotFound\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"public_key\":\"\"}},\"AccountAlreadyExists\":{\"name\":\"AccountAlreadyExists\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"AccountDoesNotExist\":{\"name\":\"AccountDoesNotExist\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"ActionError\":{\"name\":\"ActionError\",\"subtypes\":[\"AccountAlreadyExists\",\"AccountDoesNotExist\",\"CreateAccountOnlyByRegistrar\",\"CreateAccountNotAllowed\",\"ActorNoPermission\",\"DeleteKeyDoesNotExist\",\"AddKeyAlreadyExists\",\"DeleteAccountStaking\",\"LackBalanceForState\",\"TriesToUnstake\",\"TriesToStake\",\"InsufficientStake\",\"FunctionCallError\",\"NewReceiptValidationError\",\"OnlyImplicitAccountCreationAllowed\"],\"props\":{\"index\":\"\"}},\"ActionsValidationError\":{\"name\":\"ActionsValidationError\",\"subtypes\":[\"DeleteActionMustBeFinal\",\"TotalPrepaidGasExceeded\",\"TotalNumberOfActionsExceeded\",\"AddKeyMethodNamesNumberOfBytesExceeded\",\"AddKeyMethodNameLengthExceeded\",\"IntegerOverflow\",\"InvalidAccountId\",\"ContractSizeExceeded\",\"FunctionCallMethodNameLengthExceeded\",\"FunctionCallArgumentsLengthExceeded\",\"UnsuitableStakingKey\",\"FunctionCallZeroAttachedGas\"],\"props\":{}},\"ActorNoPermission\":{\"name\":\"ActorNoPermission\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"actor_id\":\"\"}},\"AddKeyAlreadyExists\":{\"name\":\"AddKeyAlreadyExists\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"public_key\":\"\"}},\"AddKeyMethodNameLengthExceeded\":{\"name\":\"AddKeyMethodNameLengthExceeded\",\"subtypes\":[],\"props\":{\"length\":\"\",\"limit\":\"\"}},\"AddKeyMethodNamesNumberOfBytesExceeded\":{\"name\":\"AddKeyMethodNamesNumberOfBytesExceeded\",\"subtypes\":[],\"props\":{\"limit\":\"\",\"total_number_of_bytes\":\"\"}},\"BalanceMismatchError\":{\"name\":\"BalanceMismatchError\",\"subtypes\":[],\"props\":{\"final_accounts_balance\":\"\",\"final_postponed_receipts_balance\":\"\",\"incoming_receipts_balance\":\"\",\"incoming_validator_rewards\":\"\",\"initial_accounts_balance\":\"\",\"initial_postponed_receipts_balance\":\"\",\"new_delayed_receipts_balance\":\"\",\"other_burnt_amount\":\"\",\"outgoing_receipts_balance\":\"\",\"processed_delayed_receipts_balance\":\"\",\"slashed_burnt_amount\":\"\",\"tx_burnt_amount\":\"\"}},\"CostOverflow\":{\"name\":\"CostOverflow\",\"subtypes\":[],\"props\":{}},\"CreateAccountNotAllowed\":{\"name\":\"CreateAccountNotAllowed\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"predecessor_id\":\"\"}},\"CreateAccountOnlyByRegistrar\":{\"name\":\"CreateAccountOnlyByRegistrar\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"predecessor_id\":\"\",\"registrar_account_id\":\"\"}},\"DeleteAccountStaking\":{\"name\":\"DeleteAccountStaking\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"DeleteActionMustBeFinal\":{\"name\":\"DeleteActionMustBeFinal\",\"subtypes\":[],\"props\":{}},\"DeleteKeyDoesNotExist\":{\"name\":\"DeleteKeyDoesNotExist\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"public_key\":\"\"}},\"DepositWithFunctionCall\":{\"name\":\"DepositWithFunctionCall\",\"subtypes\":[],\"props\":{}},\"Expired\":{\"name\":\"Expired\",\"subtypes\":[],\"props\":{}},\"FunctionCallArgumentsLengthExceeded\":{\"name\":\"FunctionCallArgumentsLengthExceeded\",\"subtypes\":[],\"props\":{\"length\":\"\",\"limit\":\"\"}},\"FunctionCallMethodNameLengthExceeded\":{\"name\":\"FunctionCallMethodNameLengthExceeded\",\"subtypes\":[],\"props\":{\"length\":\"\",\"limit\":\"\"}},\"FunctionCallZeroAttachedGas\":{\"name\":\"FunctionCallZeroAttachedGas\",\"subtypes\":[],\"props\":{}},\"InsufficientStake\":{\"name\":\"InsufficientStake\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"minimum_stake\":\"\",\"stake\":\"\"}},\"InvalidAccessKeyError\":{\"name\":\"InvalidAccessKeyError\",\"subtypes\":[\"AccessKeyNotFound\",\"ReceiverMismatch\",\"MethodNameMismatch\",\"RequiresFullAccess\",\"NotEnoughAllowance\",\"DepositWithFunctionCall\"],\"props\":{}},\"InvalidChain\":{\"name\":\"InvalidChain\",\"subtypes\":[],\"props\":{}},\"InvalidDataReceiverId\":{\"name\":\"InvalidDataReceiverId\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"InvalidNonce\":{\"name\":\"InvalidNonce\",\"subtypes\":[],\"props\":{\"ak_nonce\":\"\",\"tx_nonce\":\"\"}},\"InvalidPredecessorId\":{\"name\":\"InvalidPredecessorId\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"InvalidReceiverId\":{\"name\":\"InvalidReceiverId\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"InvalidSignature\":{\"name\":\"InvalidSignature\",\"subtypes\":[],\"props\":{}},\"InvalidSignerId\":{\"name\":\"InvalidSignerId\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"InvalidTxError\":{\"name\":\"InvalidTxError\",\"subtypes\":[\"InvalidAccessKeyError\",\"InvalidSignerId\",\"SignerDoesNotExist\",\"InvalidNonce\",\"InvalidReceiverId\",\"InvalidSignature\",\"NotEnoughBalance\",\"LackBalanceForState\",\"CostOverflow\",\"InvalidChain\",\"Expired\",\"ActionsValidation\"],\"props\":{}},\"LackBalanceForState\":{\"name\":\"LackBalanceForState\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"amount\":\"\"}},\"MethodNameMismatch\":{\"name\":\"MethodNameMismatch\",\"subtypes\":[],\"props\":{\"method_name\":\"\"}},\"NotEnoughAllowance\":{\"name\":\"NotEnoughAllowance\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"allowance\":\"\",\"cost\":\"\",\"public_key\":\"\"}},\"NotEnoughBalance\":{\"name\":\"NotEnoughBalance\",\"subtypes\":[],\"props\":{\"balance\":\"\",\"cost\":\"\",\"signer_id\":\"\"}},\"OnlyImplicitAccountCreationAllowed\":{\"name\":\"OnlyImplicitAccountCreationAllowed\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"ReceiptValidationError\":{\"name\":\"ReceiptValidationError\",\"subtypes\":[\"InvalidPredecessorId\",\"InvalidReceiverId\",\"InvalidSignerId\",\"InvalidDataReceiverId\",\"ReturnedValueLengthExceeded\",\"NumberInputDataDependenciesExceeded\",\"ActionsValidation\"],\"props\":{}},\"ReceiverMismatch\":{\"name\":\"ReceiverMismatch\",\"subtypes\":[],\"props\":{\"ak_receiver\":\"\",\"tx_receiver\":\"\"}},\"RequiresFullAccess\":{\"name\":\"RequiresFullAccess\",\"subtypes\":[],\"props\":{}},\"SignerDoesNotExist\":{\"name\":\"SignerDoesNotExist\",\"subtypes\":[],\"props\":{\"signer_id\":\"\"}},\"TotalNumberOfActionsExceeded\":{\"name\":\"TotalNumberOfActionsExceeded\",\"subtypes\":[],\"props\":{\"limit\":\"\",\"total_number_of_actions\":\"\"}},\"TotalPrepaidGasExceeded\":{\"name\":\"TotalPrepaidGasExceeded\",\"subtypes\":[],\"props\":{\"limit\":\"\",\"total_prepaid_gas\":\"\"}},\"TriesToStake\":{\"name\":\"TriesToStake\",\"subtypes\":[],\"props\":{\"account_id\":\"\",\"balance\":\"\",\"locked\":\"\",\"stake\":\"\"}},\"TriesToUnstake\":{\"name\":\"TriesToUnstake\",\"subtypes\":[],\"props\":{\"account_id\":\"\"}},\"TxExecutionError\":{\"name\":\"TxExecutionError\",\"subtypes\":[\"ActionError\",\"InvalidTxError\"],\"props\":{}},\"UnsuitableStakingKey\":{\"name\":\"UnsuitableStakingKey\",\"subtypes\":[],\"props\":{\"public_key\":\"\"}},\"Closed\":{\"name\":\"Closed\",\"subtypes\":[],\"props\":{}},\"InternalError\":{\"name\":\"InternalError\",\"subtypes\":[],\"props\":{}},\"ServerError\":{\"name\":\"ServerError\",\"subtypes\":[\"TxExecutionError\",\"Timeout\",\"Closed\",\"InternalError\"],\"props\":{}},\"Timeout\":{\"name\":\"Timeout\",\"subtypes\":[],\"props\":{}}}}");

});

parcelRequire.register("lvaE4", function(module, exports) {
module.exports = JSON.parse("{\"GasLimitExceeded\":\"Exceeded the maximum amount of gas allowed to burn per contract\",\"MethodEmptyName\":\"Method name is empty\",\"WasmerCompileError\":\"Wasmer compilation error: {{msg}}\",\"GuestPanic\":\"Smart contract panicked: {{panic_msg}}\",\"Memory\":\"Error creating Wasm memory\",\"GasExceeded\":\"Exceeded the prepaid gas\",\"MethodUTF8Error\":\"Method name is not valid UTF8 string\",\"BadUTF16\":\"String encoding is bad UTF-16 sequence\",\"WasmTrap\":\"WebAssembly trap: {{msg}}\",\"GasInstrumentation\":\"Gas instrumentation failed or contract has denied instructions.\",\"InvalidPromiseIndex\":\"{{promise_idx}} does not correspond to existing promises\",\"InvalidPromiseResultIndex\":\"Accessed invalid promise result index: {{result_idx}}\",\"Deserialization\":\"Error happened while deserializing the module\",\"MethodNotFound\":\"Contract method is not found\",\"InvalidRegisterId\":\"Accessed invalid register id: {{register_id}}\",\"InvalidReceiptIndex\":\"VM Logic returned an invalid receipt index: {{receipt_index}}\",\"EmptyMethodName\":\"Method name is empty in contract call\",\"CannotReturnJointPromise\":\"Returning joint promise is currently prohibited\",\"StackHeightInstrumentation\":\"Stack instrumentation failed\",\"CodeDoesNotExist\":\"Cannot find contract code for account {{account_id}}\",\"MethodInvalidSignature\":\"Invalid method signature\",\"IntegerOverflow\":\"Integer overflow happened during contract execution\",\"MemoryAccessViolation\":\"MemoryAccessViolation\",\"InvalidIteratorIndex\":\"Iterator index {{iterator_index}} does not exist\",\"IteratorWasInvalidated\":\"Iterator {{iterator_index}} was invalidated after its creation by performing a mutable operation on trie\",\"InvalidAccountId\":\"VM Logic returned an invalid account id\",\"Serialization\":\"Error happened while serializing the module\",\"CannotAppendActionToJointPromise\":\"Actions can only be appended to non-joint promise.\",\"InternalMemoryDeclared\":\"Internal memory declaration has been found in the module\",\"Instantiate\":\"Error happened during instantiation\",\"ProhibitedInView\":\"{{method_name}} is not allowed in view calls\",\"InvalidMethodName\":\"VM Logic returned an invalid method name\",\"BadUTF8\":\"String encoding is bad UTF-8 sequence\",\"BalanceExceeded\":\"Exceeded the account balance\",\"LinkError\":\"Wasm contract link error: {{msg}}\",\"InvalidPublicKey\":\"VM Logic provided an invalid public key\",\"ActorNoPermission\":\"Actor {{actor_id}} doesn't have permission to account {{account_id}} to complete the action\",\"LackBalanceForState\":\"The account {{account_id}} wouldn't have enough balance to cover storage, required to have {{amount}} yoctoNEAR more\",\"ReceiverMismatch\":\"Wrong AccessKey used for transaction: transaction is sent to receiver_id={{tx_receiver}}, but is signed with function call access key that restricted to only use with receiver_id={{ak_receiver}}. Either change receiver_id in your transaction or switch to use a FullAccessKey.\",\"CostOverflow\":\"Transaction gas or balance cost is too high\",\"InvalidSignature\":\"Transaction is not signed with the given public key\",\"AccessKeyNotFound\":\"Signer \\\"{{account_id}}\\\" doesn't have access key with the given public_key {{public_key}}\",\"NotEnoughBalance\":\"Sender {{signer_id}} does not have enough balance {{#formatNear}}{{balance}}{{/formatNear}} for operation costing {{#formatNear}}{{cost}}{{/formatNear}}\",\"NotEnoughAllowance\":\"Access Key {account_id}:{public_key} does not have enough balance {{#formatNear}}{{allowance}}{{/formatNear}} for transaction costing {{#formatNear}}{{cost}}{{/formatNear}}\",\"Expired\":\"Transaction has expired\",\"DeleteAccountStaking\":\"Account {{account_id}} is staking and can not be deleted\",\"SignerDoesNotExist\":\"Signer {{signer_id}} does not exist\",\"TriesToStake\":\"Account {{account_id}} tried to stake {{#formatNear}}{{stake}}{{/formatNear}}, but has staked {{#formatNear}}{{locked}}{{/formatNear}} and only has {{#formatNear}}{{balance}}{{/formatNear}}\",\"AddKeyAlreadyExists\":\"The public key {{public_key}} is already used for an existing access key\",\"InvalidSigner\":\"Invalid signer account ID {{signer_id}} according to requirements\",\"CreateAccountNotAllowed\":\"The new account_id {{account_id}} can't be created by {{predecessor_id}}\",\"RequiresFullAccess\":\"The transaction contains more then one action, but it was signed with an access key which allows transaction to apply only one specific action. To apply more then one actions TX must be signed with a full access key\",\"TriesToUnstake\":\"Account {{account_id}} is not yet staked, but tried to unstake\",\"InvalidNonce\":\"Transaction nonce {{tx_nonce}} must be larger than nonce of the used access key {{ak_nonce}}\",\"AccountAlreadyExists\":\"Can't create a new account {{account_id}}, because it already exists\",\"InvalidChain\":\"Transaction parent block hash doesn't belong to the current chain\",\"AccountDoesNotExist\":\"Can't complete the action because account {{account_id}} doesn't exist\",\"MethodNameMismatch\":\"Transaction method name {{method_name}} isn't allowed by the access key\",\"DeleteAccountHasRent\":\"Account {{account_id}} can't be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover the rent\",\"DeleteAccountHasEnoughBalance\":\"Account {{account_id}} can't be deleted. It has {{#formatNear}}{{balance}}{{/formatNear}}, which is enough to cover it's storage\",\"InvalidReceiver\":\"Invalid receiver account ID {{receiver_id}} according to requirements\",\"DeleteKeyDoesNotExist\":\"Account {{account_id}} tries to remove an access key that doesn't exist\",\"Timeout\":\"Timeout exceeded\",\"Closed\":\"Connection closed\"}");

});




parcelRequire.register("6JjgF", function(module, exports) {
"use strict";
var $4e65e435ff95823f$var$__createBinding = module.exports && module.exports.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, {
        enumerable: true,
        get: function() {
            return m[k];
        }
    });
} : function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});
var $4e65e435ff95823f$var$__setModuleDefault = module.exports && module.exports.__setModuleDefault || (Object.create ? function(o, v) {
    Object.defineProperty(o, "default", {
        enumerable: true,
        value: v
    });
} : function(o, v) {
    o["default"] = v;
});
var $4e65e435ff95823f$var$__importStar = module.exports && module.exports.__importStar || function(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {
    };
    if (mod != null) for(var k in mod)if (k !== "default" && Object.hasOwnProperty.call(mod, k)) $4e65e435ff95823f$var$__createBinding(result, mod, k);
    $4e65e435ff95823f$var$__setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.rpc_errors = module.exports.KeyPairEd25519 = module.exports.KeyPair = module.exports.PublicKey = module.exports.format = module.exports.enums = module.exports.web = module.exports.serialize = module.exports.key_pair = void 0;

const $4e65e435ff95823f$var$key_pair = $4e65e435ff95823f$var$__importStar((parcelRequire("bqi77")));
module.exports.key_pair = $4e65e435ff95823f$var$key_pair;

const $4e65e435ff95823f$var$serialize = $4e65e435ff95823f$var$__importStar((parcelRequire("BYdDX")));
module.exports.serialize = $4e65e435ff95823f$var$serialize;

const $4e65e435ff95823f$var$web = $4e65e435ff95823f$var$__importStar((parcelRequire("4iS3f")));
module.exports.web = $4e65e435ff95823f$var$web;

const $4e65e435ff95823f$var$enums = $4e65e435ff95823f$var$__importStar((parcelRequire("iBavB")));
module.exports.enums = $4e65e435ff95823f$var$enums;

const $4e65e435ff95823f$var$format = $4e65e435ff95823f$var$__importStar((parcelRequire("8rjqt")));
module.exports.format = $4e65e435ff95823f$var$format;

const $4e65e435ff95823f$var$rpc_errors = $4e65e435ff95823f$var$__importStar((parcelRequire("4VSha")));
module.exports.rpc_errors = $4e65e435ff95823f$var$rpc_errors;

Object.defineProperty(module.exports, "PublicKey", {
    enumerable: true,
    get: function() {
        return (parcelRequire("bqi77")).PublicKey;
    }
});
Object.defineProperty(module.exports, "KeyPair", {
    enumerable: true,
    get: function() {
        return (parcelRequire("bqi77")).KeyPair;
    }
});
Object.defineProperty(module.exports, "KeyPairEd25519", {
    enumerable: true,
    get: function() {
        return (parcelRequire("bqi77")).KeyPairEd25519;
    }
});

});
parcelRequire.register("8rjqt", function(module, exports) {
"use strict";
var $624fe9f6b3943893$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.parseNearAmount = module.exports.formatNearAmount = module.exports.NEAR_NOMINATION = module.exports.NEAR_NOMINATION_EXP = void 0;

const $624fe9f6b3943893$var$bn_js_1 = $624fe9f6b3943893$var$__importDefault((parcelRequire("euZho")));
/**
 * Exponent for calculating how many indivisible units are there in one NEAR. See {@link NEAR_NOMINATION}.
 */ module.exports.NEAR_NOMINATION_EXP = 24;
/**
 * Number of indivisible units in one NEAR. Derived from {@link NEAR_NOMINATION_EXP}.
 */ module.exports.NEAR_NOMINATION = new $624fe9f6b3943893$var$bn_js_1.default('10', 10).pow(new $624fe9f6b3943893$var$bn_js_1.default(module.exports.NEAR_NOMINATION_EXP, 10));
// Pre-calculate offests used for rounding to different number of digits
const $624fe9f6b3943893$var$ROUNDING_OFFSETS = [];
const $624fe9f6b3943893$var$BN10 = new $624fe9f6b3943893$var$bn_js_1.default(10);
for(let i = 0, offset = new $624fe9f6b3943893$var$bn_js_1.default(5); i < module.exports.NEAR_NOMINATION_EXP; i++, offset = offset.mul($624fe9f6b3943893$var$BN10))$624fe9f6b3943893$var$ROUNDING_OFFSETS[i] = offset;
/**
 * Convert account balance value from internal indivisible units to NEAR. 1 NEAR is defined by {@link NEAR_NOMINATION}.
 * Effectively this divides given amount by {@link NEAR_NOMINATION}.
 *
 * @param balance decimal string representing balance in smallest non-divisible NEAR units (as specified by {@link NEAR_NOMINATION})
 * @param fracDigits number of fractional digits to preserve in formatted string. Balance is rounded to match given number of digits.
 * @returns Value in Ⓝ
 */ function $624fe9f6b3943893$var$formatNearAmount(balance, fracDigits = module.exports.NEAR_NOMINATION_EXP) {
    const balanceBN = new $624fe9f6b3943893$var$bn_js_1.default(balance, 10);
    if (fracDigits !== module.exports.NEAR_NOMINATION_EXP) {
        // Adjust balance for rounding at given number of digits
        const roundingExp = module.exports.NEAR_NOMINATION_EXP - fracDigits - 1;
        if (roundingExp > 0) balanceBN.iadd($624fe9f6b3943893$var$ROUNDING_OFFSETS[roundingExp]);
    }
    balance = balanceBN.toString();
    const wholeStr = balance.substring(0, balance.length - module.exports.NEAR_NOMINATION_EXP) || '0';
    const fractionStr = balance.substring(balance.length - module.exports.NEAR_NOMINATION_EXP).padStart(module.exports.NEAR_NOMINATION_EXP, '0').substring(0, fracDigits);
    return $624fe9f6b3943893$var$trimTrailingZeroes(`${$624fe9f6b3943893$var$formatWithCommas(wholeStr)}.${fractionStr}`);
}
module.exports.formatNearAmount = $624fe9f6b3943893$var$formatNearAmount;
/**
 * Convert human readable NEAR amount to internal indivisible units.
 * Effectively this multiplies given amount by {@link NEAR_NOMINATION}.
 *
 * @param amt decimal string (potentially fractional) denominated in NEAR.
 * @returns The parsed yoctoⓃ amount or null if no amount was passed in
 */ function $624fe9f6b3943893$var$parseNearAmount(amt) {
    if (!amt) return null;
    amt = $624fe9f6b3943893$var$cleanupAmount(amt);
    const split = amt.split('.');
    const wholePart = split[0];
    const fracPart = split[1] || '';
    if (split.length > 2 || fracPart.length > module.exports.NEAR_NOMINATION_EXP) throw new Error(`Cannot parse '${amt}' as NEAR amount`);
    return $624fe9f6b3943893$var$trimLeadingZeroes(wholePart + fracPart.padEnd(module.exports.NEAR_NOMINATION_EXP, '0'));
}
module.exports.parseNearAmount = $624fe9f6b3943893$var$parseNearAmount;
/**
 * Removes commas from the input
 * @param amount A value or amount that may contain commas
 * @returns string The cleaned value
 */ function $624fe9f6b3943893$var$cleanupAmount(amount) {
    return amount.replace(/,/g, '').trim();
}
/**
 * Removes .000… from an input
 * @param value A value that may contain trailing zeroes in the decimals place
 * @returns string The value without the trailing zeros
 */ function $624fe9f6b3943893$var$trimTrailingZeroes(value) {
    return value.replace(/\.?0*$/, '');
}
/**
 * Removes leading zeroes from an input
 * @param value A value that may contain leading zeroes
 * @returns string The value without the leading zeroes
 */ function $624fe9f6b3943893$var$trimLeadingZeroes(value) {
    value = value.replace(/^0+/, '');
    if (value === '') return '0';
    return value;
}
/**
 * Returns a human-readable value with commas
 * @param value A value that may not contain commas
 * @returns string A value with commas
 */ function $624fe9f6b3943893$var$formatWithCommas(value) {
    const pattern = /(-?\d+)(\d{3})/;
    while(pattern.test(value))value = value.replace(pattern, '$1,$2');
    return value;
}

});
parcelRequire.register("euZho", function(module, exports) {

(function(module, exports) {
    // Utils
    function assert(val, msg) {
        if (!val) throw new Error(msg || 'Assertion failed');
    }
    // Could use `inherits` module, but don't want to move from single file
    // architecture yet.
    function inherits(ctor, superCtor) {
        ctor.super_ = superCtor;
        var TempCtor = function() {
        };
        TempCtor.prototype = superCtor.prototype;
        ctor.prototype = new TempCtor();
        ctor.prototype.constructor = ctor;
    }
    // BN
    function BN(number, base, endian) {
        if (BN.isBN(number)) return number;
        this.negative = 0;
        this.words = null;
        this.length = 0;
        // Reduction context
        this.red = null;
        if (number !== null) {
            if (base === 'le' || base === 'be') {
                endian = base;
                base = 10;
            }
            this._init(number || 0, base || 10, endian || 'be');
        }
    }
    if (typeof module === 'object') module.exports = BN;
    else exports.BN = BN;
    BN.BN = BN;
    BN.wordSize = 26;
    var Buffer;
    try {
        if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') Buffer = window.Buffer;
        else Buffer = (parcelRequire("iMEq6")).Buffer;
    } catch (e) {
    }
    BN.isBN = function isBN(num) {
        if (num instanceof BN) return true;
        return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
    };
    BN.max = function max(left, right) {
        if (left.cmp(right) > 0) return left;
        return right;
    };
    BN.min = function min(left, right) {
        if (left.cmp(right) < 0) return left;
        return right;
    };
    BN.prototype._init = function init(number, base, endian) {
        if (typeof number === 'number') return this._initNumber(number, base, endian);
        if (typeof number === 'object') return this._initArray(number, base, endian);
        if (base === 'hex') base = 16;
        assert(base === (base | 0) && base >= 2 && base <= 36);
        number = number.toString().replace(/\s+/g, '');
        var start = 0;
        if (number[0] === '-') {
            start++;
            this.negative = 1;
        }
        if (start < number.length) {
            if (base === 16) this._parseHex(number, start, endian);
            else {
                this._parseBase(number, base, start);
                if (endian === 'le') this._initArray(this.toArray(), base, endian);
            }
        }
    };
    BN.prototype._initNumber = function _initNumber(number, base, endian) {
        if (number < 0) {
            this.negative = 1;
            number = -number;
        }
        if (number < 67108864) {
            this.words = [
                number & 67108863
            ];
            this.length = 1;
        } else if (number < 4503599627370496) {
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863
            ];
            this.length = 2;
        } else {
            assert(number < 9007199254740992); // 2 ^ 53 (unsafe)
            this.words = [
                number & 67108863,
                number / 67108864 & 67108863,
                1
            ];
            this.length = 3;
        }
        if (endian !== 'le') return;
        // Reverse the bytes
        this._initArray(this.toArray(), base, endian);
    };
    BN.prototype._initArray = function _initArray(number, base, endian) {
        // Perhaps a Uint8Array
        assert(typeof number.length === 'number');
        if (number.length <= 0) {
            this.words = [
                0
            ];
            this.length = 1;
            return this;
        }
        this.length = Math.ceil(number.length / 3);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        var j, w;
        var off = 0;
        if (endian === 'be') for(i = number.length - 1, j = 0; i >= 0; i -= 3){
            w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        else if (endian === 'le') for(i = 0, j = 0; i < number.length; i += 3){
            w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;
            this.words[j] |= w << off & 67108863;
            this.words[j + 1] = w >>> 26 - off & 67108863;
            off += 24;
            if (off >= 26) {
                off -= 26;
                j++;
            }
        }
        return this._strip();
    };
    function parseHex4Bits(string, index) {
        var c = string.charCodeAt(index);
        // '0' - '9'
        if (c >= 48 && c <= 57) return c - 48;
        else if (c >= 65 && c <= 70) return c - 55;
        else if (c >= 97 && c <= 102) return c - 87;
        else assert(false, 'Invalid character in ' + string);
    }
    function parseHexByte(string, lowerBound, index) {
        var r = parseHex4Bits(string, index);
        if (index - 1 >= lowerBound) r |= parseHex4Bits(string, index - 1) << 4;
        return r;
    }
    BN.prototype._parseHex = function _parseHex(number, start, endian) {
        // Create possibly bigger array to ensure that it fits the number
        this.length = Math.ceil((number.length - start) / 6);
        this.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)this.words[i] = 0;
        // 24-bits chunks
        var off = 0;
        var j = 0;
        var w;
        if (endian === 'be') for(i = number.length - 1; i >= start; i -= 2){
            w = parseHexByte(number, start, i) << off;
            this.words[j] |= w & 67108863;
            if (off >= 18) {
                off -= 18;
                j += 1;
                this.words[j] |= w >>> 26;
            } else off += 8;
        }
        else {
            var parseLength = number.length - start;
            for(i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2){
                w = parseHexByte(number, start, i) << off;
                this.words[j] |= w & 67108863;
                if (off >= 18) {
                    off -= 18;
                    j += 1;
                    this.words[j] |= w >>> 26;
                } else off += 8;
            }
        }
        this._strip();
    };
    function parseBase(str, start, end, mul) {
        var r = 0;
        var b = 0;
        var len = Math.min(str.length, end);
        for(var i = start; i < len; i++){
            var c = str.charCodeAt(i) - 48;
            r *= mul;
            // 'a'
            if (c >= 49) b = c - 49 + 10;
            else if (c >= 17) b = c - 17 + 10;
            else b = c;
            assert(c >= 0 && b < mul, 'Invalid character');
            r += b;
        }
        return r;
    }
    BN.prototype._parseBase = function _parseBase(number, base, start) {
        // Initialize as zero
        this.words = [
            0
        ];
        this.length = 1;
        // Find length of limb in base
        for(var limbLen = 0, limbPow = 1; limbPow <= 67108863; limbPow *= base)limbLen++;
        limbLen--;
        limbPow = limbPow / base | 0;
        var total = number.length - start;
        var mod = total % limbLen;
        var end = Math.min(total, total - mod) + start;
        var word = 0;
        for(var i = start; i < end; i += limbLen){
            word = parseBase(number, i, i + limbLen, base);
            this.imuln(limbPow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        if (mod !== 0) {
            var pow = 1;
            word = parseBase(number, i, number.length, base);
            for(i = 0; i < mod; i++)pow *= base;
            this.imuln(pow);
            if (this.words[0] + word < 67108864) this.words[0] += word;
            else this._iaddn(word);
        }
        this._strip();
    };
    BN.prototype.copy = function copy(dest) {
        dest.words = new Array(this.length);
        for(var i = 0; i < this.length; i++)dest.words[i] = this.words[i];
        dest.length = this.length;
        dest.negative = this.negative;
        dest.red = this.red;
    };
    function move(dest, src) {
        dest.words = src.words;
        dest.length = src.length;
        dest.negative = src.negative;
        dest.red = src.red;
    }
    BN.prototype._move = function _move(dest) {
        move(dest, this);
    };
    BN.prototype.clone = function clone() {
        var r = new BN(null);
        this.copy(r);
        return r;
    };
    BN.prototype._expand = function _expand(size) {
        while(this.length < size)this.words[this.length++] = 0;
        return this;
    };
    // Remove leading `0` from `this`
    BN.prototype._strip = function strip() {
        while(this.length > 1 && this.words[this.length - 1] === 0)this.length--;
        return this._normSign();
    };
    BN.prototype._normSign = function _normSign() {
        // -0 = 0
        if (this.length === 1 && this.words[0] === 0) this.negative = 0;
        return this;
    };
    // Check Symbol.for because not everywhere where Symbol defined
    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility
    if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') try {
        BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;
    } catch (e) {
        BN.prototype.inspect = inspect;
    }
    else BN.prototype.inspect = inspect;
    function inspect() {
        return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
    }
    /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */ var zeros = [
        '',
        '0',
        '00',
        '000',
        '0000',
        '00000',
        '000000',
        '0000000',
        '00000000',
        '000000000',
        '0000000000',
        '00000000000',
        '000000000000',
        '0000000000000',
        '00000000000000',
        '000000000000000',
        '0000000000000000',
        '00000000000000000',
        '000000000000000000',
        '0000000000000000000',
        '00000000000000000000',
        '000000000000000000000',
        '0000000000000000000000',
        '00000000000000000000000',
        '000000000000000000000000',
        '0000000000000000000000000'
    ];
    var groupSizes = [
        0,
        0,
        25,
        16,
        12,
        11,
        10,
        9,
        8,
        8,
        7,
        7,
        7,
        7,
        6,
        6,
        6,
        6,
        6,
        6,
        6,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5,
        5
    ];
    var groupBases = [
        0,
        0,
        33554432,
        43046721,
        16777216,
        48828125,
        60466176,
        40353607,
        16777216,
        43046721,
        10000000,
        19487171,
        35831808,
        62748517,
        7529536,
        11390625,
        16777216,
        24137569,
        34012224,
        47045881,
        64000000,
        4084101,
        5153632,
        6436343,
        7962624,
        9765625,
        11881376,
        14348907,
        17210368,
        20511149,
        24300000,
        28629151,
        33554432,
        39135393,
        45435424,
        52521875,
        60466176
    ];
    BN.prototype.toString = function toString(base, padding) {
        base = base || 10;
        padding = padding | 0 || 1;
        var out;
        if (base === 16 || base === 'hex') {
            out = '';
            var off = 0;
            var carry = 0;
            for(var i = 0; i < this.length; i++){
                var w = this.words[i];
                var word = ((w << off | carry) & 16777215).toString(16);
                carry = w >>> 24 - off & 16777215;
                if (carry !== 0 || i !== this.length - 1) out = zeros[6 - word.length] + word + out;
                else out = word + out;
                off += 2;
                if (off >= 26) {
                    off -= 26;
                    i--;
                }
            }
            if (carry !== 0) out = carry.toString(16) + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        if (base === (base | 0) && base >= 2 && base <= 36) {
            // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
            var groupSize = groupSizes[base];
            // var groupBase = Math.pow(base, groupSize);
            var groupBase = groupBases[base];
            out = '';
            var c = this.clone();
            c.negative = 0;
            while(!c.isZero()){
                var r = c.modrn(groupBase).toString(base);
                c = c.idivn(groupBase);
                if (!c.isZero()) out = zeros[groupSize - r.length] + r + out;
                else out = r + out;
            }
            if (this.isZero()) out = '0' + out;
            while(out.length % padding !== 0)out = '0' + out;
            if (this.negative !== 0) out = '-' + out;
            return out;
        }
        assert(false, 'Base should be between 2 and 36');
    };
    BN.prototype.toNumber = function toNumber() {
        var ret = this.words[0];
        if (this.length === 2) ret += this.words[1] * 67108864;
        else if (this.length === 3 && this.words[2] === 1) // NOTE: at this stage it is known that the top bit is set
        ret += 4503599627370496 + this.words[1] * 67108864;
        else if (this.length > 2) assert(false, 'Number can only safely store up to 53 bits');
        return this.negative !== 0 ? -ret : ret;
    };
    BN.prototype.toJSON = function toJSON() {
        return this.toString(16, 2);
    };
    if (Buffer) BN.prototype.toBuffer = function toBuffer(endian, length) {
        return this.toArrayLike(Buffer, endian, length);
    };
    BN.prototype.toArray = function toArray(endian, length) {
        return this.toArrayLike(Array, endian, length);
    };
    var allocate = function allocate1(ArrayType, size) {
        if (ArrayType.allocUnsafe) return ArrayType.allocUnsafe(size);
        return new ArrayType(size);
    };
    BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {
        this._strip();
        var byteLength = this.byteLength();
        var reqLength = length || Math.max(1, byteLength);
        assert(byteLength <= reqLength, 'byte array longer than desired length');
        assert(reqLength > 0, 'Requested array length <= 0');
        var res = allocate(ArrayType, reqLength);
        var postfix = endian === 'le' ? 'LE' : 'BE';
        this['_toArrayLike' + postfix](res, byteLength);
        return res;
    };
    BN.prototype._toArrayLikeLE = function _toArrayLikeLE(res, byteLength) {
        var position = 0;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position++] = word & 255;
            if (position < res.length) res[position++] = word >> 8 & 255;
            if (position < res.length) res[position++] = word >> 16 & 255;
            if (shift === 6) {
                if (position < res.length) res[position++] = word >> 24 & 255;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position < res.length) {
            res[position++] = carry;
            while(position < res.length)res[position++] = 0;
        }
    };
    BN.prototype._toArrayLikeBE = function _toArrayLikeBE(res, byteLength) {
        var position = res.length - 1;
        var carry = 0;
        for(var i = 0, shift = 0; i < this.length; i++){
            var word = this.words[i] << shift | carry;
            res[position--] = word & 255;
            if (position >= 0) res[position--] = word >> 8 & 255;
            if (position >= 0) res[position--] = word >> 16 & 255;
            if (shift === 6) {
                if (position >= 0) res[position--] = word >> 24 & 255;
                carry = 0;
                shift = 0;
            } else {
                carry = word >>> 24;
                shift += 2;
            }
        }
        if (position >= 0) {
            res[position--] = carry;
            while(position >= 0)res[position--] = 0;
        }
    };
    if (Math.clz32) BN.prototype._countBits = function _countBits(w) {
        return 32 - Math.clz32(w);
    };
    else BN.prototype._countBits = function _countBits1(w) {
        var t = w;
        var r = 0;
        if (t >= 4096) {
            r += 13;
            t >>>= 13;
        }
        if (t >= 64) {
            r += 7;
            t >>>= 7;
        }
        if (t >= 8) {
            r += 4;
            t >>>= 4;
        }
        if (t >= 2) {
            r += 2;
            t >>>= 2;
        }
        return r + t;
    };
    BN.prototype._zeroBits = function _zeroBits(w) {
        // Short-cut
        if (w === 0) return 26;
        var t = w;
        var r = 0;
        if ((t & 8191) === 0) {
            r += 13;
            t >>>= 13;
        }
        if ((t & 127) === 0) {
            r += 7;
            t >>>= 7;
        }
        if ((t & 15) === 0) {
            r += 4;
            t >>>= 4;
        }
        if ((t & 3) === 0) {
            r += 2;
            t >>>= 2;
        }
        if ((t & 1) === 0) r++;
        return r;
    };
    // Return number of used bits in a BN
    BN.prototype.bitLength = function bitLength() {
        var w = this.words[this.length - 1];
        var hi = this._countBits(w);
        return (this.length - 1) * 26 + hi;
    };
    function toBitArray(num) {
        var w = new Array(num.bitLength());
        for(var bit = 0; bit < w.length; bit++){
            var off = bit / 26 | 0;
            var wbit = bit % 26;
            w[bit] = num.words[off] >>> wbit & 1;
        }
        return w;
    }
    // Number of trailing zero bits
    BN.prototype.zeroBits = function zeroBits() {
        if (this.isZero()) return 0;
        var r = 0;
        for(var i = 0; i < this.length; i++){
            var b = this._zeroBits(this.words[i]);
            r += b;
            if (b !== 26) break;
        }
        return r;
    };
    BN.prototype.byteLength = function byteLength() {
        return Math.ceil(this.bitLength() / 8);
    };
    BN.prototype.toTwos = function toTwos(width) {
        if (this.negative !== 0) return this.abs().inotn(width).iaddn(1);
        return this.clone();
    };
    BN.prototype.fromTwos = function fromTwos(width) {
        if (this.testn(width - 1)) return this.notn(width).iaddn(1).ineg();
        return this.clone();
    };
    BN.prototype.isNeg = function isNeg() {
        return this.negative !== 0;
    };
    // Return negative clone of `this`
    BN.prototype.neg = function neg() {
        return this.clone().ineg();
    };
    BN.prototype.ineg = function ineg() {
        if (!this.isZero()) this.negative ^= 1;
        return this;
    };
    // Or `num` with `this` in-place
    BN.prototype.iuor = function iuor(num) {
        while(this.length < num.length)this.words[this.length++] = 0;
        for(var i = 0; i < num.length; i++)this.words[i] = this.words[i] | num.words[i];
        return this._strip();
    };
    BN.prototype.ior = function ior(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuor(num);
    };
    // Or `num` with `this`
    BN.prototype.or = function or(num) {
        if (this.length > num.length) return this.clone().ior(num);
        return num.clone().ior(this);
    };
    BN.prototype.uor = function uor(num) {
        if (this.length > num.length) return this.clone().iuor(num);
        return num.clone().iuor(this);
    };
    // And `num` with `this` in-place
    BN.prototype.iuand = function iuand(num) {
        // b = min-length(num, this)
        var b;
        if (this.length > num.length) b = num;
        else b = this;
        for(var i = 0; i < b.length; i++)this.words[i] = this.words[i] & num.words[i];
        this.length = b.length;
        return this._strip();
    };
    BN.prototype.iand = function iand(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuand(num);
    };
    // And `num` with `this`
    BN.prototype.and = function and(num) {
        if (this.length > num.length) return this.clone().iand(num);
        return num.clone().iand(this);
    };
    BN.prototype.uand = function uand(num) {
        if (this.length > num.length) return this.clone().iuand(num);
        return num.clone().iuand(this);
    };
    // Xor `num` with `this` in-place
    BN.prototype.iuxor = function iuxor(num) {
        // a.length > b.length
        var a;
        var b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        for(var i = 0; i < b.length; i++)this.words[i] = a.words[i] ^ b.words[i];
        if (this !== a) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = a.length;
        return this._strip();
    };
    BN.prototype.ixor = function ixor(num) {
        assert((this.negative | num.negative) === 0);
        return this.iuxor(num);
    };
    // Xor `num` with `this`
    BN.prototype.xor = function xor(num) {
        if (this.length > num.length) return this.clone().ixor(num);
        return num.clone().ixor(this);
    };
    BN.prototype.uxor = function uxor(num) {
        if (this.length > num.length) return this.clone().iuxor(num);
        return num.clone().iuxor(this);
    };
    // Not ``this`` with ``width`` bitwidth
    BN.prototype.inotn = function inotn(width) {
        assert(typeof width === 'number' && width >= 0);
        var bytesNeeded = Math.ceil(width / 26) | 0;
        var bitsLeft = width % 26;
        // Extend the buffer with leading zeroes
        this._expand(bytesNeeded);
        if (bitsLeft > 0) bytesNeeded--;
        // Handle complete words
        for(var i = 0; i < bytesNeeded; i++)this.words[i] = ~this.words[i] & 67108863;
        // Handle the residue
        if (bitsLeft > 0) this.words[i] = ~this.words[i] & 67108863 >> 26 - bitsLeft;
        // And remove leading zeroes
        return this._strip();
    };
    BN.prototype.notn = function notn(width) {
        return this.clone().inotn(width);
    };
    // Set `bit` of `this`
    BN.prototype.setn = function setn(bit, val) {
        assert(typeof bit === 'number' && bit >= 0);
        var off = bit / 26 | 0;
        var wbit = bit % 26;
        this._expand(off + 1);
        if (val) this.words[off] = this.words[off] | 1 << wbit;
        else this.words[off] = this.words[off] & ~(1 << wbit);
        return this._strip();
    };
    // Add `num` to `this` in-place
    BN.prototype.iadd = function iadd(num) {
        var r;
        // negative + positive
        if (this.negative !== 0 && num.negative === 0) {
            this.negative = 0;
            r = this.isub(num);
            this.negative ^= 1;
            return this._normSign();
        // positive + negative
        } else if (this.negative === 0 && num.negative !== 0) {
            num.negative = 0;
            r = this.isub(num);
            num.negative = 1;
            return r._normSign();
        }
        // a.length > b.length
        var a, b;
        if (this.length > num.length) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            this.words[i] = r & 67108863;
            carry = r >>> 26;
        }
        this.length = a.length;
        if (carry !== 0) {
            this.words[this.length] = carry;
            this.length++;
        // Copy the rest of the words
        } else if (a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        return this;
    };
    // Add `num` to `this`
    BN.prototype.add = function add(num) {
        var res;
        if (num.negative !== 0 && this.negative === 0) {
            num.negative = 0;
            res = this.sub(num);
            num.negative ^= 1;
            return res;
        } else if (num.negative === 0 && this.negative !== 0) {
            this.negative = 0;
            res = num.sub(this);
            this.negative = 1;
            return res;
        }
        if (this.length > num.length) return this.clone().iadd(num);
        return num.clone().iadd(this);
    };
    // Subtract `num` from `this` in-place
    BN.prototype.isub = function isub(num) {
        // this - (-num) = this + num
        if (num.negative !== 0) {
            num.negative = 0;
            var r = this.iadd(num);
            num.negative = 1;
            return r._normSign();
        // -this - num = -(this + num)
        } else if (this.negative !== 0) {
            this.negative = 0;
            this.iadd(num);
            this.negative = 1;
            return this._normSign();
        }
        // At this point both numbers are positive
        var cmp = this.cmp(num);
        // Optimization - zeroify
        if (cmp === 0) {
            this.negative = 0;
            this.length = 1;
            this.words[0] = 0;
            return this;
        }
        // a > b
        var a, b;
        if (cmp > 0) {
            a = this;
            b = num;
        } else {
            a = num;
            b = this;
        }
        var carry = 0;
        for(var i = 0; i < b.length; i++){
            r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        for(; carry !== 0 && i < a.length; i++){
            r = (a.words[i] | 0) + carry;
            carry = r >> 26;
            this.words[i] = r & 67108863;
        }
        // Copy rest of the words
        if (carry === 0 && i < a.length && a !== this) for(; i < a.length; i++)this.words[i] = a.words[i];
        this.length = Math.max(this.length, i);
        if (a !== this) this.negative = 1;
        return this._strip();
    };
    // Subtract `num` from `this`
    BN.prototype.sub = function sub(num) {
        return this.clone().isub(num);
    };
    function smallMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        var len = self.length + num.length | 0;
        out.length = len;
        len = len - 1 | 0;
        // Peel one iteration (compiler can't do it, because of code complexity)
        var a = self.words[0] | 0;
        var b = num.words[0] | 0;
        var r = a * b;
        var lo = r & 67108863;
        var carry = r / 67108864 | 0;
        out.words[0] = lo;
        for(var k = 1; k < len; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = carry >>> 26;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j | 0;
                a = self.words[i] | 0;
                b = num.words[j] | 0;
                r = a * b + rword;
                ncarry += r / 67108864 | 0;
                rword = r & 67108863;
            }
            out.words[k] = rword | 0;
            carry = ncarry | 0;
        }
        if (carry !== 0) out.words[k] = carry | 0;
        else out.length--;
        return out._strip();
    }
    // TODO(indutny): it may be reasonable to omit it for users who don't need
    // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
    // multiplication (like elliptic secp256k1).
    var comb10MulTo = function comb10MulTo1(self, num, out) {
        var a = self.words;
        var b = num.words;
        var o = out.words;
        var c = 0;
        var lo;
        var mid;
        var hi;
        var a0 = a[0] | 0;
        var al0 = a0 & 8191;
        var ah0 = a0 >>> 13;
        var a1 = a[1] | 0;
        var al1 = a1 & 8191;
        var ah1 = a1 >>> 13;
        var a2 = a[2] | 0;
        var al2 = a2 & 8191;
        var ah2 = a2 >>> 13;
        var a3 = a[3] | 0;
        var al3 = a3 & 8191;
        var ah3 = a3 >>> 13;
        var a4 = a[4] | 0;
        var al4 = a4 & 8191;
        var ah4 = a4 >>> 13;
        var a5 = a[5] | 0;
        var al5 = a5 & 8191;
        var ah5 = a5 >>> 13;
        var a6 = a[6] | 0;
        var al6 = a6 & 8191;
        var ah6 = a6 >>> 13;
        var a7 = a[7] | 0;
        var al7 = a7 & 8191;
        var ah7 = a7 >>> 13;
        var a8 = a[8] | 0;
        var al8 = a8 & 8191;
        var ah8 = a8 >>> 13;
        var a9 = a[9] | 0;
        var al9 = a9 & 8191;
        var ah9 = a9 >>> 13;
        var b0 = b[0] | 0;
        var bl0 = b0 & 8191;
        var bh0 = b0 >>> 13;
        var b1 = b[1] | 0;
        var bl1 = b1 & 8191;
        var bh1 = b1 >>> 13;
        var b2 = b[2] | 0;
        var bl2 = b2 & 8191;
        var bh2 = b2 >>> 13;
        var b3 = b[3] | 0;
        var bl3 = b3 & 8191;
        var bh3 = b3 >>> 13;
        var b4 = b[4] | 0;
        var bl4 = b4 & 8191;
        var bh4 = b4 >>> 13;
        var b5 = b[5] | 0;
        var bl5 = b5 & 8191;
        var bh5 = b5 >>> 13;
        var b6 = b[6] | 0;
        var bl6 = b6 & 8191;
        var bh6 = b6 >>> 13;
        var b7 = b[7] | 0;
        var bl7 = b7 & 8191;
        var bh7 = b7 >>> 13;
        var b8 = b[8] | 0;
        var bl8 = b8 & 8191;
        var bh8 = b8 >>> 13;
        var b9 = b[9] | 0;
        var bl9 = b9 & 8191;
        var bh9 = b9 >>> 13;
        out.negative = self.negative ^ num.negative;
        out.length = 19;
        /* k = 0 */ lo = Math.imul(al0, bl0);
        mid = Math.imul(al0, bh0);
        mid = mid + Math.imul(ah0, bl0) | 0;
        hi = Math.imul(ah0, bh0);
        var w0 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;
        w0 &= 67108863;
        /* k = 1 */ lo = Math.imul(al1, bl0);
        mid = Math.imul(al1, bh0);
        mid = mid + Math.imul(ah1, bl0) | 0;
        hi = Math.imul(ah1, bh0);
        lo = lo + Math.imul(al0, bl1) | 0;
        mid = mid + Math.imul(al0, bh1) | 0;
        mid = mid + Math.imul(ah0, bl1) | 0;
        hi = hi + Math.imul(ah0, bh1) | 0;
        var w1 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;
        w1 &= 67108863;
        /* k = 2 */ lo = Math.imul(al2, bl0);
        mid = Math.imul(al2, bh0);
        mid = mid + Math.imul(ah2, bl0) | 0;
        hi = Math.imul(ah2, bh0);
        lo = lo + Math.imul(al1, bl1) | 0;
        mid = mid + Math.imul(al1, bh1) | 0;
        mid = mid + Math.imul(ah1, bl1) | 0;
        hi = hi + Math.imul(ah1, bh1) | 0;
        lo = lo + Math.imul(al0, bl2) | 0;
        mid = mid + Math.imul(al0, bh2) | 0;
        mid = mid + Math.imul(ah0, bl2) | 0;
        hi = hi + Math.imul(ah0, bh2) | 0;
        var w2 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;
        w2 &= 67108863;
        /* k = 3 */ lo = Math.imul(al3, bl0);
        mid = Math.imul(al3, bh0);
        mid = mid + Math.imul(ah3, bl0) | 0;
        hi = Math.imul(ah3, bh0);
        lo = lo + Math.imul(al2, bl1) | 0;
        mid = mid + Math.imul(al2, bh1) | 0;
        mid = mid + Math.imul(ah2, bl1) | 0;
        hi = hi + Math.imul(ah2, bh1) | 0;
        lo = lo + Math.imul(al1, bl2) | 0;
        mid = mid + Math.imul(al1, bh2) | 0;
        mid = mid + Math.imul(ah1, bl2) | 0;
        hi = hi + Math.imul(ah1, bh2) | 0;
        lo = lo + Math.imul(al0, bl3) | 0;
        mid = mid + Math.imul(al0, bh3) | 0;
        mid = mid + Math.imul(ah0, bl3) | 0;
        hi = hi + Math.imul(ah0, bh3) | 0;
        var w3 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;
        w3 &= 67108863;
        /* k = 4 */ lo = Math.imul(al4, bl0);
        mid = Math.imul(al4, bh0);
        mid = mid + Math.imul(ah4, bl0) | 0;
        hi = Math.imul(ah4, bh0);
        lo = lo + Math.imul(al3, bl1) | 0;
        mid = mid + Math.imul(al3, bh1) | 0;
        mid = mid + Math.imul(ah3, bl1) | 0;
        hi = hi + Math.imul(ah3, bh1) | 0;
        lo = lo + Math.imul(al2, bl2) | 0;
        mid = mid + Math.imul(al2, bh2) | 0;
        mid = mid + Math.imul(ah2, bl2) | 0;
        hi = hi + Math.imul(ah2, bh2) | 0;
        lo = lo + Math.imul(al1, bl3) | 0;
        mid = mid + Math.imul(al1, bh3) | 0;
        mid = mid + Math.imul(ah1, bl3) | 0;
        hi = hi + Math.imul(ah1, bh3) | 0;
        lo = lo + Math.imul(al0, bl4) | 0;
        mid = mid + Math.imul(al0, bh4) | 0;
        mid = mid + Math.imul(ah0, bl4) | 0;
        hi = hi + Math.imul(ah0, bh4) | 0;
        var w4 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;
        w4 &= 67108863;
        /* k = 5 */ lo = Math.imul(al5, bl0);
        mid = Math.imul(al5, bh0);
        mid = mid + Math.imul(ah5, bl0) | 0;
        hi = Math.imul(ah5, bh0);
        lo = lo + Math.imul(al4, bl1) | 0;
        mid = mid + Math.imul(al4, bh1) | 0;
        mid = mid + Math.imul(ah4, bl1) | 0;
        hi = hi + Math.imul(ah4, bh1) | 0;
        lo = lo + Math.imul(al3, bl2) | 0;
        mid = mid + Math.imul(al3, bh2) | 0;
        mid = mid + Math.imul(ah3, bl2) | 0;
        hi = hi + Math.imul(ah3, bh2) | 0;
        lo = lo + Math.imul(al2, bl3) | 0;
        mid = mid + Math.imul(al2, bh3) | 0;
        mid = mid + Math.imul(ah2, bl3) | 0;
        hi = hi + Math.imul(ah2, bh3) | 0;
        lo = lo + Math.imul(al1, bl4) | 0;
        mid = mid + Math.imul(al1, bh4) | 0;
        mid = mid + Math.imul(ah1, bl4) | 0;
        hi = hi + Math.imul(ah1, bh4) | 0;
        lo = lo + Math.imul(al0, bl5) | 0;
        mid = mid + Math.imul(al0, bh5) | 0;
        mid = mid + Math.imul(ah0, bl5) | 0;
        hi = hi + Math.imul(ah0, bh5) | 0;
        var w5 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;
        w5 &= 67108863;
        /* k = 6 */ lo = Math.imul(al6, bl0);
        mid = Math.imul(al6, bh0);
        mid = mid + Math.imul(ah6, bl0) | 0;
        hi = Math.imul(ah6, bh0);
        lo = lo + Math.imul(al5, bl1) | 0;
        mid = mid + Math.imul(al5, bh1) | 0;
        mid = mid + Math.imul(ah5, bl1) | 0;
        hi = hi + Math.imul(ah5, bh1) | 0;
        lo = lo + Math.imul(al4, bl2) | 0;
        mid = mid + Math.imul(al4, bh2) | 0;
        mid = mid + Math.imul(ah4, bl2) | 0;
        hi = hi + Math.imul(ah4, bh2) | 0;
        lo = lo + Math.imul(al3, bl3) | 0;
        mid = mid + Math.imul(al3, bh3) | 0;
        mid = mid + Math.imul(ah3, bl3) | 0;
        hi = hi + Math.imul(ah3, bh3) | 0;
        lo = lo + Math.imul(al2, bl4) | 0;
        mid = mid + Math.imul(al2, bh4) | 0;
        mid = mid + Math.imul(ah2, bl4) | 0;
        hi = hi + Math.imul(ah2, bh4) | 0;
        lo = lo + Math.imul(al1, bl5) | 0;
        mid = mid + Math.imul(al1, bh5) | 0;
        mid = mid + Math.imul(ah1, bl5) | 0;
        hi = hi + Math.imul(ah1, bh5) | 0;
        lo = lo + Math.imul(al0, bl6) | 0;
        mid = mid + Math.imul(al0, bh6) | 0;
        mid = mid + Math.imul(ah0, bl6) | 0;
        hi = hi + Math.imul(ah0, bh6) | 0;
        var w6 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;
        w6 &= 67108863;
        /* k = 7 */ lo = Math.imul(al7, bl0);
        mid = Math.imul(al7, bh0);
        mid = mid + Math.imul(ah7, bl0) | 0;
        hi = Math.imul(ah7, bh0);
        lo = lo + Math.imul(al6, bl1) | 0;
        mid = mid + Math.imul(al6, bh1) | 0;
        mid = mid + Math.imul(ah6, bl1) | 0;
        hi = hi + Math.imul(ah6, bh1) | 0;
        lo = lo + Math.imul(al5, bl2) | 0;
        mid = mid + Math.imul(al5, bh2) | 0;
        mid = mid + Math.imul(ah5, bl2) | 0;
        hi = hi + Math.imul(ah5, bh2) | 0;
        lo = lo + Math.imul(al4, bl3) | 0;
        mid = mid + Math.imul(al4, bh3) | 0;
        mid = mid + Math.imul(ah4, bl3) | 0;
        hi = hi + Math.imul(ah4, bh3) | 0;
        lo = lo + Math.imul(al3, bl4) | 0;
        mid = mid + Math.imul(al3, bh4) | 0;
        mid = mid + Math.imul(ah3, bl4) | 0;
        hi = hi + Math.imul(ah3, bh4) | 0;
        lo = lo + Math.imul(al2, bl5) | 0;
        mid = mid + Math.imul(al2, bh5) | 0;
        mid = mid + Math.imul(ah2, bl5) | 0;
        hi = hi + Math.imul(ah2, bh5) | 0;
        lo = lo + Math.imul(al1, bl6) | 0;
        mid = mid + Math.imul(al1, bh6) | 0;
        mid = mid + Math.imul(ah1, bl6) | 0;
        hi = hi + Math.imul(ah1, bh6) | 0;
        lo = lo + Math.imul(al0, bl7) | 0;
        mid = mid + Math.imul(al0, bh7) | 0;
        mid = mid + Math.imul(ah0, bl7) | 0;
        hi = hi + Math.imul(ah0, bh7) | 0;
        var w7 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;
        w7 &= 67108863;
        /* k = 8 */ lo = Math.imul(al8, bl0);
        mid = Math.imul(al8, bh0);
        mid = mid + Math.imul(ah8, bl0) | 0;
        hi = Math.imul(ah8, bh0);
        lo = lo + Math.imul(al7, bl1) | 0;
        mid = mid + Math.imul(al7, bh1) | 0;
        mid = mid + Math.imul(ah7, bl1) | 0;
        hi = hi + Math.imul(ah7, bh1) | 0;
        lo = lo + Math.imul(al6, bl2) | 0;
        mid = mid + Math.imul(al6, bh2) | 0;
        mid = mid + Math.imul(ah6, bl2) | 0;
        hi = hi + Math.imul(ah6, bh2) | 0;
        lo = lo + Math.imul(al5, bl3) | 0;
        mid = mid + Math.imul(al5, bh3) | 0;
        mid = mid + Math.imul(ah5, bl3) | 0;
        hi = hi + Math.imul(ah5, bh3) | 0;
        lo = lo + Math.imul(al4, bl4) | 0;
        mid = mid + Math.imul(al4, bh4) | 0;
        mid = mid + Math.imul(ah4, bl4) | 0;
        hi = hi + Math.imul(ah4, bh4) | 0;
        lo = lo + Math.imul(al3, bl5) | 0;
        mid = mid + Math.imul(al3, bh5) | 0;
        mid = mid + Math.imul(ah3, bl5) | 0;
        hi = hi + Math.imul(ah3, bh5) | 0;
        lo = lo + Math.imul(al2, bl6) | 0;
        mid = mid + Math.imul(al2, bh6) | 0;
        mid = mid + Math.imul(ah2, bl6) | 0;
        hi = hi + Math.imul(ah2, bh6) | 0;
        lo = lo + Math.imul(al1, bl7) | 0;
        mid = mid + Math.imul(al1, bh7) | 0;
        mid = mid + Math.imul(ah1, bl7) | 0;
        hi = hi + Math.imul(ah1, bh7) | 0;
        lo = lo + Math.imul(al0, bl8) | 0;
        mid = mid + Math.imul(al0, bh8) | 0;
        mid = mid + Math.imul(ah0, bl8) | 0;
        hi = hi + Math.imul(ah0, bh8) | 0;
        var w8 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;
        w8 &= 67108863;
        /* k = 9 */ lo = Math.imul(al9, bl0);
        mid = Math.imul(al9, bh0);
        mid = mid + Math.imul(ah9, bl0) | 0;
        hi = Math.imul(ah9, bh0);
        lo = lo + Math.imul(al8, bl1) | 0;
        mid = mid + Math.imul(al8, bh1) | 0;
        mid = mid + Math.imul(ah8, bl1) | 0;
        hi = hi + Math.imul(ah8, bh1) | 0;
        lo = lo + Math.imul(al7, bl2) | 0;
        mid = mid + Math.imul(al7, bh2) | 0;
        mid = mid + Math.imul(ah7, bl2) | 0;
        hi = hi + Math.imul(ah7, bh2) | 0;
        lo = lo + Math.imul(al6, bl3) | 0;
        mid = mid + Math.imul(al6, bh3) | 0;
        mid = mid + Math.imul(ah6, bl3) | 0;
        hi = hi + Math.imul(ah6, bh3) | 0;
        lo = lo + Math.imul(al5, bl4) | 0;
        mid = mid + Math.imul(al5, bh4) | 0;
        mid = mid + Math.imul(ah5, bl4) | 0;
        hi = hi + Math.imul(ah5, bh4) | 0;
        lo = lo + Math.imul(al4, bl5) | 0;
        mid = mid + Math.imul(al4, bh5) | 0;
        mid = mid + Math.imul(ah4, bl5) | 0;
        hi = hi + Math.imul(ah4, bh5) | 0;
        lo = lo + Math.imul(al3, bl6) | 0;
        mid = mid + Math.imul(al3, bh6) | 0;
        mid = mid + Math.imul(ah3, bl6) | 0;
        hi = hi + Math.imul(ah3, bh6) | 0;
        lo = lo + Math.imul(al2, bl7) | 0;
        mid = mid + Math.imul(al2, bh7) | 0;
        mid = mid + Math.imul(ah2, bl7) | 0;
        hi = hi + Math.imul(ah2, bh7) | 0;
        lo = lo + Math.imul(al1, bl8) | 0;
        mid = mid + Math.imul(al1, bh8) | 0;
        mid = mid + Math.imul(ah1, bl8) | 0;
        hi = hi + Math.imul(ah1, bh8) | 0;
        lo = lo + Math.imul(al0, bl9) | 0;
        mid = mid + Math.imul(al0, bh9) | 0;
        mid = mid + Math.imul(ah0, bl9) | 0;
        hi = hi + Math.imul(ah0, bh9) | 0;
        var w9 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;
        w9 &= 67108863;
        /* k = 10 */ lo = Math.imul(al9, bl1);
        mid = Math.imul(al9, bh1);
        mid = mid + Math.imul(ah9, bl1) | 0;
        hi = Math.imul(ah9, bh1);
        lo = lo + Math.imul(al8, bl2) | 0;
        mid = mid + Math.imul(al8, bh2) | 0;
        mid = mid + Math.imul(ah8, bl2) | 0;
        hi = hi + Math.imul(ah8, bh2) | 0;
        lo = lo + Math.imul(al7, bl3) | 0;
        mid = mid + Math.imul(al7, bh3) | 0;
        mid = mid + Math.imul(ah7, bl3) | 0;
        hi = hi + Math.imul(ah7, bh3) | 0;
        lo = lo + Math.imul(al6, bl4) | 0;
        mid = mid + Math.imul(al6, bh4) | 0;
        mid = mid + Math.imul(ah6, bl4) | 0;
        hi = hi + Math.imul(ah6, bh4) | 0;
        lo = lo + Math.imul(al5, bl5) | 0;
        mid = mid + Math.imul(al5, bh5) | 0;
        mid = mid + Math.imul(ah5, bl5) | 0;
        hi = hi + Math.imul(ah5, bh5) | 0;
        lo = lo + Math.imul(al4, bl6) | 0;
        mid = mid + Math.imul(al4, bh6) | 0;
        mid = mid + Math.imul(ah4, bl6) | 0;
        hi = hi + Math.imul(ah4, bh6) | 0;
        lo = lo + Math.imul(al3, bl7) | 0;
        mid = mid + Math.imul(al3, bh7) | 0;
        mid = mid + Math.imul(ah3, bl7) | 0;
        hi = hi + Math.imul(ah3, bh7) | 0;
        lo = lo + Math.imul(al2, bl8) | 0;
        mid = mid + Math.imul(al2, bh8) | 0;
        mid = mid + Math.imul(ah2, bl8) | 0;
        hi = hi + Math.imul(ah2, bh8) | 0;
        lo = lo + Math.imul(al1, bl9) | 0;
        mid = mid + Math.imul(al1, bh9) | 0;
        mid = mid + Math.imul(ah1, bl9) | 0;
        hi = hi + Math.imul(ah1, bh9) | 0;
        var w10 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;
        w10 &= 67108863;
        /* k = 11 */ lo = Math.imul(al9, bl2);
        mid = Math.imul(al9, bh2);
        mid = mid + Math.imul(ah9, bl2) | 0;
        hi = Math.imul(ah9, bh2);
        lo = lo + Math.imul(al8, bl3) | 0;
        mid = mid + Math.imul(al8, bh3) | 0;
        mid = mid + Math.imul(ah8, bl3) | 0;
        hi = hi + Math.imul(ah8, bh3) | 0;
        lo = lo + Math.imul(al7, bl4) | 0;
        mid = mid + Math.imul(al7, bh4) | 0;
        mid = mid + Math.imul(ah7, bl4) | 0;
        hi = hi + Math.imul(ah7, bh4) | 0;
        lo = lo + Math.imul(al6, bl5) | 0;
        mid = mid + Math.imul(al6, bh5) | 0;
        mid = mid + Math.imul(ah6, bl5) | 0;
        hi = hi + Math.imul(ah6, bh5) | 0;
        lo = lo + Math.imul(al5, bl6) | 0;
        mid = mid + Math.imul(al5, bh6) | 0;
        mid = mid + Math.imul(ah5, bl6) | 0;
        hi = hi + Math.imul(ah5, bh6) | 0;
        lo = lo + Math.imul(al4, bl7) | 0;
        mid = mid + Math.imul(al4, bh7) | 0;
        mid = mid + Math.imul(ah4, bl7) | 0;
        hi = hi + Math.imul(ah4, bh7) | 0;
        lo = lo + Math.imul(al3, bl8) | 0;
        mid = mid + Math.imul(al3, bh8) | 0;
        mid = mid + Math.imul(ah3, bl8) | 0;
        hi = hi + Math.imul(ah3, bh8) | 0;
        lo = lo + Math.imul(al2, bl9) | 0;
        mid = mid + Math.imul(al2, bh9) | 0;
        mid = mid + Math.imul(ah2, bl9) | 0;
        hi = hi + Math.imul(ah2, bh9) | 0;
        var w11 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;
        w11 &= 67108863;
        /* k = 12 */ lo = Math.imul(al9, bl3);
        mid = Math.imul(al9, bh3);
        mid = mid + Math.imul(ah9, bl3) | 0;
        hi = Math.imul(ah9, bh3);
        lo = lo + Math.imul(al8, bl4) | 0;
        mid = mid + Math.imul(al8, bh4) | 0;
        mid = mid + Math.imul(ah8, bl4) | 0;
        hi = hi + Math.imul(ah8, bh4) | 0;
        lo = lo + Math.imul(al7, bl5) | 0;
        mid = mid + Math.imul(al7, bh5) | 0;
        mid = mid + Math.imul(ah7, bl5) | 0;
        hi = hi + Math.imul(ah7, bh5) | 0;
        lo = lo + Math.imul(al6, bl6) | 0;
        mid = mid + Math.imul(al6, bh6) | 0;
        mid = mid + Math.imul(ah6, bl6) | 0;
        hi = hi + Math.imul(ah6, bh6) | 0;
        lo = lo + Math.imul(al5, bl7) | 0;
        mid = mid + Math.imul(al5, bh7) | 0;
        mid = mid + Math.imul(ah5, bl7) | 0;
        hi = hi + Math.imul(ah5, bh7) | 0;
        lo = lo + Math.imul(al4, bl8) | 0;
        mid = mid + Math.imul(al4, bh8) | 0;
        mid = mid + Math.imul(ah4, bl8) | 0;
        hi = hi + Math.imul(ah4, bh8) | 0;
        lo = lo + Math.imul(al3, bl9) | 0;
        mid = mid + Math.imul(al3, bh9) | 0;
        mid = mid + Math.imul(ah3, bl9) | 0;
        hi = hi + Math.imul(ah3, bh9) | 0;
        var w12 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;
        w12 &= 67108863;
        /* k = 13 */ lo = Math.imul(al9, bl4);
        mid = Math.imul(al9, bh4);
        mid = mid + Math.imul(ah9, bl4) | 0;
        hi = Math.imul(ah9, bh4);
        lo = lo + Math.imul(al8, bl5) | 0;
        mid = mid + Math.imul(al8, bh5) | 0;
        mid = mid + Math.imul(ah8, bl5) | 0;
        hi = hi + Math.imul(ah8, bh5) | 0;
        lo = lo + Math.imul(al7, bl6) | 0;
        mid = mid + Math.imul(al7, bh6) | 0;
        mid = mid + Math.imul(ah7, bl6) | 0;
        hi = hi + Math.imul(ah7, bh6) | 0;
        lo = lo + Math.imul(al6, bl7) | 0;
        mid = mid + Math.imul(al6, bh7) | 0;
        mid = mid + Math.imul(ah6, bl7) | 0;
        hi = hi + Math.imul(ah6, bh7) | 0;
        lo = lo + Math.imul(al5, bl8) | 0;
        mid = mid + Math.imul(al5, bh8) | 0;
        mid = mid + Math.imul(ah5, bl8) | 0;
        hi = hi + Math.imul(ah5, bh8) | 0;
        lo = lo + Math.imul(al4, bl9) | 0;
        mid = mid + Math.imul(al4, bh9) | 0;
        mid = mid + Math.imul(ah4, bl9) | 0;
        hi = hi + Math.imul(ah4, bh9) | 0;
        var w13 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;
        w13 &= 67108863;
        /* k = 14 */ lo = Math.imul(al9, bl5);
        mid = Math.imul(al9, bh5);
        mid = mid + Math.imul(ah9, bl5) | 0;
        hi = Math.imul(ah9, bh5);
        lo = lo + Math.imul(al8, bl6) | 0;
        mid = mid + Math.imul(al8, bh6) | 0;
        mid = mid + Math.imul(ah8, bl6) | 0;
        hi = hi + Math.imul(ah8, bh6) | 0;
        lo = lo + Math.imul(al7, bl7) | 0;
        mid = mid + Math.imul(al7, bh7) | 0;
        mid = mid + Math.imul(ah7, bl7) | 0;
        hi = hi + Math.imul(ah7, bh7) | 0;
        lo = lo + Math.imul(al6, bl8) | 0;
        mid = mid + Math.imul(al6, bh8) | 0;
        mid = mid + Math.imul(ah6, bl8) | 0;
        hi = hi + Math.imul(ah6, bh8) | 0;
        lo = lo + Math.imul(al5, bl9) | 0;
        mid = mid + Math.imul(al5, bh9) | 0;
        mid = mid + Math.imul(ah5, bl9) | 0;
        hi = hi + Math.imul(ah5, bh9) | 0;
        var w14 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;
        w14 &= 67108863;
        /* k = 15 */ lo = Math.imul(al9, bl6);
        mid = Math.imul(al9, bh6);
        mid = mid + Math.imul(ah9, bl6) | 0;
        hi = Math.imul(ah9, bh6);
        lo = lo + Math.imul(al8, bl7) | 0;
        mid = mid + Math.imul(al8, bh7) | 0;
        mid = mid + Math.imul(ah8, bl7) | 0;
        hi = hi + Math.imul(ah8, bh7) | 0;
        lo = lo + Math.imul(al7, bl8) | 0;
        mid = mid + Math.imul(al7, bh8) | 0;
        mid = mid + Math.imul(ah7, bl8) | 0;
        hi = hi + Math.imul(ah7, bh8) | 0;
        lo = lo + Math.imul(al6, bl9) | 0;
        mid = mid + Math.imul(al6, bh9) | 0;
        mid = mid + Math.imul(ah6, bl9) | 0;
        hi = hi + Math.imul(ah6, bh9) | 0;
        var w15 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;
        w15 &= 67108863;
        /* k = 16 */ lo = Math.imul(al9, bl7);
        mid = Math.imul(al9, bh7);
        mid = mid + Math.imul(ah9, bl7) | 0;
        hi = Math.imul(ah9, bh7);
        lo = lo + Math.imul(al8, bl8) | 0;
        mid = mid + Math.imul(al8, bh8) | 0;
        mid = mid + Math.imul(ah8, bl8) | 0;
        hi = hi + Math.imul(ah8, bh8) | 0;
        lo = lo + Math.imul(al7, bl9) | 0;
        mid = mid + Math.imul(al7, bh9) | 0;
        mid = mid + Math.imul(ah7, bl9) | 0;
        hi = hi + Math.imul(ah7, bh9) | 0;
        var w16 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;
        w16 &= 67108863;
        /* k = 17 */ lo = Math.imul(al9, bl8);
        mid = Math.imul(al9, bh8);
        mid = mid + Math.imul(ah9, bl8) | 0;
        hi = Math.imul(ah9, bh8);
        lo = lo + Math.imul(al8, bl9) | 0;
        mid = mid + Math.imul(al8, bh9) | 0;
        mid = mid + Math.imul(ah8, bl9) | 0;
        hi = hi + Math.imul(ah8, bh9) | 0;
        var w17 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;
        w17 &= 67108863;
        /* k = 18 */ lo = Math.imul(al9, bl9);
        mid = Math.imul(al9, bh9);
        mid = mid + Math.imul(ah9, bl9) | 0;
        hi = Math.imul(ah9, bh9);
        var w18 = (c + lo | 0) + ((mid & 8191) << 13) | 0;
        c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;
        w18 &= 67108863;
        o[0] = w0;
        o[1] = w1;
        o[2] = w2;
        o[3] = w3;
        o[4] = w4;
        o[5] = w5;
        o[6] = w6;
        o[7] = w7;
        o[8] = w8;
        o[9] = w9;
        o[10] = w10;
        o[11] = w11;
        o[12] = w12;
        o[13] = w13;
        o[14] = w14;
        o[15] = w15;
        o[16] = w16;
        o[17] = w17;
        o[18] = w18;
        if (c !== 0) {
            o[19] = c;
            out.length++;
        }
        return out;
    };
    // Polyfill comb
    if (!Math.imul) comb10MulTo = smallMulTo;
    function bigMulTo(self, num, out) {
        out.negative = num.negative ^ self.negative;
        out.length = self.length + num.length;
        var carry = 0;
        var hncarry = 0;
        for(var k = 0; k < out.length - 1; k++){
            // Sum all words with the same `i + j = k` and accumulate `ncarry`,
            // note that ncarry could be >= 0x3ffffff
            var ncarry = hncarry;
            hncarry = 0;
            var rword = carry & 67108863;
            var maxJ = Math.min(k, num.length - 1);
            for(var j = Math.max(0, k - self.length + 1); j <= maxJ; j++){
                var i = k - j;
                var a = self.words[i] | 0;
                var b = num.words[j] | 0;
                var r = a * b;
                var lo = r & 67108863;
                ncarry = ncarry + (r / 67108864 | 0) | 0;
                lo = lo + rword | 0;
                rword = lo & 67108863;
                ncarry = ncarry + (lo >>> 26) | 0;
                hncarry += ncarry >>> 26;
                ncarry &= 67108863;
            }
            out.words[k] = rword;
            carry = ncarry;
            ncarry = hncarry;
        }
        if (carry !== 0) out.words[k] = carry;
        else out.length--;
        return out._strip();
    }
    function jumboMulTo(self, num, out) {
        // Temporary disable, see https://github.com/indutny/bn.js/issues/211
        // var fftm = new FFTM();
        // return fftm.mulp(self, num, out);
        return bigMulTo(self, num, out);
    }
    BN.prototype.mulTo = function mulTo(num, out) {
        var res;
        var len = this.length + num.length;
        if (this.length === 10 && num.length === 10) res = comb10MulTo(this, num, out);
        else if (len < 63) res = smallMulTo(this, num, out);
        else if (len < 1024) res = bigMulTo(this, num, out);
        else res = jumboMulTo(this, num, out);
        return res;
    };
    // Cooley-Tukey algorithm for FFT
    // slightly revisited to rely on looping instead of recursion
    function FFTM(x, y) {
        this.x = x;
        this.y = y;
    }
    FFTM.prototype.makeRBT = function makeRBT(N) {
        var t = new Array(N);
        var l = BN.prototype._countBits(N) - 1;
        for(var i = 0; i < N; i++)t[i] = this.revBin(i, l, N);
        return t;
    };
    // Returns binary-reversed representation of `x`
    FFTM.prototype.revBin = function revBin(x, l, N) {
        if (x === 0 || x === N - 1) return x;
        var rb = 0;
        for(var i = 0; i < l; i++){
            rb |= (x & 1) << l - i - 1;
            x >>= 1;
        }
        return rb;
    };
    // Performs "tweedling" phase, therefore 'emulating'
    // behaviour of the recursive algorithm
    FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {
        for(var i = 0; i < N; i++){
            rtws[i] = rws[rbt[i]];
            itws[i] = iws[rbt[i]];
        }
    };
    FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {
        this.permute(rbt, rws, iws, rtws, itws, N);
        for(var s = 1; s < N; s <<= 1){
            var l = s << 1;
            var rtwdf = Math.cos(2 * Math.PI / l);
            var itwdf = Math.sin(2 * Math.PI / l);
            for(var p = 0; p < N; p += l){
                var rtwdf_ = rtwdf;
                var itwdf_ = itwdf;
                for(var j = 0; j < s; j++){
                    var re = rtws[p + j];
                    var ie = itws[p + j];
                    var ro = rtws[p + j + s];
                    var io = itws[p + j + s];
                    var rx = rtwdf_ * ro - itwdf_ * io;
                    io = rtwdf_ * io + itwdf_ * ro;
                    ro = rx;
                    rtws[p + j] = re + ro;
                    itws[p + j] = ie + io;
                    rtws[p + j + s] = re - ro;
                    itws[p + j + s] = ie - io;
                    /* jshint maxdepth : false */ if (j !== l) {
                        rx = rtwdf * rtwdf_ - itwdf * itwdf_;
                        itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
                        rtwdf_ = rx;
                    }
                }
            }
        }
    };
    FFTM.prototype.guessLen13b = function guessLen13b(n, m) {
        var N = Math.max(m, n) | 1;
        var odd = N & 1;
        var i = 0;
        for(N = N / 2 | 0; N; N = N >>> 1)i++;
        return 1 << i + 1 + odd;
    };
    FFTM.prototype.conjugate = function conjugate(rws, iws, N) {
        if (N <= 1) return;
        for(var i = 0; i < N / 2; i++){
            var t = rws[i];
            rws[i] = rws[N - i - 1];
            rws[N - i - 1] = t;
            t = iws[i];
            iws[i] = -iws[N - i - 1];
            iws[N - i - 1] = -t;
        }
    };
    FFTM.prototype.normalize13b = function normalize13b(ws, N) {
        var carry = 0;
        for(var i = 0; i < N / 2; i++){
            var w = Math.round(ws[2 * i + 1] / N) * 8192 + Math.round(ws[2 * i] / N) + carry;
            ws[i] = w & 67108863;
            if (w < 67108864) carry = 0;
            else carry = w / 67108864 | 0;
        }
        return ws;
    };
    FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {
        var carry = 0;
        for(var i = 0; i < len; i++){
            carry = carry + (ws[i] | 0);
            rws[2 * i] = carry & 8191;
            carry = carry >>> 13;
            rws[2 * i + 1] = carry & 8191;
            carry = carry >>> 13;
        }
        // Pad with zeroes
        for(i = 2 * len; i < N; ++i)rws[i] = 0;
        assert(carry === 0);
        assert((carry & -8192) === 0);
    };
    FFTM.prototype.stub = function stub(N) {
        var ph = new Array(N);
        for(var i = 0; i < N; i++)ph[i] = 0;
        return ph;
    };
    FFTM.prototype.mulp = function mulp(x, y, out) {
        var N = 2 * this.guessLen13b(x.length, y.length);
        var rbt = this.makeRBT(N);
        var _ = this.stub(N);
        var rws = new Array(N);
        var rwst = new Array(N);
        var iwst = new Array(N);
        var nrws = new Array(N);
        var nrwst = new Array(N);
        var niwst = new Array(N);
        var rmws = out.words;
        rmws.length = N;
        this.convert13b(x.words, x.length, rws, N);
        this.convert13b(y.words, y.length, nrws, N);
        this.transform(rws, _, rwst, iwst, N, rbt);
        this.transform(nrws, _, nrwst, niwst, N, rbt);
        for(var i = 0; i < N; i++){
            var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
            iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
            rwst[i] = rx;
        }
        this.conjugate(rwst, iwst, N);
        this.transform(rwst, iwst, rmws, _, N, rbt);
        this.conjugate(rmws, _, N);
        this.normalize13b(rmws, N);
        out.negative = x.negative ^ y.negative;
        out.length = x.length + y.length;
        return out._strip();
    };
    // Multiply `this` by `num`
    BN.prototype.mul = function mul(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return this.mulTo(num, out);
    };
    // Multiply employing FFT
    BN.prototype.mulf = function mulf(num) {
        var out = new BN(null);
        out.words = new Array(this.length + num.length);
        return jumboMulTo(this, num, out);
    };
    // In-place Multiplication
    BN.prototype.imul = function imul(num) {
        return this.clone().mulTo(num, this);
    };
    BN.prototype.imuln = function imuln(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(typeof num === 'number');
        assert(num < 67108864);
        // Carry
        var carry = 0;
        for(var i = 0; i < this.length; i++){
            var w = (this.words[i] | 0) * num;
            var lo = (w & 67108863) + (carry & 67108863);
            carry >>= 26;
            carry += w / 67108864 | 0;
            // NOTE: lo is 27bit maximum
            carry += lo >>> 26;
            this.words[i] = lo & 67108863;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.muln = function muln(num) {
        return this.clone().imuln(num);
    };
    // `this` * `this`
    BN.prototype.sqr = function sqr() {
        return this.mul(this);
    };
    // `this` * `this` in-place
    BN.prototype.isqr = function isqr() {
        return this.imul(this.clone());
    };
    // Math.pow(`this`, `num`)
    BN.prototype.pow = function pow(num) {
        var w = toBitArray(num);
        if (w.length === 0) return new BN(1);
        // Skip leading zeroes
        var res = this;
        for(var i = 0; i < w.length; i++, res = res.sqr()){
            if (w[i] !== 0) break;
        }
        if ((++i) < w.length) for(var q = res.sqr(); i < w.length; i++, q = q.sqr()){
            if (w[i] === 0) continue;
            res = res.mul(q);
        }
        return res;
    };
    // Shift-left in-place
    BN.prototype.iushln = function iushln(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        var carryMask = 67108863 >>> 26 - r << 26 - r;
        var i;
        if (r !== 0) {
            var carry = 0;
            for(i = 0; i < this.length; i++){
                var newCarry = this.words[i] & carryMask;
                var c = (this.words[i] | 0) - newCarry << r;
                this.words[i] = c | carry;
                carry = newCarry >>> 26 - r;
            }
            if (carry) {
                this.words[i] = carry;
                this.length++;
            }
        }
        if (s !== 0) {
            for(i = this.length - 1; i >= 0; i--)this.words[i + s] = this.words[i];
            for(i = 0; i < s; i++)this.words[i] = 0;
            this.length += s;
        }
        return this._strip();
    };
    BN.prototype.ishln = function ishln(bits) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushln(bits);
    };
    // Shift-right in-place
    // NOTE: `hint` is a lowest bit before trailing zeroes
    // NOTE: if `extended` is present - it will be filled with destroyed bits
    BN.prototype.iushrn = function iushrn(bits, hint, extended) {
        assert(typeof bits === 'number' && bits >= 0);
        var h;
        if (hint) h = (hint - hint % 26) / 26;
        else h = 0;
        var r = bits % 26;
        var s = Math.min((bits - r) / 26, this.length);
        var mask = 67108863 ^ 67108863 >>> r << r;
        var maskedWords = extended;
        h -= s;
        h = Math.max(0, h);
        // Extended mode, copy masked part
        if (maskedWords) {
            for(var i = 0; i < s; i++)maskedWords.words[i] = this.words[i];
            maskedWords.length = s;
        }
        if (s === 0) ;
        else if (this.length > s) {
            this.length -= s;
            for(i = 0; i < this.length; i++)this.words[i] = this.words[i + s];
        } else {
            this.words[0] = 0;
            this.length = 1;
        }
        var carry = 0;
        for(i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--){
            var word = this.words[i] | 0;
            this.words[i] = carry << 26 - r | word >>> r;
            carry = word & mask;
        }
        // Push carried bits as a mask
        if (maskedWords && carry !== 0) maskedWords.words[maskedWords.length++] = carry;
        if (this.length === 0) {
            this.words[0] = 0;
            this.length = 1;
        }
        return this._strip();
    };
    BN.prototype.ishrn = function ishrn(bits, hint, extended) {
        // TODO(indutny): implement me
        assert(this.negative === 0);
        return this.iushrn(bits, hint, extended);
    };
    // Shift-left
    BN.prototype.shln = function shln(bits) {
        return this.clone().ishln(bits);
    };
    BN.prototype.ushln = function ushln(bits) {
        return this.clone().iushln(bits);
    };
    // Shift-right
    BN.prototype.shrn = function shrn(bits) {
        return this.clone().ishrn(bits);
    };
    BN.prototype.ushrn = function ushrn(bits) {
        return this.clone().iushrn(bits);
    };
    // Test if n bit is set
    BN.prototype.testn = function testn(bit) {
        assert(typeof bit === 'number' && bit >= 0);
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) return false;
        // Check bit and return
        var w = this.words[s];
        return !!(w & q);
    };
    // Return only lowers bits of number (in-place)
    BN.prototype.imaskn = function imaskn(bits) {
        assert(typeof bits === 'number' && bits >= 0);
        var r = bits % 26;
        var s = (bits - r) / 26;
        assert(this.negative === 0, 'imaskn works only with positive numbers');
        if (this.length <= s) return this;
        if (r !== 0) s++;
        this.length = Math.min(s, this.length);
        if (r !== 0) {
            var mask = 67108863 ^ 67108863 >>> r << r;
            this.words[this.length - 1] &= mask;
        }
        return this._strip();
    };
    // Return only lowers bits of number
    BN.prototype.maskn = function maskn(bits) {
        return this.clone().imaskn(bits);
    };
    // Add plain number `num` to `this`
    BN.prototype.iaddn = function iaddn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.isubn(-num);
        // Possible sign change
        if (this.negative !== 0) {
            if (this.length === 1 && (this.words[0] | 0) <= num) {
                this.words[0] = num - (this.words[0] | 0);
                this.negative = 0;
                return this;
            }
            this.negative = 0;
            this.isubn(num);
            this.negative = 1;
            return this;
        }
        // Add without checks
        return this._iaddn(num);
    };
    BN.prototype._iaddn = function _iaddn(num) {
        this.words[0] += num;
        // Carry
        for(var i = 0; i < this.length && this.words[i] >= 67108864; i++){
            this.words[i] -= 67108864;
            if (i === this.length - 1) this.words[i + 1] = 1;
            else this.words[i + 1]++;
        }
        this.length = Math.max(this.length, i + 1);
        return this;
    };
    // Subtract plain number `num` from `this`
    BN.prototype.isubn = function isubn(num) {
        assert(typeof num === 'number');
        assert(num < 67108864);
        if (num < 0) return this.iaddn(-num);
        if (this.negative !== 0) {
            this.negative = 0;
            this.iaddn(num);
            this.negative = 1;
            return this;
        }
        this.words[0] -= num;
        if (this.length === 1 && this.words[0] < 0) {
            this.words[0] = -this.words[0];
            this.negative = 1;
        } else // Carry
        for(var i = 0; i < this.length && this.words[i] < 0; i++){
            this.words[i] += 67108864;
            this.words[i + 1] -= 1;
        }
        return this._strip();
    };
    BN.prototype.addn = function addn(num) {
        return this.clone().iaddn(num);
    };
    BN.prototype.subn = function subn(num) {
        return this.clone().isubn(num);
    };
    BN.prototype.iabs = function iabs() {
        this.negative = 0;
        return this;
    };
    BN.prototype.abs = function abs() {
        return this.clone().iabs();
    };
    BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul1, shift) {
        var len = num.length + shift;
        var i;
        this._expand(len);
        var w;
        var carry = 0;
        for(i = 0; i < num.length; i++){
            w = (this.words[i + shift] | 0) + carry;
            var right = (num.words[i] | 0) * mul1;
            w -= right & 67108863;
            carry = (w >> 26) - (right / 67108864 | 0);
            this.words[i + shift] = w & 67108863;
        }
        for(; i < this.length - shift; i++){
            w = (this.words[i + shift] | 0) + carry;
            carry = w >> 26;
            this.words[i + shift] = w & 67108863;
        }
        if (carry === 0) return this._strip();
        // Subtraction overflow
        assert(carry === -1);
        carry = 0;
        for(i = 0; i < this.length; i++){
            w = -(this.words[i] | 0) + carry;
            carry = w >> 26;
            this.words[i] = w & 67108863;
        }
        this.negative = 1;
        return this._strip();
    };
    BN.prototype._wordDiv = function _wordDiv(num, mode) {
        var shift = this.length - num.length;
        var a = this.clone();
        var b = num;
        // Normalize
        var bhi = b.words[b.length - 1] | 0;
        var bhiBits = this._countBits(bhi);
        shift = 26 - bhiBits;
        if (shift !== 0) {
            b = b.ushln(shift);
            a.iushln(shift);
            bhi = b.words[b.length - 1] | 0;
        }
        // Initialize quotient
        var m = a.length - b.length;
        var q;
        if (mode !== 'mod') {
            q = new BN(null);
            q.length = m + 1;
            q.words = new Array(q.length);
            for(var i = 0; i < q.length; i++)q.words[i] = 0;
        }
        var diff = a.clone()._ishlnsubmul(b, 1, m);
        if (diff.negative === 0) {
            a = diff;
            if (q) q.words[m] = 1;
        }
        for(var j = m - 1; j >= 0; j--){
            var qj = (a.words[b.length + j] | 0) * 67108864 + (a.words[b.length + j - 1] | 0);
            // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
            // (0x7ffffff)
            qj = Math.min(qj / bhi | 0, 67108863);
            a._ishlnsubmul(b, qj, j);
            while(a.negative !== 0){
                qj--;
                a.negative = 0;
                a._ishlnsubmul(b, 1, j);
                if (!a.isZero()) a.negative ^= 1;
            }
            if (q) q.words[j] = qj;
        }
        if (q) q._strip();
        a._strip();
        // Denormalize
        if (mode !== 'div' && shift !== 0) a.iushrn(shift);
        return {
            div: q || null,
            mod: a
        };
    };
    // NOTE: 1) `mode` can be set to `mod` to request mod only,
    //       to `div` to request div only, or be absent to
    //       request both div & mod
    //       2) `positive` is true if unsigned mod is requested
    BN.prototype.divmod = function divmod(num, mode, positive) {
        assert(!num.isZero());
        if (this.isZero()) return {
            div: new BN(0),
            mod: new BN(0)
        };
        var div, mod, res;
        if (this.negative !== 0 && num.negative === 0) {
            res = this.neg().divmod(num, mode);
            if (mode !== 'mod') div = res.div.neg();
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.iadd(num);
            }
            return {
                div: div,
                mod: mod
            };
        }
        if (this.negative === 0 && num.negative !== 0) {
            res = this.divmod(num.neg(), mode);
            if (mode !== 'mod') div = res.div.neg();
            return {
                div: div,
                mod: res.mod
            };
        }
        if ((this.negative & num.negative) !== 0) {
            res = this.neg().divmod(num.neg(), mode);
            if (mode !== 'div') {
                mod = res.mod.neg();
                if (positive && mod.negative !== 0) mod.isub(num);
            }
            return {
                div: res.div,
                mod: mod
            };
        }
        // Both numbers are positive at this point
        // Strip both numbers to approximate shift value
        if (num.length > this.length || this.cmp(num) < 0) return {
            div: new BN(0),
            mod: this
        };
        // Very short reduction
        if (num.length === 1) {
            if (mode === 'div') return {
                div: this.divn(num.words[0]),
                mod: null
            };
            if (mode === 'mod') return {
                div: null,
                mod: new BN(this.modrn(num.words[0]))
            };
            return {
                div: this.divn(num.words[0]),
                mod: new BN(this.modrn(num.words[0]))
            };
        }
        return this._wordDiv(num, mode);
    };
    // Find `this` / `num`
    BN.prototype.div = function div(num) {
        return this.divmod(num, 'div', false).div;
    };
    // Find `this` % `num`
    BN.prototype.mod = function mod(num) {
        return this.divmod(num, 'mod', false).mod;
    };
    BN.prototype.umod = function umod(num) {
        return this.divmod(num, 'mod', true).mod;
    };
    // Find Round(`this` / `num`)
    BN.prototype.divRound = function divRound(num) {
        var dm = this.divmod(num);
        // Fast case - exact division
        if (dm.mod.isZero()) return dm.div;
        var mod1 = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;
        var half = num.ushrn(1);
        var r2 = num.andln(1);
        var cmp = mod1.cmp(half);
        // Round down
        if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;
        // Round up
        return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
    };
    BN.prototype.modrn = function modrn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 67108863);
        var p = 67108864 % num;
        var acc = 0;
        for(var i = this.length - 1; i >= 0; i--)acc = (p * acc + (this.words[i] | 0)) % num;
        return isNegNum ? -acc : acc;
    };
    // WARNING: DEPRECATED
    BN.prototype.modn = function modn(num) {
        return this.modrn(num);
    };
    // In-place division by number
    BN.prototype.idivn = function idivn(num) {
        var isNegNum = num < 0;
        if (isNegNum) num = -num;
        assert(num <= 67108863);
        var carry = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var w = (this.words[i] | 0) + carry * 67108864;
            this.words[i] = w / num | 0;
            carry = w % num;
        }
        this._strip();
        return isNegNum ? this.ineg() : this;
    };
    BN.prototype.divn = function divn(num) {
        return this.clone().idivn(num);
    };
    BN.prototype.egcd = function egcd(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var x = this;
        var y = p.clone();
        if (x.negative !== 0) x = x.umod(p);
        else x = x.clone();
        // A * x + B * y = x
        var A = new BN(1);
        var B = new BN(0);
        // C * x + D * y = y
        var C = new BN(0);
        var D = new BN(1);
        var g = 0;
        while(x.isEven() && y.isEven()){
            x.iushrn(1);
            y.iushrn(1);
            ++g;
        }
        var yp = y.clone();
        var xp = x.clone();
        while(!x.isZero()){
            for(var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                x.iushrn(i);
                while((i--) > 0){
                    if (A.isOdd() || B.isOdd()) {
                        A.iadd(yp);
                        B.isub(xp);
                    }
                    A.iushrn(1);
                    B.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                y.iushrn(j);
                while((j--) > 0){
                    if (C.isOdd() || D.isOdd()) {
                        C.iadd(yp);
                        D.isub(xp);
                    }
                    C.iushrn(1);
                    D.iushrn(1);
                }
            }
            if (x.cmp(y) >= 0) {
                x.isub(y);
                A.isub(C);
                B.isub(D);
            } else {
                y.isub(x);
                C.isub(A);
                D.isub(B);
            }
        }
        return {
            a: C,
            b: D,
            gcd: y.iushln(g)
        };
    };
    // This is reduced incarnation of the binary EEA
    // above, designated to invert members of the
    // _prime_ fields F(p) at a maximal speed
    BN.prototype._invmp = function _invmp(p) {
        assert(p.negative === 0);
        assert(!p.isZero());
        var a = this;
        var b = p.clone();
        if (a.negative !== 0) a = a.umod(p);
        else a = a.clone();
        var x1 = new BN(1);
        var x2 = new BN(0);
        var delta = b.clone();
        while(a.cmpn(1) > 0 && b.cmpn(1) > 0){
            for(var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
            if (i > 0) {
                a.iushrn(i);
                while((i--) > 0){
                    if (x1.isOdd()) x1.iadd(delta);
                    x1.iushrn(1);
                }
            }
            for(var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
            if (j > 0) {
                b.iushrn(j);
                while((j--) > 0){
                    if (x2.isOdd()) x2.iadd(delta);
                    x2.iushrn(1);
                }
            }
            if (a.cmp(b) >= 0) {
                a.isub(b);
                x1.isub(x2);
            } else {
                b.isub(a);
                x2.isub(x1);
            }
        }
        var res;
        if (a.cmpn(1) === 0) res = x1;
        else res = x2;
        if (res.cmpn(0) < 0) res.iadd(p);
        return res;
    };
    BN.prototype.gcd = function gcd(num) {
        if (this.isZero()) return num.abs();
        if (num.isZero()) return this.abs();
        var a = this.clone();
        var b = num.clone();
        a.negative = 0;
        b.negative = 0;
        // Remove common factor of two
        for(var shift = 0; a.isEven() && b.isEven(); shift++){
            a.iushrn(1);
            b.iushrn(1);
        }
        do {
            while(a.isEven())a.iushrn(1);
            while(b.isEven())b.iushrn(1);
            var r = a.cmp(b);
            if (r < 0) {
                // Swap `a` and `b` to make `a` always bigger than `b`
                var t = a;
                a = b;
                b = t;
            } else if (r === 0 || b.cmpn(1) === 0) break;
            a.isub(b);
        }while (true)
        return b.iushln(shift);
    };
    // Invert number in the field F(num)
    BN.prototype.invm = function invm(num) {
        return this.egcd(num).a.umod(num);
    };
    BN.prototype.isEven = function isEven() {
        return (this.words[0] & 1) === 0;
    };
    BN.prototype.isOdd = function isOdd() {
        return (this.words[0] & 1) === 1;
    };
    // And first word and num
    BN.prototype.andln = function andln(num) {
        return this.words[0] & num;
    };
    // Increment at the bit position in-line
    BN.prototype.bincn = function bincn(bit) {
        assert(typeof bit === 'number');
        var r = bit % 26;
        var s = (bit - r) / 26;
        var q = 1 << r;
        // Fast case: bit is much higher than all existing words
        if (this.length <= s) {
            this._expand(s + 1);
            this.words[s] |= q;
            return this;
        }
        // Add bit and propagate, if needed
        var carry = q;
        for(var i = s; carry !== 0 && i < this.length; i++){
            var w = this.words[i] | 0;
            w += carry;
            carry = w >>> 26;
            w &= 67108863;
            this.words[i] = w;
        }
        if (carry !== 0) {
            this.words[i] = carry;
            this.length++;
        }
        return this;
    };
    BN.prototype.isZero = function isZero() {
        return this.length === 1 && this.words[0] === 0;
    };
    BN.prototype.cmpn = function cmpn(num) {
        var negative = num < 0;
        if (this.negative !== 0 && !negative) return -1;
        if (this.negative === 0 && negative) return 1;
        this._strip();
        var res;
        if (this.length > 1) res = 1;
        else {
            if (negative) num = -num;
            assert(num <= 67108863, 'Number is too big');
            var w = this.words[0] | 0;
            res = w === num ? 0 : w < num ? -1 : 1;
        }
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Compare two numbers and return:
    // 1 - if `this` > `num`
    // 0 - if `this` == `num`
    // -1 - if `this` < `num`
    BN.prototype.cmp = function cmp(num) {
        if (this.negative !== 0 && num.negative === 0) return -1;
        if (this.negative === 0 && num.negative !== 0) return 1;
        var res = this.ucmp(num);
        if (this.negative !== 0) return -res | 0;
        return res;
    };
    // Unsigned comparison
    BN.prototype.ucmp = function ucmp(num) {
        // At this point both numbers have the same sign
        if (this.length > num.length) return 1;
        if (this.length < num.length) return -1;
        var res = 0;
        for(var i = this.length - 1; i >= 0; i--){
            var a = this.words[i] | 0;
            var b = num.words[i] | 0;
            if (a === b) continue;
            if (a < b) res = -1;
            else if (a > b) res = 1;
            break;
        }
        return res;
    };
    BN.prototype.gtn = function gtn(num) {
        return this.cmpn(num) === 1;
    };
    BN.prototype.gt = function gt(num) {
        return this.cmp(num) === 1;
    };
    BN.prototype.gten = function gten(num) {
        return this.cmpn(num) >= 0;
    };
    BN.prototype.gte = function gte(num) {
        return this.cmp(num) >= 0;
    };
    BN.prototype.ltn = function ltn(num) {
        return this.cmpn(num) === -1;
    };
    BN.prototype.lt = function lt(num) {
        return this.cmp(num) === -1;
    };
    BN.prototype.lten = function lten(num) {
        return this.cmpn(num) <= 0;
    };
    BN.prototype.lte = function lte(num) {
        return this.cmp(num) <= 0;
    };
    BN.prototype.eqn = function eqn(num) {
        return this.cmpn(num) === 0;
    };
    BN.prototype.eq = function eq(num) {
        return this.cmp(num) === 0;
    };
    //
    // A reduce context, could be using montgomery or something better, depending
    // on the `m` itself.
    //
    BN.red = function red(num) {
        return new Red(num);
    };
    BN.prototype.toRed = function toRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        assert(this.negative === 0, 'red works only with positives');
        return ctx.convertTo(this)._forceRed(ctx);
    };
    BN.prototype.fromRed = function fromRed() {
        assert(this.red, 'fromRed works only with numbers in reduction context');
        return this.red.convertFrom(this);
    };
    BN.prototype._forceRed = function _forceRed(ctx) {
        this.red = ctx;
        return this;
    };
    BN.prototype.forceRed = function forceRed(ctx) {
        assert(!this.red, 'Already a number in reduction context');
        return this._forceRed(ctx);
    };
    BN.prototype.redAdd = function redAdd(num) {
        assert(this.red, 'redAdd works only with red numbers');
        return this.red.add(this, num);
    };
    BN.prototype.redIAdd = function redIAdd(num) {
        assert(this.red, 'redIAdd works only with red numbers');
        return this.red.iadd(this, num);
    };
    BN.prototype.redSub = function redSub(num) {
        assert(this.red, 'redSub works only with red numbers');
        return this.red.sub(this, num);
    };
    BN.prototype.redISub = function redISub(num) {
        assert(this.red, 'redISub works only with red numbers');
        return this.red.isub(this, num);
    };
    BN.prototype.redShl = function redShl(num) {
        assert(this.red, 'redShl works only with red numbers');
        return this.red.shl(this, num);
    };
    BN.prototype.redMul = function redMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.mul(this, num);
    };
    BN.prototype.redIMul = function redIMul(num) {
        assert(this.red, 'redMul works only with red numbers');
        this.red._verify2(this, num);
        return this.red.imul(this, num);
    };
    BN.prototype.redSqr = function redSqr() {
        assert(this.red, 'redSqr works only with red numbers');
        this.red._verify1(this);
        return this.red.sqr(this);
    };
    BN.prototype.redISqr = function redISqr() {
        assert(this.red, 'redISqr works only with red numbers');
        this.red._verify1(this);
        return this.red.isqr(this);
    };
    // Square root over p
    BN.prototype.redSqrt = function redSqrt() {
        assert(this.red, 'redSqrt works only with red numbers');
        this.red._verify1(this);
        return this.red.sqrt(this);
    };
    BN.prototype.redInvm = function redInvm() {
        assert(this.red, 'redInvm works only with red numbers');
        this.red._verify1(this);
        return this.red.invm(this);
    };
    // Return negative clone of `this` % `red modulo`
    BN.prototype.redNeg = function redNeg() {
        assert(this.red, 'redNeg works only with red numbers');
        this.red._verify1(this);
        return this.red.neg(this);
    };
    BN.prototype.redPow = function redPow(num) {
        assert(this.red && !num.red, 'redPow(normalNum)');
        this.red._verify1(this);
        return this.red.pow(this, num);
    };
    // Prime numbers with efficient reduction
    var primes = {
        k256: null,
        p224: null,
        p192: null,
        p25519: null
    };
    // Pseudo-Mersenne prime
    function MPrime(name, p) {
        // P = 2 ^ N - K
        this.name = name;
        this.p = new BN(p, 16);
        this.n = this.p.bitLength();
        this.k = new BN(1).iushln(this.n).isub(this.p);
        this.tmp = this._tmp();
    }
    MPrime.prototype._tmp = function _tmp() {
        var tmp = new BN(null);
        tmp.words = new Array(Math.ceil(this.n / 13));
        return tmp;
    };
    MPrime.prototype.ireduce = function ireduce(num) {
        // Assumes that `num` is less than `P^2`
        // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
        var r = num;
        var rlen;
        do {
            this.split(r, this.tmp);
            r = this.imulK(r);
            r = r.iadd(this.tmp);
            rlen = r.bitLength();
        }while (rlen > this.n)
        var cmp1 = rlen < this.n ? -1 : r.ucmp(this.p);
        if (cmp1 === 0) {
            r.words[0] = 0;
            r.length = 1;
        } else if (cmp1 > 0) r.isub(this.p);
        else if (r.strip !== undefined) // r is a BN v4 instance
        r.strip();
        else // r is a BN v5 instance
        r._strip();
        return r;
    };
    MPrime.prototype.split = function split(input, out) {
        input.iushrn(this.n, 0, out);
    };
    MPrime.prototype.imulK = function imulK(num) {
        return num.imul(this.k);
    };
    function K256() {
        MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
    }
    inherits(K256, MPrime);
    K256.prototype.split = function split1(input, output) {
        // 256 = 9 * 26 + 22
        var mask = 4194303;
        var outLen = Math.min(input.length, 9);
        for(var i = 0; i < outLen; i++)output.words[i] = input.words[i];
        output.length = outLen;
        if (input.length <= 9) {
            input.words[0] = 0;
            input.length = 1;
            return;
        }
        // Shift by 9 limbs
        var prev = input.words[9];
        output.words[output.length++] = prev & mask;
        for(i = 10; i < input.length; i++){
            var next = input.words[i] | 0;
            input.words[i - 10] = (next & mask) << 4 | prev >>> 22;
            prev = next;
        }
        prev >>>= 22;
        input.words[i - 10] = prev;
        if (prev === 0 && input.length > 10) input.length -= 10;
        else input.length -= 9;
    };
    K256.prototype.imulK = function imulK1(num) {
        // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
        num.words[num.length] = 0;
        num.words[num.length + 1] = 0;
        num.length += 2;
        // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
        var lo = 0;
        for(var i = 0; i < num.length; i++){
            var w = num.words[i] | 0;
            lo += w * 977;
            num.words[i] = lo & 67108863;
            lo = w * 64 + (lo / 67108864 | 0);
        }
        // Fast length reduction
        if (num.words[num.length - 1] === 0) {
            num.length--;
            if (num.words[num.length - 1] === 0) num.length--;
        }
        return num;
    };
    function P224() {
        MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
    }
    inherits(P224, MPrime);
    function P192() {
        MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
    }
    inherits(P192, MPrime);
    function P25519() {
        // 2 ^ 255 - 19
        MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
    }
    inherits(P25519, MPrime);
    P25519.prototype.imulK = function imulK2(num) {
        // K = 0x13
        var carry = 0;
        for(var i = 0; i < num.length; i++){
            var hi = (num.words[i] | 0) * 19 + carry;
            var lo = hi & 67108863;
            hi >>>= 26;
            num.words[i] = lo;
            carry = hi;
        }
        if (carry !== 0) num.words[num.length++] = carry;
        return num;
    };
    // Exported mostly for testing purposes, use plain name instead
    BN._prime = function prime(name) {
        // Cached version of prime
        if (primes[name]) return primes[name];
        var prime;
        if (name === 'k256') prime = new K256();
        else if (name === 'p224') prime = new P224();
        else if (name === 'p192') prime = new P192();
        else if (name === 'p25519') prime = new P25519();
        else throw new Error('Unknown prime ' + name);
        primes[name] = prime;
        return prime;
    };
    //
    // Base reduction engine
    //
    function Red(m) {
        if (typeof m === 'string') {
            var prime1 = BN._prime(m);
            this.m = prime1.p;
            this.prime = prime1;
        } else {
            assert(m.gtn(1), 'modulus must be greater than 1');
            this.m = m;
            this.prime = null;
        }
    }
    Red.prototype._verify1 = function _verify1(a) {
        assert(a.negative === 0, 'red works only with positives');
        assert(a.red, 'red works only with red numbers');
    };
    Red.prototype._verify2 = function _verify2(a, b) {
        assert((a.negative | b.negative) === 0, 'red works only with positives');
        assert(a.red && a.red === b.red, 'red works only with red numbers');
    };
    Red.prototype.imod = function imod(a) {
        if (this.prime) return this.prime.ireduce(a)._forceRed(this);
        move(a, a.umod(this.m)._forceRed(this));
        return a;
    };
    Red.prototype.neg = function neg1(a) {
        if (a.isZero()) return a.clone();
        return this.m.sub(a)._forceRed(this);
    };
    Red.prototype.add = function add1(a, b) {
        this._verify2(a, b);
        var res = a.add(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res._forceRed(this);
    };
    Red.prototype.iadd = function iadd1(a, b) {
        this._verify2(a, b);
        var res = a.iadd(b);
        if (res.cmp(this.m) >= 0) res.isub(this.m);
        return res;
    };
    Red.prototype.sub = function sub1(a, b) {
        this._verify2(a, b);
        var res = a.sub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res._forceRed(this);
    };
    Red.prototype.isub = function isub1(a, b) {
        this._verify2(a, b);
        var res = a.isub(b);
        if (res.cmpn(0) < 0) res.iadd(this.m);
        return res;
    };
    Red.prototype.shl = function shl(a, num) {
        this._verify1(a);
        return this.imod(a.ushln(num));
    };
    Red.prototype.imul = function imul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.imul(b));
    };
    Red.prototype.mul = function mul1(a, b) {
        this._verify2(a, b);
        return this.imod(a.mul(b));
    };
    Red.prototype.isqr = function isqr1(a) {
        return this.imul(a, a.clone());
    };
    Red.prototype.sqr = function sqr1(a) {
        return this.mul(a, a);
    };
    Red.prototype.sqrt = function sqrt(a) {
        if (a.isZero()) return a.clone();
        var mod3 = this.m.andln(3);
        assert(mod3 % 2 === 1);
        // Fast case
        if (mod3 === 3) {
            var pow1 = this.m.add(new BN(1)).iushrn(2);
            return this.pow(a, pow1);
        }
        // Tonelli-Shanks algorithm (Totally unoptimized and slow)
        //
        // Find Q and S, that Q * 2 ^ S = (P - 1)
        var q = this.m.subn(1);
        var s = 0;
        while(!q.isZero() && q.andln(1) === 0){
            s++;
            q.iushrn(1);
        }
        assert(!q.isZero());
        var one = new BN(1).toRed(this);
        var nOne = one.redNeg();
        // Find quadratic non-residue
        // NOTE: Max is such because of generalized Riemann hypothesis.
        var lpow = this.m.subn(1).iushrn(1);
        var z = this.m.bitLength();
        z = new BN(2 * z * z).toRed(this);
        while(this.pow(z, lpow).cmp(nOne) !== 0)z.redIAdd(nOne);
        var c = this.pow(z, q);
        var r = this.pow(a, q.addn(1).iushrn(1));
        var t = this.pow(a, q);
        var m = s;
        while(t.cmp(one) !== 0){
            var tmp = t;
            for(var i = 0; tmp.cmp(one) !== 0; i++)tmp = tmp.redSqr();
            assert(i < m);
            var b = this.pow(c, new BN(1).iushln(m - i - 1));
            r = r.redMul(b);
            c = b.redSqr();
            t = t.redMul(c);
            m = i;
        }
        return r;
    };
    Red.prototype.invm = function invm1(a) {
        var inv = a._invmp(this.m);
        if (inv.negative !== 0) {
            inv.negative = 0;
            return this.imod(inv).redNeg();
        } else return this.imod(inv);
    };
    Red.prototype.pow = function pow2(a, num) {
        if (num.isZero()) return new BN(1).toRed(this);
        if (num.cmpn(1) === 0) return a.clone();
        var windowSize = 4;
        var wnd = new Array(1 << windowSize);
        wnd[0] = new BN(1).toRed(this);
        wnd[1] = a;
        for(var i = 2; i < wnd.length; i++)wnd[i] = this.mul(wnd[i - 1], a);
        var res = wnd[0];
        var current = 0;
        var currentLen = 0;
        var start = num.bitLength() % 26;
        if (start === 0) start = 26;
        for(i = num.length - 1; i >= 0; i--){
            var word = num.words[i];
            for(var j = start - 1; j >= 0; j--){
                var bit = word >> j & 1;
                if (res !== wnd[0]) res = this.sqr(res);
                if (bit === 0 && current === 0) {
                    currentLen = 0;
                    continue;
                }
                current <<= 1;
                current |= bit;
                currentLen++;
                if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;
                res = this.mul(res, wnd[current]);
                currentLen = 0;
                current = 0;
            }
            start = 26;
        }
        return res;
    };
    Red.prototype.convertTo = function convertTo(num) {
        var r = num.umod(this.m);
        return r === num ? r.clone() : r;
    };
    Red.prototype.convertFrom = function convertFrom(num) {
        var res = num.clone();
        res.red = null;
        return res;
    };
    //
    // Montgomery method engine
    //
    BN.mont = function mont(num) {
        return new Mont(num);
    };
    function Mont(m) {
        Red.call(this, m);
        this.shift = this.m.bitLength();
        if (this.shift % 26 !== 0) this.shift += 26 - this.shift % 26;
        this.r = new BN(1).iushln(this.shift);
        this.r2 = this.imod(this.r.sqr());
        this.rinv = this.r._invmp(this.m);
        this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
        this.minv = this.minv.umod(this.r);
        this.minv = this.r.sub(this.minv);
    }
    inherits(Mont, Red);
    Mont.prototype.convertTo = function convertTo1(num) {
        return this.imod(num.ushln(this.shift));
    };
    Mont.prototype.convertFrom = function convertFrom1(num) {
        var r = this.imod(num.mul(this.rinv));
        r.red = null;
        return r;
    };
    Mont.prototype.imul = function imul2(a, b) {
        if (a.isZero() || b.isZero()) {
            a.words[0] = 0;
            a.length = 1;
            return a;
        }
        var t = a.imul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.mul = function mul2(a, b) {
        if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);
        var t = a.mul(b);
        var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
        var u = t.isub(c).iushrn(this.shift);
        var res = u;
        if (u.cmp(this.m) >= 0) res = u.isub(this.m);
        else if (u.cmpn(0) < 0) res = u.iadd(this.m);
        return res._forceRed(this);
    };
    Mont.prototype.invm = function invm2(a) {
        // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
        var res = this.imod(a._invmp(this.m).mul(this.r2));
        return res._forceRed(this);
    };
})("object" === 'undefined' || module, this);

});



parcelRequire.register("7Z5VI", function(module, exports) {

var $5d02d479b23a29b2$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
"use strict";
var $5d02d479b23a29b2$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.signTransaction = module.exports.createTransaction = module.exports.SCHEMA = module.exports.Action = module.exports.SignedTransaction = module.exports.Transaction = module.exports.Signature = module.exports.deleteAccount = module.exports.deleteKey = module.exports.addKey = module.exports.stake = module.exports.transfer = module.exports.functionCall = module.exports.deployContract = module.exports.createAccount = module.exports.DeleteAccount = module.exports.DeleteKey = module.exports.AddKey = module.exports.Stake = module.exports.Transfer = module.exports.FunctionCall = module.exports.DeployContract = module.exports.CreateAccount = module.exports.IAction = module.exports.functionCallAccessKey = module.exports.fullAccessKey = module.exports.AccessKey = module.exports.AccessKeyPermission = module.exports.FullAccessPermission = module.exports.FunctionCallPermission = void 0;

const $5d02d479b23a29b2$var$js_sha256_1 = $5d02d479b23a29b2$var$__importDefault((parcelRequire("hILnw")));

var $iBavB = parcelRequire("iBavB");

var $6CyfS = parcelRequire("6CyfS");

var $bqi77 = parcelRequire("bqi77");
class $5d02d479b23a29b2$var$FunctionCallPermission extends $iBavB.Assignable {
}
module.exports.FunctionCallPermission = $5d02d479b23a29b2$var$FunctionCallPermission;
class $5d02d479b23a29b2$var$FullAccessPermission extends $iBavB.Assignable {
}
module.exports.FullAccessPermission = $5d02d479b23a29b2$var$FullAccessPermission;
class $5d02d479b23a29b2$var$AccessKeyPermission extends $iBavB.Enum {
}
module.exports.AccessKeyPermission = $5d02d479b23a29b2$var$AccessKeyPermission;
class $5d02d479b23a29b2$var$AccessKey extends $iBavB.Assignable {
}
module.exports.AccessKey = $5d02d479b23a29b2$var$AccessKey;
function $5d02d479b23a29b2$var$fullAccessKey() {
    return new $5d02d479b23a29b2$var$AccessKey({
        nonce: 0,
        permission: new $5d02d479b23a29b2$var$AccessKeyPermission({
            fullAccess: new $5d02d479b23a29b2$var$FullAccessPermission({
            })
        })
    });
}
module.exports.fullAccessKey = $5d02d479b23a29b2$var$fullAccessKey;
function $5d02d479b23a29b2$var$functionCallAccessKey(receiverId, methodNames, allowance) {
    return new $5d02d479b23a29b2$var$AccessKey({
        nonce: 0,
        permission: new $5d02d479b23a29b2$var$AccessKeyPermission({
            functionCall: new $5d02d479b23a29b2$var$FunctionCallPermission({
                receiverId: receiverId,
                allowance: allowance,
                methodNames: methodNames
            })
        })
    });
}
module.exports.functionCallAccessKey = $5d02d479b23a29b2$var$functionCallAccessKey;
class $5d02d479b23a29b2$var$IAction extends $iBavB.Assignable {
}
module.exports.IAction = $5d02d479b23a29b2$var$IAction;
class $5d02d479b23a29b2$var$CreateAccount extends $5d02d479b23a29b2$var$IAction {
}
module.exports.CreateAccount = $5d02d479b23a29b2$var$CreateAccount;
class $5d02d479b23a29b2$var$DeployContract extends $5d02d479b23a29b2$var$IAction {
}
module.exports.DeployContract = $5d02d479b23a29b2$var$DeployContract;
class $5d02d479b23a29b2$var$FunctionCall extends $5d02d479b23a29b2$var$IAction {
}
module.exports.FunctionCall = $5d02d479b23a29b2$var$FunctionCall;
class $5d02d479b23a29b2$var$Transfer extends $5d02d479b23a29b2$var$IAction {
}
module.exports.Transfer = $5d02d479b23a29b2$var$Transfer;
class $5d02d479b23a29b2$var$Stake extends $5d02d479b23a29b2$var$IAction {
}
module.exports.Stake = $5d02d479b23a29b2$var$Stake;
class $5d02d479b23a29b2$var$AddKey extends $5d02d479b23a29b2$var$IAction {
}
module.exports.AddKey = $5d02d479b23a29b2$var$AddKey;
class $5d02d479b23a29b2$var$DeleteKey extends $5d02d479b23a29b2$var$IAction {
}
module.exports.DeleteKey = $5d02d479b23a29b2$var$DeleteKey;
class $5d02d479b23a29b2$var$DeleteAccount extends $5d02d479b23a29b2$var$IAction {
}
module.exports.DeleteAccount = $5d02d479b23a29b2$var$DeleteAccount;
function $5d02d479b23a29b2$var$createAccount() {
    return new $5d02d479b23a29b2$var$Action({
        createAccount: new $5d02d479b23a29b2$var$CreateAccount({
        })
    });
}
module.exports.createAccount = $5d02d479b23a29b2$var$createAccount;
function $5d02d479b23a29b2$var$deployContract(code) {
    return new $5d02d479b23a29b2$var$Action({
        deployContract: new $5d02d479b23a29b2$var$DeployContract({
            code: code
        })
    });
}
module.exports.deployContract = $5d02d479b23a29b2$var$deployContract;
/**
 * Constructs {@link Action} instance representing contract method call.
 *
 * @param methodName the name of the method to call
 * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically
 *  or `Uint8Array` instance which represents bytes passed as is.
 * @param gas max amount of gas that method call can use
 * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call
 */ function $5d02d479b23a29b2$var$functionCall(methodName, args, gas, deposit) {
    const anyArgs = args;
    const isUint8Array = anyArgs.byteLength !== undefined && anyArgs.byteLength === anyArgs.length;
    const serializedArgs = isUint8Array ? args : $5d02d479b23a29b2$require$Buffer.from(JSON.stringify(args));
    return new $5d02d479b23a29b2$var$Action({
        functionCall: new $5d02d479b23a29b2$var$FunctionCall({
            methodName: methodName,
            args: serializedArgs,
            gas: gas,
            deposit: deposit
        })
    });
}
module.exports.functionCall = $5d02d479b23a29b2$var$functionCall;
function $5d02d479b23a29b2$var$transfer(deposit) {
    return new $5d02d479b23a29b2$var$Action({
        transfer: new $5d02d479b23a29b2$var$Transfer({
            deposit: deposit
        })
    });
}
module.exports.transfer = $5d02d479b23a29b2$var$transfer;
function $5d02d479b23a29b2$var$stake(stake, publicKey) {
    return new $5d02d479b23a29b2$var$Action({
        stake: new $5d02d479b23a29b2$var$Stake({
            stake: stake,
            publicKey: publicKey
        })
    });
}
module.exports.stake = $5d02d479b23a29b2$var$stake;
function $5d02d479b23a29b2$var$addKey(publicKey, accessKey) {
    return new $5d02d479b23a29b2$var$Action({
        addKey: new $5d02d479b23a29b2$var$AddKey({
            publicKey: publicKey,
            accessKey: accessKey
        })
    });
}
module.exports.addKey = $5d02d479b23a29b2$var$addKey;
function $5d02d479b23a29b2$var$deleteKey(publicKey) {
    return new $5d02d479b23a29b2$var$Action({
        deleteKey: new $5d02d479b23a29b2$var$DeleteKey({
            publicKey: publicKey
        })
    });
}
module.exports.deleteKey = $5d02d479b23a29b2$var$deleteKey;
function $5d02d479b23a29b2$var$deleteAccount(beneficiaryId) {
    return new $5d02d479b23a29b2$var$Action({
        deleteAccount: new $5d02d479b23a29b2$var$DeleteAccount({
            beneficiaryId: beneficiaryId
        })
    });
}
module.exports.deleteAccount = $5d02d479b23a29b2$var$deleteAccount;
class $5d02d479b23a29b2$var$Signature extends $iBavB.Assignable {
}
module.exports.Signature = $5d02d479b23a29b2$var$Signature;
class $5d02d479b23a29b2$var$Transaction extends $iBavB.Assignable {
    encode() {
        return $6CyfS.serialize(module.exports.SCHEMA, this);
    }
    static decode(bytes) {
        return $6CyfS.deserialize(module.exports.SCHEMA, $5d02d479b23a29b2$var$Transaction, bytes);
    }
}
module.exports.Transaction = $5d02d479b23a29b2$var$Transaction;
class $5d02d479b23a29b2$var$SignedTransaction extends $iBavB.Assignable {
    encode() {
        return $6CyfS.serialize(module.exports.SCHEMA, this);
    }
    static decode(bytes) {
        return $6CyfS.deserialize(module.exports.SCHEMA, $5d02d479b23a29b2$var$SignedTransaction, bytes);
    }
}
module.exports.SignedTransaction = $5d02d479b23a29b2$var$SignedTransaction;
/**
 * Contains a list of the valid transaction Actions available with this API
 * @see {@link https://nomicon.io/RuntimeSpec/Actions.html | Actions Spec}
 */ class $5d02d479b23a29b2$var$Action extends $iBavB.Enum {
}
module.exports.Action = $5d02d479b23a29b2$var$Action;
module.exports.SCHEMA = new Map([
    [
        $5d02d479b23a29b2$var$Signature,
        {
            kind: 'struct',
            fields: [
                [
                    'keyType',
                    'u8'
                ],
                [
                    'data',
                    [
                        64
                    ]
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$SignedTransaction,
        {
            kind: 'struct',
            fields: [
                [
                    'transaction',
                    $5d02d479b23a29b2$var$Transaction
                ],
                [
                    'signature',
                    $5d02d479b23a29b2$var$Signature
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$Transaction,
        {
            kind: 'struct',
            fields: [
                [
                    'signerId',
                    'string'
                ],
                [
                    'publicKey',
                    $bqi77.PublicKey
                ],
                [
                    'nonce',
                    'u64'
                ],
                [
                    'receiverId',
                    'string'
                ],
                [
                    'blockHash',
                    [
                        32
                    ]
                ],
                [
                    'actions',
                    [
                        $5d02d479b23a29b2$var$Action
                    ]
                ]
            ]
        }
    ],
    [
        $bqi77.PublicKey,
        {
            kind: 'struct',
            fields: [
                [
                    'keyType',
                    'u8'
                ],
                [
                    'data',
                    [
                        32
                    ]
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$AccessKey,
        {
            kind: 'struct',
            fields: [
                [
                    'nonce',
                    'u64'
                ],
                [
                    'permission',
                    $5d02d479b23a29b2$var$AccessKeyPermission
                ], 
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$AccessKeyPermission,
        {
            kind: 'enum',
            field: 'enum',
            values: [
                [
                    'functionCall',
                    $5d02d479b23a29b2$var$FunctionCallPermission
                ],
                [
                    'fullAccess',
                    $5d02d479b23a29b2$var$FullAccessPermission
                ], 
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$FunctionCallPermission,
        {
            kind: 'struct',
            fields: [
                [
                    'allowance',
                    {
                        kind: 'option',
                        type: 'u128'
                    }
                ],
                [
                    'receiverId',
                    'string'
                ],
                [
                    'methodNames',
                    [
                        'string'
                    ]
                ], 
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$FullAccessPermission,
        {
            kind: 'struct',
            fields: []
        }
    ],
    [
        $5d02d479b23a29b2$var$Action,
        {
            kind: 'enum',
            field: 'enum',
            values: [
                [
                    'createAccount',
                    $5d02d479b23a29b2$var$CreateAccount
                ],
                [
                    'deployContract',
                    $5d02d479b23a29b2$var$DeployContract
                ],
                [
                    'functionCall',
                    $5d02d479b23a29b2$var$FunctionCall
                ],
                [
                    'transfer',
                    $5d02d479b23a29b2$var$Transfer
                ],
                [
                    'stake',
                    $5d02d479b23a29b2$var$Stake
                ],
                [
                    'addKey',
                    $5d02d479b23a29b2$var$AddKey
                ],
                [
                    'deleteKey',
                    $5d02d479b23a29b2$var$DeleteKey
                ],
                [
                    'deleteAccount',
                    $5d02d479b23a29b2$var$DeleteAccount
                ], 
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$CreateAccount,
        {
            kind: 'struct',
            fields: []
        }
    ],
    [
        $5d02d479b23a29b2$var$DeployContract,
        {
            kind: 'struct',
            fields: [
                [
                    'code',
                    [
                        'u8'
                    ]
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$FunctionCall,
        {
            kind: 'struct',
            fields: [
                [
                    'methodName',
                    'string'
                ],
                [
                    'args',
                    [
                        'u8'
                    ]
                ],
                [
                    'gas',
                    'u64'
                ],
                [
                    'deposit',
                    'u128'
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$Transfer,
        {
            kind: 'struct',
            fields: [
                [
                    'deposit',
                    'u128'
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$Stake,
        {
            kind: 'struct',
            fields: [
                [
                    'stake',
                    'u128'
                ],
                [
                    'publicKey',
                    $bqi77.PublicKey
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$AddKey,
        {
            kind: 'struct',
            fields: [
                [
                    'publicKey',
                    $bqi77.PublicKey
                ],
                [
                    'accessKey',
                    $5d02d479b23a29b2$var$AccessKey
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$DeleteKey,
        {
            kind: 'struct',
            fields: [
                [
                    'publicKey',
                    $bqi77.PublicKey
                ]
            ]
        }
    ],
    [
        $5d02d479b23a29b2$var$DeleteAccount,
        {
            kind: 'struct',
            fields: [
                [
                    'beneficiaryId',
                    'string'
                ]
            ]
        }
    ], 
]);
function $5d02d479b23a29b2$var$createTransaction(signerId, publicKey, receiverId, nonce, actions, blockHash) {
    return new $5d02d479b23a29b2$var$Transaction({
        signerId: signerId,
        publicKey: publicKey,
        nonce: nonce,
        receiverId: receiverId,
        actions: actions,
        blockHash: blockHash
    });
}
module.exports.createTransaction = $5d02d479b23a29b2$var$createTransaction;
/**
 * Signs a given transaction from an account with given keys, applied to the given network
 * @param transaction The Transaction object to sign
 * @param signer The {Signer} object that assists with signing keys
 * @param accountId The human-readable NEAR account name
 * @param networkId The targeted network. (ex. default, betanet, etc…)
 */ async function $5d02d479b23a29b2$var$signTransactionObject(transaction, signer, accountId, networkId) {
    const message = $6CyfS.serialize(module.exports.SCHEMA, transaction);
    const hash = new Uint8Array($5d02d479b23a29b2$var$js_sha256_1.default.sha256.array(message));
    const signature = await signer.signMessage(message, accountId, networkId);
    const signedTx = new $5d02d479b23a29b2$var$SignedTransaction({
        transaction: transaction,
        signature: new $5d02d479b23a29b2$var$Signature({
            keyType: transaction.publicKey.keyType,
            data: signature.signature
        })
    });
    return [
        hash,
        signedTx
    ];
}
async function $5d02d479b23a29b2$var$signTransaction(...args) {
    if (args[0].constructor === $5d02d479b23a29b2$var$Transaction) {
        const [transaction, signer, accountId, networkId] = args;
        return $5d02d479b23a29b2$var$signTransactionObject(transaction, signer, accountId, networkId);
    } else {
        const [receiverId, nonce, actions, blockHash, signer, accountId, networkId] = args;
        const publicKey = await signer.getPublicKey(accountId, networkId);
        const transaction = $5d02d479b23a29b2$var$createTransaction(accountId, publicKey, receiverId, nonce, actions, blockHash);
        return $5d02d479b23a29b2$var$signTransactionObject(transaction, signer, accountId, networkId);
    }
}
module.exports.signTransaction = $5d02d479b23a29b2$var$signTransaction;

});
parcelRequire.register("hILnw", function(module, exports) {

var $iTtRV = parcelRequire("iTtRV");
/**
 * [js-sha256]{@link https://github.com/emn178/js-sha256}
 *
 * @version 0.9.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2014-2017
 * @license MIT
 */ /*jslint bitwise: true */ (function() {
    var ERROR = 'input is invalid type';
    var WINDOW = typeof window === 'object';
    var root = WINDOW ? window : {
    };
    if (root.JS_SHA256_NO_WINDOW) WINDOW = false;
    var WEB_WORKER = !WINDOW && typeof self === 'object';
    var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof $iTtRV === 'object' && $iTtRV.versions && $iTtRV.versions.node;
    if (NODE_JS) root = $parcel$global;
    else if (WEB_WORKER) root = self;
    var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && "object" === 'object' && module.exports;
    var AMD = typeof define === 'function' && define.amd;
    var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';
    var HEX_CHARS = '0123456789abcdef'.split('');
    var EXTRA = [
        -2147483648,
        8388608,
        32768,
        128
    ];
    var SHIFT = [
        24,
        16,
        8,
        0
    ];
    var K = [
        1116352408,
        1899447441,
        3049323471,
        3921009573,
        961987163,
        1508970993,
        2453635748,
        2870763221,
        3624381080,
        310598401,
        607225278,
        1426881987,
        1925078388,
        2162078206,
        2614888103,
        3248222580,
        3835390401,
        4022224774,
        264347078,
        604807628,
        770255983,
        1249150122,
        1555081692,
        1996064986,
        2554220882,
        2821834349,
        2952996808,
        3210313671,
        3336571891,
        3584528711,
        113926993,
        338241895,
        666307205,
        773529912,
        1294757372,
        1396182291,
        1695183700,
        1986661051,
        2177026350,
        2456956037,
        2730485921,
        2820302411,
        3259730800,
        3345764771,
        3516065817,
        3600352804,
        4094571909,
        275423344,
        430227734,
        506948616,
        659060556,
        883997877,
        958139571,
        1322822218,
        1537002063,
        1747873779,
        1955562222,
        2024104815,
        2227730452,
        2361852424,
        2428436474,
        2756734187,
        3204031479,
        3329325298
    ];
    var OUTPUT_TYPES = [
        'hex',
        'array',
        'digest',
        'arrayBuffer'
    ];
    var blocks = [];
    if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) Array.isArray = function(obj) {
        return Object.prototype.toString.call(obj) === '[object Array]';
    };
    if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) ArrayBuffer.isView = function(obj) {
        return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;
    };
    var createOutputMethod = function(outputType, is224) {
        return function(message) {
            return new Sha256(is224, true).update(message)[outputType]();
        };
    };
    var createMethod = function(is224) {
        var method = createOutputMethod('hex', is224);
        if (NODE_JS) method = nodeWrap(method, is224);
        method.create = function() {
            return new Sha256(is224);
        };
        method.update = function(message) {
            return method.create().update(message);
        };
        for(var i = 0; i < OUTPUT_TYPES.length; ++i){
            var type = OUTPUT_TYPES[i];
            method[type] = createOutputMethod(type, is224);
        }
        return method;
    };
    var nodeWrap = function(method, is224) {
        var crypto = eval("require('crypto')");
        var Buffer = eval("require('buffer').Buffer");
        var algorithm = is224 ? 'sha224' : 'sha256';
        var nodeMethod = function(message) {
            if (typeof message === 'string') return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');
            else {
                if (message === null || message === undefined) throw new Error(ERROR);
                else if (message.constructor === ArrayBuffer) message = new Uint8Array(message);
            }
            if (Array.isArray(message) || ArrayBuffer.isView(message) || message.constructor === Buffer) return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');
            else return method(message);
        };
        return nodeMethod;
    };
    var createHmacOutputMethod = function(outputType, is224) {
        return function(key, message) {
            return new HmacSha256(key, is224, true).update(message)[outputType]();
        };
    };
    var createHmacMethod = function(is224) {
        var method = createHmacOutputMethod('hex', is224);
        method.create = function(key) {
            return new HmacSha256(key, is224);
        };
        method.update = function(key, message) {
            return method.create(key).update(message);
        };
        for(var i = 0; i < OUTPUT_TYPES.length; ++i){
            var type = OUTPUT_TYPES[i];
            method[type] = createHmacOutputMethod(type, is224);
        }
        return method;
    };
    function Sha256(is224, sharedMemory) {
        if (sharedMemory) {
            blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] = blocks[4] = blocks[5] = blocks[6] = blocks[7] = blocks[8] = blocks[9] = blocks[10] = blocks[11] = blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;
            this.blocks = blocks;
        } else this.blocks = [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ];
        if (is224) {
            this.h0 = 3238371032;
            this.h1 = 914150663;
            this.h2 = 812702999;
            this.h3 = 4144912697;
            this.h4 = 4290775857;
            this.h5 = 1750603025;
            this.h6 = 1694076839;
            this.h7 = 3204075428;
        } else {
            this.h0 = 1779033703;
            this.h1 = 3144134277;
            this.h2 = 1013904242;
            this.h3 = 2773480762;
            this.h4 = 1359893119;
            this.h5 = 2600822924;
            this.h6 = 528734635;
            this.h7 = 1541459225;
        }
        this.block = this.start = this.bytes = this.hBytes = 0;
        this.finalized = this.hashed = false;
        this.first = true;
        this.is224 = is224;
    }
    Sha256.prototype.update = function(message) {
        if (this.finalized) return;
        var notString, type = typeof message;
        if (type !== 'string') {
            if (type === 'object') {
                if (message === null) throw new Error(ERROR);
                else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) message = new Uint8Array(message);
                else if (!Array.isArray(message)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) throw new Error(ERROR);
                }
            } else throw new Error(ERROR);
            notString = true;
        }
        var code, index = 0, i, length = message.length, blocks1 = this.blocks;
        while(index < length){
            if (this.hashed) {
                this.hashed = false;
                blocks1[0] = this.block;
                blocks1[16] = blocks1[1] = blocks1[2] = blocks1[3] = blocks1[4] = blocks1[5] = blocks1[6] = blocks1[7] = blocks1[8] = blocks1[9] = blocks1[10] = blocks1[11] = blocks1[12] = blocks1[13] = blocks1[14] = blocks1[15] = 0;
            }
            if (notString) for(i = this.start; index < length && i < 64; ++index)blocks1[i >> 2] |= message[index] << SHIFT[(i++) & 3];
            else for(i = this.start; index < length && i < 64; ++index){
                code = message.charCodeAt(index);
                if (code < 128) blocks1[i >> 2] |= code << SHIFT[(i++) & 3];
                else if (code < 2048) {
                    blocks1[i >> 2] |= (192 | code >> 6) << SHIFT[(i++) & 3];
                    blocks1[i >> 2] |= (128 | code & 63) << SHIFT[(i++) & 3];
                } else if (code < 55296 || code >= 57344) {
                    blocks1[i >> 2] |= (224 | code >> 12) << SHIFT[(i++) & 3];
                    blocks1[i >> 2] |= (128 | code >> 6 & 63) << SHIFT[(i++) & 3];
                    blocks1[i >> 2] |= (128 | code & 63) << SHIFT[(i++) & 3];
                } else {
                    code = 65536 + ((code & 1023) << 10 | message.charCodeAt(++index) & 1023);
                    blocks1[i >> 2] |= (240 | code >> 18) << SHIFT[(i++) & 3];
                    blocks1[i >> 2] |= (128 | code >> 12 & 63) << SHIFT[(i++) & 3];
                    blocks1[i >> 2] |= (128 | code >> 6 & 63) << SHIFT[(i++) & 3];
                    blocks1[i >> 2] |= (128 | code & 63) << SHIFT[(i++) & 3];
                }
            }
            this.lastByteIndex = i;
            this.bytes += i - this.start;
            if (i >= 64) {
                this.block = blocks1[16];
                this.start = i - 64;
                this.hash();
                this.hashed = true;
            } else this.start = i;
        }
        if (this.bytes > 4294967295) {
            this.hBytes += this.bytes / 4294967296 << 0;
            this.bytes = this.bytes % 4294967296;
        }
        return this;
    };
    Sha256.prototype.finalize = function() {
        if (this.finalized) return;
        this.finalized = true;
        var blocks1 = this.blocks, i = this.lastByteIndex;
        blocks1[16] = this.block;
        blocks1[i >> 2] |= EXTRA[i & 3];
        this.block = blocks1[16];
        if (i >= 56) {
            if (!this.hashed) this.hash();
            blocks1[0] = this.block;
            blocks1[16] = blocks1[1] = blocks1[2] = blocks1[3] = blocks1[4] = blocks1[5] = blocks1[6] = blocks1[7] = blocks1[8] = blocks1[9] = blocks1[10] = blocks1[11] = blocks1[12] = blocks1[13] = blocks1[14] = blocks1[15] = 0;
        }
        blocks1[14] = this.hBytes << 3 | this.bytes >>> 29;
        blocks1[15] = this.bytes << 3;
        this.hash();
    };
    Sha256.prototype.hash = function() {
        var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6, h = this.h7, blocks1 = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;
        for(j = 16; j < 64; ++j){
            // rightrotate
            t1 = blocks1[j - 15];
            s0 = (t1 >>> 7 | t1 << 25) ^ (t1 >>> 18 | t1 << 14) ^ t1 >>> 3;
            t1 = blocks1[j - 2];
            s1 = (t1 >>> 17 | t1 << 15) ^ (t1 >>> 19 | t1 << 13) ^ t1 >>> 10;
            blocks1[j] = blocks1[j - 16] + s0 + blocks1[j - 7] + s1 << 0;
        }
        bc = b & c;
        for(j = 0; j < 64; j += 4){
            if (this.first) {
                if (this.is224) {
                    ab = 300032;
                    t1 = blocks1[0] - 1413257819;
                    h = t1 - 150054599 << 0;
                    d = t1 + 24177077 << 0;
                } else {
                    ab = 704751109;
                    t1 = blocks1[0] - 210244248;
                    h = t1 - 1521486534 << 0;
                    d = t1 + 143694565 << 0;
                }
                this.first = false;
            } else {
                s0 = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10);
                s1 = (e >>> 6 | e << 26) ^ (e >>> 11 | e << 21) ^ (e >>> 25 | e << 7);
                ab = a & b;
                maj = ab ^ a & c ^ bc;
                ch = e & f ^ ~e & g;
                t1 = h + s1 + ch + K[j] + blocks1[j];
                t2 = s0 + maj;
                h = d + t1 << 0;
                d = t1 + t2 << 0;
            }
            s0 = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10);
            s1 = (h >>> 6 | h << 26) ^ (h >>> 11 | h << 21) ^ (h >>> 25 | h << 7);
            da = d & a;
            maj = da ^ d & b ^ ab;
            ch = h & e ^ ~h & f;
            t1 = g + s1 + ch + K[j + 1] + blocks1[j + 1];
            t2 = s0 + maj;
            g = c + t1 << 0;
            c = t1 + t2 << 0;
            s0 = (c >>> 2 | c << 30) ^ (c >>> 13 | c << 19) ^ (c >>> 22 | c << 10);
            s1 = (g >>> 6 | g << 26) ^ (g >>> 11 | g << 21) ^ (g >>> 25 | g << 7);
            cd = c & d;
            maj = cd ^ c & a ^ da;
            ch = g & h ^ ~g & e;
            t1 = f + s1 + ch + K[j + 2] + blocks1[j + 2];
            t2 = s0 + maj;
            f = b + t1 << 0;
            b = t1 + t2 << 0;
            s0 = (b >>> 2 | b << 30) ^ (b >>> 13 | b << 19) ^ (b >>> 22 | b << 10);
            s1 = (f >>> 6 | f << 26) ^ (f >>> 11 | f << 21) ^ (f >>> 25 | f << 7);
            bc = b & c;
            maj = bc ^ b & d ^ cd;
            ch = f & g ^ ~f & h;
            t1 = e + s1 + ch + K[j + 3] + blocks1[j + 3];
            t2 = s0 + maj;
            e = a + t1 << 0;
            a = t1 + t2 << 0;
        }
        this.h0 = this.h0 + a << 0;
        this.h1 = this.h1 + b << 0;
        this.h2 = this.h2 + c << 0;
        this.h3 = this.h3 + d << 0;
        this.h4 = this.h4 + e << 0;
        this.h5 = this.h5 + f << 0;
        this.h6 = this.h6 + g << 0;
        this.h7 = this.h7 + h << 0;
    };
    Sha256.prototype.hex = function() {
        this.finalize();
        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;
        var hex = HEX_CHARS[h0 >> 28 & 15] + HEX_CHARS[h0 >> 24 & 15] + HEX_CHARS[h0 >> 20 & 15] + HEX_CHARS[h0 >> 16 & 15] + HEX_CHARS[h0 >> 12 & 15] + HEX_CHARS[h0 >> 8 & 15] + HEX_CHARS[h0 >> 4 & 15] + HEX_CHARS[h0 & 15] + HEX_CHARS[h1 >> 28 & 15] + HEX_CHARS[h1 >> 24 & 15] + HEX_CHARS[h1 >> 20 & 15] + HEX_CHARS[h1 >> 16 & 15] + HEX_CHARS[h1 >> 12 & 15] + HEX_CHARS[h1 >> 8 & 15] + HEX_CHARS[h1 >> 4 & 15] + HEX_CHARS[h1 & 15] + HEX_CHARS[h2 >> 28 & 15] + HEX_CHARS[h2 >> 24 & 15] + HEX_CHARS[h2 >> 20 & 15] + HEX_CHARS[h2 >> 16 & 15] + HEX_CHARS[h2 >> 12 & 15] + HEX_CHARS[h2 >> 8 & 15] + HEX_CHARS[h2 >> 4 & 15] + HEX_CHARS[h2 & 15] + HEX_CHARS[h3 >> 28 & 15] + HEX_CHARS[h3 >> 24 & 15] + HEX_CHARS[h3 >> 20 & 15] + HEX_CHARS[h3 >> 16 & 15] + HEX_CHARS[h3 >> 12 & 15] + HEX_CHARS[h3 >> 8 & 15] + HEX_CHARS[h3 >> 4 & 15] + HEX_CHARS[h3 & 15] + HEX_CHARS[h4 >> 28 & 15] + HEX_CHARS[h4 >> 24 & 15] + HEX_CHARS[h4 >> 20 & 15] + HEX_CHARS[h4 >> 16 & 15] + HEX_CHARS[h4 >> 12 & 15] + HEX_CHARS[h4 >> 8 & 15] + HEX_CHARS[h4 >> 4 & 15] + HEX_CHARS[h4 & 15] + HEX_CHARS[h5 >> 28 & 15] + HEX_CHARS[h5 >> 24 & 15] + HEX_CHARS[h5 >> 20 & 15] + HEX_CHARS[h5 >> 16 & 15] + HEX_CHARS[h5 >> 12 & 15] + HEX_CHARS[h5 >> 8 & 15] + HEX_CHARS[h5 >> 4 & 15] + HEX_CHARS[h5 & 15] + HEX_CHARS[h6 >> 28 & 15] + HEX_CHARS[h6 >> 24 & 15] + HEX_CHARS[h6 >> 20 & 15] + HEX_CHARS[h6 >> 16 & 15] + HEX_CHARS[h6 >> 12 & 15] + HEX_CHARS[h6 >> 8 & 15] + HEX_CHARS[h6 >> 4 & 15] + HEX_CHARS[h6 & 15];
        if (!this.is224) hex += HEX_CHARS[h7 >> 28 & 15] + HEX_CHARS[h7 >> 24 & 15] + HEX_CHARS[h7 >> 20 & 15] + HEX_CHARS[h7 >> 16 & 15] + HEX_CHARS[h7 >> 12 & 15] + HEX_CHARS[h7 >> 8 & 15] + HEX_CHARS[h7 >> 4 & 15] + HEX_CHARS[h7 & 15];
        return hex;
    };
    Sha256.prototype.toString = Sha256.prototype.hex;
    Sha256.prototype.digest = function() {
        this.finalize();
        var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5, h6 = this.h6, h7 = this.h7;
        var arr = [
            h0 >> 24 & 255,
            h0 >> 16 & 255,
            h0 >> 8 & 255,
            h0 & 255,
            h1 >> 24 & 255,
            h1 >> 16 & 255,
            h1 >> 8 & 255,
            h1 & 255,
            h2 >> 24 & 255,
            h2 >> 16 & 255,
            h2 >> 8 & 255,
            h2 & 255,
            h3 >> 24 & 255,
            h3 >> 16 & 255,
            h3 >> 8 & 255,
            h3 & 255,
            h4 >> 24 & 255,
            h4 >> 16 & 255,
            h4 >> 8 & 255,
            h4 & 255,
            h5 >> 24 & 255,
            h5 >> 16 & 255,
            h5 >> 8 & 255,
            h5 & 255,
            h6 >> 24 & 255,
            h6 >> 16 & 255,
            h6 >> 8 & 255,
            h6 & 255
        ];
        if (!this.is224) arr.push(h7 >> 24 & 255, h7 >> 16 & 255, h7 >> 8 & 255, h7 & 255);
        return arr;
    };
    Sha256.prototype.array = Sha256.prototype.digest;
    Sha256.prototype.arrayBuffer = function() {
        this.finalize();
        var buffer = new ArrayBuffer(this.is224 ? 28 : 32);
        var dataView = new DataView(buffer);
        dataView.setUint32(0, this.h0);
        dataView.setUint32(4, this.h1);
        dataView.setUint32(8, this.h2);
        dataView.setUint32(12, this.h3);
        dataView.setUint32(16, this.h4);
        dataView.setUint32(20, this.h5);
        dataView.setUint32(24, this.h6);
        if (!this.is224) dataView.setUint32(28, this.h7);
        return buffer;
    };
    function HmacSha256(key, is224, sharedMemory) {
        var i, type = typeof key;
        if (type === 'string') {
            var bytes = [], length = key.length, index = 0, code;
            for(i = 0; i < length; ++i){
                code = key.charCodeAt(i);
                if (code < 128) bytes[index++] = code;
                else if (code < 2048) {
                    bytes[index++] = 192 | code >> 6;
                    bytes[index++] = 128 | code & 63;
                } else if (code < 55296 || code >= 57344) {
                    bytes[index++] = 224 | code >> 12;
                    bytes[index++] = 128 | code >> 6 & 63;
                    bytes[index++] = 128 | code & 63;
                } else {
                    code = 65536 + ((code & 1023) << 10 | key.charCodeAt(++i) & 1023);
                    bytes[index++] = 240 | code >> 18;
                    bytes[index++] = 128 | code >> 12 & 63;
                    bytes[index++] = 128 | code >> 6 & 63;
                    bytes[index++] = 128 | code & 63;
                }
            }
            key = bytes;
        } else {
            if (type === 'object') {
                if (key === null) throw new Error(ERROR);
                else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) key = new Uint8Array(key);
                else if (!Array.isArray(key)) {
                    if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) throw new Error(ERROR);
                }
            } else throw new Error(ERROR);
        }
        if (key.length > 64) key = new Sha256(is224, true).update(key).array();
        var oKeyPad = [], iKeyPad = [];
        for(i = 0; i < 64; ++i){
            var b = key[i] || 0;
            oKeyPad[i] = 92 ^ b;
            iKeyPad[i] = 54 ^ b;
        }
        Sha256.call(this, is224, sharedMemory);
        this.update(iKeyPad);
        this.oKeyPad = oKeyPad;
        this.inner = true;
        this.sharedMemory = sharedMemory;
    }
    HmacSha256.prototype = new Sha256();
    HmacSha256.prototype.finalize = function() {
        Sha256.prototype.finalize.call(this);
        if (this.inner) {
            this.inner = false;
            var innerHash = this.array();
            Sha256.call(this, this.is224, this.sharedMemory);
            this.update(this.oKeyPad);
            this.update(innerHash);
            Sha256.prototype.finalize.call(this);
        }
    };
    var exports = createMethod();
    exports.sha256 = exports;
    exports.sha224 = createMethod(true);
    exports.sha256.hmac = createHmacMethod();
    exports.sha224.hmac = createHmacMethod(true);
    if (COMMON_JS) module.exports = exports;
    else {
        root.sha256 = exports.sha256;
        root.sha224 = exports.sha224;
        if (AMD) define(function() {
            return exports;
        });
    }
})();

});
parcelRequire.register("iTtRV", function(module, exports) {
// shim for using process in browser
var $dc14885f73a1e480$var$process = module.exports = {
};
// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.
var $dc14885f73a1e480$var$cachedSetTimeout;
var $dc14885f73a1e480$var$cachedClearTimeout;
function $dc14885f73a1e480$var$defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function $dc14885f73a1e480$var$defaultClearTimeout() {
    throw new Error('clearTimeout has not been defined');
}
(function() {
    try {
        if (typeof setTimeout === 'function') $dc14885f73a1e480$var$cachedSetTimeout = setTimeout;
        else $dc14885f73a1e480$var$cachedSetTimeout = $dc14885f73a1e480$var$defaultSetTimout;
    } catch (e) {
        $dc14885f73a1e480$var$cachedSetTimeout = $dc14885f73a1e480$var$defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') $dc14885f73a1e480$var$cachedClearTimeout = clearTimeout;
        else $dc14885f73a1e480$var$cachedClearTimeout = $dc14885f73a1e480$var$defaultClearTimeout;
    } catch (e) {
        $dc14885f73a1e480$var$cachedClearTimeout = $dc14885f73a1e480$var$defaultClearTimeout;
    }
})();
function $dc14885f73a1e480$var$runTimeout(fun) {
    if ($dc14885f73a1e480$var$cachedSetTimeout === setTimeout) //normal enviroments in sane situations
    return setTimeout(fun, 0);
    // if setTimeout wasn't available but was latter defined
    if (($dc14885f73a1e480$var$cachedSetTimeout === $dc14885f73a1e480$var$defaultSetTimout || !$dc14885f73a1e480$var$cachedSetTimeout) && setTimeout) {
        $dc14885f73a1e480$var$cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return $dc14885f73a1e480$var$cachedSetTimeout(fun, 0);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return $dc14885f73a1e480$var$cachedSetTimeout.call(null, fun, 0);
        } catch (e1) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return $dc14885f73a1e480$var$cachedSetTimeout.call(this, fun, 0);
        }
    }
}
function $dc14885f73a1e480$var$runClearTimeout(marker) {
    if ($dc14885f73a1e480$var$cachedClearTimeout === clearTimeout) //normal enviroments in sane situations
    return clearTimeout(marker);
    // if clearTimeout wasn't available but was latter defined
    if (($dc14885f73a1e480$var$cachedClearTimeout === $dc14885f73a1e480$var$defaultClearTimeout || !$dc14885f73a1e480$var$cachedClearTimeout) && clearTimeout) {
        $dc14885f73a1e480$var$cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return $dc14885f73a1e480$var$cachedClearTimeout(marker);
    } catch (e) {
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return $dc14885f73a1e480$var$cachedClearTimeout.call(null, marker);
        } catch (e1) {
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return $dc14885f73a1e480$var$cachedClearTimeout.call(this, marker);
        }
    }
}
var $dc14885f73a1e480$var$queue = [];
var $dc14885f73a1e480$var$draining = false;
var $dc14885f73a1e480$var$currentQueue;
var $dc14885f73a1e480$var$queueIndex = -1;
function $dc14885f73a1e480$var$cleanUpNextTick() {
    if (!$dc14885f73a1e480$var$draining || !$dc14885f73a1e480$var$currentQueue) return;
    $dc14885f73a1e480$var$draining = false;
    if ($dc14885f73a1e480$var$currentQueue.length) $dc14885f73a1e480$var$queue = $dc14885f73a1e480$var$currentQueue.concat($dc14885f73a1e480$var$queue);
    else $dc14885f73a1e480$var$queueIndex = -1;
    if ($dc14885f73a1e480$var$queue.length) $dc14885f73a1e480$var$drainQueue();
}
function $dc14885f73a1e480$var$drainQueue() {
    if ($dc14885f73a1e480$var$draining) return;
    var timeout = $dc14885f73a1e480$var$runTimeout($dc14885f73a1e480$var$cleanUpNextTick);
    $dc14885f73a1e480$var$draining = true;
    var len = $dc14885f73a1e480$var$queue.length;
    while(len){
        $dc14885f73a1e480$var$currentQueue = $dc14885f73a1e480$var$queue;
        $dc14885f73a1e480$var$queue = [];
        while((++$dc14885f73a1e480$var$queueIndex) < len)if ($dc14885f73a1e480$var$currentQueue) $dc14885f73a1e480$var$currentQueue[$dc14885f73a1e480$var$queueIndex].run();
        $dc14885f73a1e480$var$queueIndex = -1;
        len = $dc14885f73a1e480$var$queue.length;
    }
    $dc14885f73a1e480$var$currentQueue = null;
    $dc14885f73a1e480$var$draining = false;
    $dc14885f73a1e480$var$runClearTimeout(timeout);
}
$dc14885f73a1e480$var$process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) for(var i = 1; i < arguments.length; i++)args[i - 1] = arguments[i];
    $dc14885f73a1e480$var$queue.push(new $dc14885f73a1e480$var$Item(fun, args));
    if ($dc14885f73a1e480$var$queue.length === 1 && !$dc14885f73a1e480$var$draining) $dc14885f73a1e480$var$runTimeout($dc14885f73a1e480$var$drainQueue);
};
// v8 likes predictible objects
function $dc14885f73a1e480$var$Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
$dc14885f73a1e480$var$Item.prototype.run = function() {
    this.fun.apply(null, this.array);
};
$dc14885f73a1e480$var$process.title = 'browser';
$dc14885f73a1e480$var$process.browser = true;
$dc14885f73a1e480$var$process.env = {
};
$dc14885f73a1e480$var$process.argv = [];
$dc14885f73a1e480$var$process.version = ''; // empty string to avoid regexp issues
$dc14885f73a1e480$var$process.versions = {
};
function $dc14885f73a1e480$var$noop() {
}
$dc14885f73a1e480$var$process.on = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.addListener = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.once = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.off = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.removeListener = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.removeAllListeners = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.emit = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.prependListener = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.prependOnceListener = $dc14885f73a1e480$var$noop;
$dc14885f73a1e480$var$process.listeners = function(name) {
    return [];
};
$dc14885f73a1e480$var$process.binding = function(name) {
    throw new Error('process.binding is not supported');
};
$dc14885f73a1e480$var$process.cwd = function() {
    return '/';
};
$dc14885f73a1e480$var$process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
};
$dc14885f73a1e480$var$process.umask = function() {
    return 0;
};

});



parcelRequire.register("e7N3F", function(module, exports) {
'use strict';
var $a487c60cdad55261$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.diffEpochValidators = module.exports.findSeatPrice = void 0;

const $a487c60cdad55261$var$bn_js_1 = $a487c60cdad55261$var$__importDefault((parcelRequire("euZho")));
/** Finds seat price given validators stakes and number of seats.
 *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection
 * @params validators: current or next epoch validators.
 * @params numSeats: number of seats.
 */ function $a487c60cdad55261$var$findSeatPrice(validators, numSeats) {
    const stakes = validators.map((v)=>new $a487c60cdad55261$var$bn_js_1.default(v.stake, 10)
    ).sort((a, b)=>a.cmp(b)
    );
    const num = new $a487c60cdad55261$var$bn_js_1.default(numSeats);
    const stakesSum = stakes.reduce((a, b)=>a.add(b)
    );
    if (stakesSum.lt(num)) throw new Error('Stakes are below seats');
    // assert stakesSum >= numSeats
    let left = new $a487c60cdad55261$var$bn_js_1.default(1), right = stakesSum.add(new $a487c60cdad55261$var$bn_js_1.default(1));
    while(!left.eq(right.sub(new $a487c60cdad55261$var$bn_js_1.default(1)))){
        const mid = left.add(right).div(new $a487c60cdad55261$var$bn_js_1.default(2));
        let found = false;
        let currentSum = new $a487c60cdad55261$var$bn_js_1.default(0);
        for(let i = 0; i < stakes.length; ++i){
            currentSum = currentSum.add(stakes[i].div(mid));
            if (currentSum.gte(num)) {
                left = mid;
                found = true;
                break;
            }
        }
        if (!found) right = mid;
    }
    return left;
}
module.exports.findSeatPrice = $a487c60cdad55261$var$findSeatPrice;
/** Diff validators between current and next epoch.
 * Returns additions, subtractions and changes to validator set.
 * @params currentValidators: list of current validators.
 * @params nextValidators: list of next validators.
 */ function $a487c60cdad55261$var$diffEpochValidators(currentValidators, nextValidators) {
    const validatorsMap = new Map();
    currentValidators.forEach((v)=>validatorsMap.set(v.account_id, v)
    );
    const nextValidatorsSet = new Set(nextValidators.map((v)=>v.account_id
    ));
    return {
        newValidators: nextValidators.filter((v)=>!validatorsMap.has(v.account_id)
        ),
        removedValidators: currentValidators.filter((v)=>!nextValidatorsSet.has(v.account_id)
        ),
        changedValidators: nextValidators.filter((v)=>validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake
        ).map((v)=>({
                current: validatorsMap.get(v.account_id),
                next: v
            })
        )
    };
}
module.exports.diffEpochValidators = $a487c60cdad55261$var$diffEpochValidators;

});

parcelRequire.register("gwyhm", function(module, exports) {

var $c07a399f909d7894$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
"use strict";
var $c07a399f909d7894$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.Account = void 0;

const $c07a399f909d7894$var$bn_js_1 = $c07a399f909d7894$var$__importDefault((parcelRequire("euZho")));

const $c07a399f909d7894$var$depd_1 = $c07a399f909d7894$var$__importDefault((parcelRequire("9NoLj")));

var $7Z5VI = parcelRequire("7Z5VI");

var $2drwM = parcelRequire("2drwM");

var $6CyfS = parcelRequire("6CyfS");

var $bqi77 = parcelRequire("bqi77");

var $9ZP4J = parcelRequire("9ZP4J");

var $4VSha = parcelRequire("4VSha");

var $jpOMx = parcelRequire("jpOMx");

const $c07a399f909d7894$var$exponential_backoff_1 = $c07a399f909d7894$var$__importDefault((parcelRequire("7XMBM")));
// Default number of retries with different nonce before giving up on a transaction.
const $c07a399f909d7894$var$TX_NONCE_RETRY_NUMBER = 12;
// Default wait until next retry in millis.
const $c07a399f909d7894$var$TX_NONCE_RETRY_WAIT = 500;
// Exponential back off for waiting to retry.
const $c07a399f909d7894$var$TX_NONCE_RETRY_WAIT_BACKOFF = 1.5;
function $c07a399f909d7894$var$parseJsonFromRawResponse(response) {
    return JSON.parse($c07a399f909d7894$require$Buffer.from(response).toString());
}
/**
 * This class provides common account related RPC calls including signing transactions with a {@link KeyPair}.
 *
 * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}
 * @hint Use {@link WalletConnection} in the browser to redirect to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for Account/key management using the {@link BrowserLocalStorageKeyStore}.
 * @see {@link https://nomicon.io/DataStructures/Account.html | Account Spec}
 */ class $c07a399f909d7894$var$Account {
    constructor(connection, accountId){
        /** @hidden */ this.accessKeyByPublicKeyCache = {
        };
        this.connection = connection;
        this.accountId = accountId;
    }
    /** @hidden */ get ready() {
        const deprecate = $c07a399f909d7894$var$depd_1.default('Account.ready()');
        deprecate('not needed anymore, always ready');
        return Promise.resolve();
    }
    async fetchState() {
        const deprecate = $c07a399f909d7894$var$depd_1.default('Account.fetchState()');
        deprecate('use `Account.state()` instead');
    }
    /**
     * Returns basic NEAR account information via the `view_account` RPC query method
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-account}
     */ async state() {
        return this.connection.provider.query({
            request_type: 'view_account',
            account_id: this.accountId,
            finality: 'optimistic'
        });
    }
    /** @hidden */ printLogsAndFailures(contractId, results) {
        for (const result of results){
            console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);
            this.printLogs(contractId, result.logs, '\t');
            if (result.failure) console.warn(`\tFailure [${contractId}]: ${result.failure}`);
        }
    }
    /** @hidden */ printLogs(contractId, logs, prefix = '') {
        for (const log of logs)console.log(`${prefix}Log [${contractId}]: ${log}`);
    }
    /**
     * Create a signed transaction which can be broadcast to the network
     * @param receiverId NEAR account receiving the transaction
     * @param actions list of actions to perform as part of the transaction
     * @see {@link JsonRpcProvider.sendTransaction}
     */ async signTransaction(receiverId, actions) {
        const accessKeyInfo = await this.findAccessKey(receiverId, actions);
        if (!accessKeyInfo) throw new $2drwM.TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');
        const { accessKey: accessKey  } = accessKeyInfo;
        const block = await this.connection.provider.block({
            finality: 'final'
        });
        const blockHash = block.header.hash;
        const nonce = ++accessKey.nonce;
        return await $7Z5VI.signTransaction(receiverId, nonce, actions, $6CyfS.baseDecode(blockHash), this.connection.signer, this.accountId, this.connection.networkId);
    }
    signAndSendTransaction(...args) {
        if (typeof args[0] === 'string') return this.signAndSendTransactionV1(args[0], args[1]);
        else return this.signAndSendTransactionV2(args[0]);
    }
    signAndSendTransactionV1(receiverId, actions) {
        const deprecate = $c07a399f909d7894$var$depd_1.default('Account.signAndSendTransaction(receiverId, actions');
        deprecate('use `Account.signAndSendTransaction(SignAndSendTransactionOptions)` instead');
        return this.signAndSendTransactionV2({
            receiverId: receiverId,
            actions: actions
        });
    }
    async signAndSendTransactionV2({ receiverId: receiverId , actions: actions  }) {
        let txHash, signedTx;
        // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)
        const result = await $c07a399f909d7894$var$exponential_backoff_1.default($c07a399f909d7894$var$TX_NONCE_RETRY_WAIT, $c07a399f909d7894$var$TX_NONCE_RETRY_NUMBER, $c07a399f909d7894$var$TX_NONCE_RETRY_WAIT_BACKOFF, async ()=>{
            [txHash, signedTx] = await this.signTransaction(receiverId, actions);
            const publicKey = signedTx.transaction.publicKey;
            try {
                return await this.connection.provider.sendTransaction(signedTx);
            } catch (error) {
                if (error.type === 'InvalidNonce') {
                    console.warn(`Retrying transaction ${receiverId}:${$6CyfS.baseEncode(txHash)} with new nonce.`);
                    delete this.accessKeyByPublicKeyCache[publicKey.toString()];
                    return null;
                }
                error.context = new $2drwM.ErrorContext($6CyfS.baseEncode(txHash));
                throw error;
            }
        });
        if (!result) // TODO: This should have different code actually, as means "transaction not submitted for sure"
        throw new $2drwM.TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');
        const flatLogs = [
            result.transaction_outcome,
            ...result.receipts_outcome
        ].reduce((acc, it)=>{
            if (it.outcome.logs.length || typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object') return acc.concat({
                'receiptIds': it.outcome.receipt_ids,
                'logs': it.outcome.logs,
                'failure': typeof it.outcome.status.Failure != 'undefined' ? $4VSha.parseRpcError(it.outcome.status.Failure) : null
            });
            else return acc;
        }, []);
        this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);
        if (typeof result.status === 'object' && typeof result.status.Failure === 'object') {
            // if error data has error_message and error_type properties, we consider that node returned an error in the old format
            if (result.status.Failure.error_message && result.status.Failure.error_type) throw new $2drwM.TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);
            else throw $4VSha.parseResultError(result);
        }
        // TODO: if Tx is Unknown or Started.
        return result;
    }
    /**
     * Finds the {@link AccessKeyView} associated with the accounts {@link PublicKey} stored in the {@link KeyStore}.
     *
     * @todo Find matching access key based on transaction (i.e. receiverId and actions)
     *
     * @param receiverId currently unused (see todo)
     * @param actions currently unused (see todo)
     * @returns `{ publicKey PublicKey; accessKey: AccessKeyView }`
     */ async findAccessKey(receiverId, actions) {
        // TODO: Find matching access key based on transaction (i.e. receiverId and actions)
        const publicKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);
        if (!publicKey) return null;
        const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];
        if (cachedAccessKey !== undefined) return {
            publicKey: publicKey,
            accessKey: cachedAccessKey
        };
        try {
            const accessKey = await this.connection.provider.query({
                request_type: 'view_access_key',
                account_id: this.accountId,
                public_key: publicKey.toString(),
                finality: 'optimistic'
            });
            // this function can be called multiple times and retrieve the same access key
            // this checks to see if the access key was already retrieved and cached while
            // the above network call was in flight. To keep nonce values in line, we return
            // the cached access key.
            if (this.accessKeyByPublicKeyCache[publicKey.toString()]) return {
                publicKey: publicKey,
                accessKey: this.accessKeyByPublicKeyCache[publicKey.toString()]
            };
            this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;
            return {
                publicKey: publicKey,
                accessKey: accessKey
            };
        } catch (e) {
            if (e.type == 'AccessKeyDoesNotExist') return null;
            throw e;
        }
    }
    /**
     * Create a new account and deploy a contract to it
     *
     * @param contractId NEAR account where the contract is deployed
     * @param publicKey The public key to add to the created contract account
     * @param data The compiled contract code
     * @param amount of NEAR to transfer to the created contract account. Transfer enough to pay for storage https://docs.near.org/docs/concepts/storage-staking
     */ async createAndDeployContract(contractId, publicKey, data, amount) {
        const accessKey = $7Z5VI.fullAccessKey();
        await this.signAndSendTransaction({
            receiverId: contractId,
            actions: [
                $7Z5VI.createAccount(),
                $7Z5VI.transfer(amount),
                $7Z5VI.addKey($bqi77.PublicKey.from(publicKey), accessKey),
                $7Z5VI.deployContract(data)
            ]
        });
        const contractAccount = new $c07a399f909d7894$var$Account(this.connection, contractId);
        return contractAccount;
    }
    /**
     * @param receiverId NEAR account receiving Ⓝ
     * @param amount Amount to send in yoctoⓃ
     */ async sendMoney(receiverId, amount) {
        return this.signAndSendTransaction({
            receiverId: receiverId,
            actions: [
                $7Z5VI.transfer(amount)
            ]
        });
    }
    /**
     * @param newAccountId NEAR account name to be created
     * @param publicKey A public key created from the masterAccount
     */ async createAccount(newAccountId, publicKey, amount) {
        const accessKey = $7Z5VI.fullAccessKey();
        return this.signAndSendTransaction({
            receiverId: newAccountId,
            actions: [
                $7Z5VI.createAccount(),
                $7Z5VI.transfer(amount),
                $7Z5VI.addKey($bqi77.PublicKey.from(publicKey), accessKey)
            ]
        });
    }
    /**
     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted
     */ async deleteAccount(beneficiaryId) {
        return this.signAndSendTransaction({
            receiverId: this.accountId,
            actions: [
                $7Z5VI.deleteAccount(beneficiaryId)
            ]
        });
    }
    /**
     * @param data The compiled contract code
     */ async deployContract(data) {
        return this.signAndSendTransaction({
            receiverId: this.accountId,
            actions: [
                $7Z5VI.deployContract(data)
            ]
        });
    }
    async functionCall(...args) {
        if (typeof args[0] === 'string') return this.functionCallV1(args[0], args[1], args[2], args[3], args[4]);
        else return this.functionCallV2(args[0]);
    }
    functionCallV1(contractId, methodName, args, gas, amount) {
        const deprecate = $c07a399f909d7894$var$depd_1.default('Account.functionCall(contractId, methodName, args, gas, amount)');
        deprecate('use `Account.functionCall(FunctionCallOptions)` instead');
        args = args || {
        };
        this.validateArgs(args);
        return this.signAndSendTransaction({
            receiverId: contractId,
            actions: [
                $7Z5VI.functionCall(methodName, args, gas || $jpOMx.DEFAULT_FUNCTION_CALL_GAS, amount)
            ]
        });
    }
    functionCallV2({ contractId: contractId , methodName: methodName , args: args = {
    } , gas: gas = $jpOMx.DEFAULT_FUNCTION_CALL_GAS , attachedDeposit: attachedDeposit , walletMeta: walletMeta , walletCallbackUrl: walletCallbackUrl  }) {
        this.validateArgs(args);
        return this.signAndSendTransaction({
            receiverId: contractId,
            actions: [
                $7Z5VI.functionCall(methodName, args, gas, attachedDeposit)
            ],
            walletMeta: walletMeta,
            walletCallbackUrl: walletCallbackUrl
        });
    }
    /**
     * @see {@link https://docs.near.org/docs/concepts/account#access-keys}
     * @todo expand this API to support more options.
     * @param publicKey A public key to be associated with the contract
     * @param contractId NEAR account where the contract is deployed
     * @param methodNames The method names on the contract that should be allowed to be called. Pass null for no method names and '' or [] for any method names.
     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call
     */ async addKey(publicKey, contractId, methodNames, amount) {
        if (!methodNames) methodNames = [];
        if (!Array.isArray(methodNames)) methodNames = [
            methodNames
        ];
        let accessKey;
        if (!contractId) accessKey = $7Z5VI.fullAccessKey();
        else accessKey = $7Z5VI.functionCallAccessKey(contractId, methodNames, amount);
        return this.signAndSendTransaction({
            receiverId: this.accountId,
            actions: [
                $7Z5VI.addKey($bqi77.PublicKey.from(publicKey), accessKey)
            ]
        });
    }
    /**
     * @param publicKey The public key to be deleted
     * @returns {Promise<FinalExecutionOutcome>}
     */ async deleteKey(publicKey) {
        return this.signAndSendTransaction({
            receiverId: this.accountId,
            actions: [
                $7Z5VI.deleteKey($bqi77.PublicKey.from(publicKey))
            ]
        });
    }
    /**
     * @see {@link https://docs.near.org/docs/validator/staking-overview}
     *
     * @param publicKey The public key for the account that's staking
     * @param amount The account to stake in yoctoⓃ
     */ async stake(publicKey, amount) {
        return this.signAndSendTransaction({
            receiverId: this.accountId,
            actions: [
                $7Z5VI.stake(amount, $bqi77.PublicKey.from(publicKey))
            ]
        });
    }
    /** @hidden */ validateArgs(args) {
        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;
        if (isUint8Array) return;
        if (Array.isArray(args) || typeof args !== 'object') throw new $9ZP4J.PositionalArgsError();
    }
    /**
     * Invoke a contract view function using the RPC API.
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#call-a-contract-function}
     *
     * @param contractId NEAR account where the contract is deployed
     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code
     * @param args Any arguments to the view contract method, wrapped in JSON
     * @returns {Promise<any>}
     */ async viewFunction(contractId, methodName, args = {
    }, { parse: parse = $c07a399f909d7894$var$parseJsonFromRawResponse  } = {
    }) {
        this.validateArgs(args);
        const result = await this.connection.provider.query({
            request_type: 'call_function',
            account_id: contractId,
            method_name: methodName,
            args_base64: $c07a399f909d7894$require$Buffer.from(JSON.stringify(args)).toString('base64'),
            finality: 'optimistic'
        });
        if (result.logs) this.printLogs(contractId, result.logs);
        return result.result && result.result.length > 0 && parse($c07a399f909d7894$require$Buffer.from(result.result));
    }
    /**
     * Returns the state (key value pairs) of this account's contract based on the key prefix.
     * Pass an empty string for prefix if you would like to return the entire state.
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-contract-state}
     *
     * @param prefix allows to filter which keys should be returned. Empty prefix means all keys. String prefix is utf-8 encoded.
     * @param blockQuery specifies which block to query state at. By default returns last "optimistic" block (i.e. not necessarily finalized).
     */ async viewState(prefix, blockQuery = {
        finality: 'optimistic'
    }) {
        const { values: values  } = await this.connection.provider.query({
            request_type: 'view_state',
            ...blockQuery,
            account_id: this.accountId,
            prefix_base64: $c07a399f909d7894$require$Buffer.from(prefix).toString('base64')
        });
        return values.map(({ key: key , value: value  })=>({
                key: $c07a399f909d7894$require$Buffer.from(key, 'base64'),
                value: $c07a399f909d7894$require$Buffer.from(value, 'base64')
            })
        );
    }
    /**
     * Get all access keys for the account
     * @see {@link https://docs.near.org/docs/develop/front-end/rpc#view-access-key-list}
     */ async getAccessKeys() {
        const response = await this.connection.provider.query({
            request_type: 'view_access_key_list',
            account_id: this.accountId,
            finality: 'optimistic'
        });
        // A breaking API change introduced extra information into the
        // response, so it now returns an object with a `keys` field instead
        // of an array: https://github.com/nearprotocol/nearcore/pull/1789
        if (Array.isArray(response)) return response;
        return response.keys;
    }
    /**
     * Returns a list of authorized apps
     * @todo update the response value to return all the different keys, not just app keys.
     */ async getAccountDetails() {
        // TODO: update the response value to return all the different keys, not just app keys.
        // Also if we need this function, or getAccessKeys is good enough.
        const accessKeys = await this.getAccessKeys();
        const authorizedApps = accessKeys.filter((item)=>item.access_key.permission !== 'FullAccess'
        ).map((item)=>{
            const perm = item.access_key.permission;
            return {
                contractId: perm.FunctionCall.receiver_id,
                amount: perm.FunctionCall.allowance,
                publicKey: item.public_key
            };
        });
        return {
            authorizedApps: authorizedApps
        };
    }
    /**
     * Returns calculated account balance
     */ async getAccountBalance() {
        const protocolConfig = await this.connection.provider.experimental_protocolConfig({
            finality: 'final'
        });
        const state = await this.state();
        const costPerByte = new $c07a399f909d7894$var$bn_js_1.default(protocolConfig.runtime_config.storage_amount_per_byte);
        const stateStaked = new $c07a399f909d7894$var$bn_js_1.default(state.storage_usage).mul(costPerByte);
        const staked = new $c07a399f909d7894$var$bn_js_1.default(state.locked);
        const totalBalance = new $c07a399f909d7894$var$bn_js_1.default(state.amount).add(staked);
        const availableBalance = totalBalance.sub($c07a399f909d7894$var$bn_js_1.default.max(staked, stateStaked));
        return {
            total: totalBalance.toString(),
            stateStaked: stateStaked.toString(),
            staked: staked.toString(),
            available: availableBalance.toString()
        };
    }
}
module.exports.Account = $c07a399f909d7894$var$Account;

});
parcelRequire.register("jpOMx", function(module, exports) {
"use strict";
var $e227be574ab986fa$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.DEFAULT_FUNCTION_CALL_GAS = void 0;

const $e227be574ab986fa$var$bn_js_1 = $e227be574ab986fa$var$__importDefault((parcelRequire("euZho")));
// Default amount of gas to be sent with the function calls. Used to pay for the fees
// incurred while running the contract execution. The unused amount will be refunded back to
// the originator.
// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to
// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.
// For discussion see https://github.com/nearprotocol/NEPs/issues/67
module.exports.DEFAULT_FUNCTION_CALL_GAS = new $e227be574ab986fa$var$bn_js_1.default('30000000000000');

});


parcelRequire.register("ih9ZG", function(module, exports) {

var $d4e1911f79db7d53$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
'use strict';
var $d4e1911f79db7d53$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.Account2FA = module.exports.AccountMultisig = module.exports.MULTISIG_CONFIRM_METHODS = module.exports.MULTISIG_CHANGE_METHODS = module.exports.MULTISIG_DEPOSIT = module.exports.MULTISIG_GAS = module.exports.MULTISIG_ALLOWANCE = module.exports.MULTISIG_STORAGE_KEY = void 0;

const $d4e1911f79db7d53$var$bn_js_1 = $d4e1911f79db7d53$var$__importDefault((parcelRequire("euZho")));

const $d4e1911f79db7d53$var$depd_1 = $d4e1911f79db7d53$var$__importDefault((parcelRequire("9NoLj")));

var $gwyhm = parcelRequire("gwyhm");

var $8rjqt = parcelRequire("8rjqt");

var $bqi77 = parcelRequire("bqi77");

var $7Z5VI = parcelRequire("7Z5VI");

var $4iS3f = parcelRequire("4iS3f");
module.exports.MULTISIG_STORAGE_KEY = '__multisigRequest';
module.exports.MULTISIG_ALLOWANCE = new $d4e1911f79db7d53$var$bn_js_1.default($8rjqt.parseNearAmount('1'));
// TODO: Different gas value for different requests (can reduce gas usage dramatically)
module.exports.MULTISIG_GAS = new $d4e1911f79db7d53$var$bn_js_1.default('100000000000000');
module.exports.MULTISIG_DEPOSIT = new $d4e1911f79db7d53$var$bn_js_1.default('0');
module.exports.MULTISIG_CHANGE_METHODS = [
    'add_request',
    'add_request_and_confirm',
    'delete_request',
    'confirm'
];
module.exports.MULTISIG_CONFIRM_METHODS = [
    'confirm'
];
// in memory request cache for node w/o localStorage
const $d4e1911f79db7d53$var$storageFallback = {
    [module.exports.MULTISIG_STORAGE_KEY]: null
};
class $d4e1911f79db7d53$var$AccountMultisig extends $gwyhm.Account {
    constructor(connection, accountId, options){
        super(connection, accountId);
        this.storage = options.storage;
        this.onAddRequestResult = options.onAddRequestResult;
    }
    async signAndSendTransactionWithAccount(receiverId, actions) {
        return super.signAndSendTransaction({
            receiverId: receiverId,
            actions: actions
        });
    }
    signAndSendTransaction(...args) {
        if (typeof args[0] === 'string') return this._signAndSendTransaction({
            receiverId: args[0],
            actions: args[1]
        });
        return this._signAndSendTransaction(args[0]);
    }
    async _signAndSendTransaction({ receiverId: receiverId , actions: actions  }) {
        const { accountId: accountId1  } = this;
        const args = $d4e1911f79db7d53$require$Buffer.from(JSON.stringify({
            request: {
                receiver_id: receiverId,
                actions: $d4e1911f79db7d53$var$convertActions(actions, accountId1, receiverId)
            }
        }));
        let result;
        try {
            result = await super.signAndSendTransaction({
                receiverId: accountId1,
                actions: [
                    $7Z5VI.functionCall('add_request_and_confirm', args, module.exports.MULTISIG_GAS, module.exports.MULTISIG_DEPOSIT)
                ]
            });
        } catch (e) {
            if (e.toString().includes('Account has too many active requests. Confirm or delete some')) {
                await this.deleteUnconfirmedRequests();
                return await this.signAndSendTransaction(receiverId, actions);
            }
            throw e;
        }
        // TODO: Are following even needed? Seems like it throws on error already
        if (!result.status) throw new Error('Request failed');
        const status = {
            ...result.status
        };
        if (!status.SuccessValue || typeof status.SuccessValue !== 'string') throw new Error('Request failed');
        this.setRequest({
            accountId: accountId1,
            actions: actions,
            requestId: parseInt($d4e1911f79db7d53$require$Buffer.from(status.SuccessValue, 'base64').toString('ascii'), 10)
        });
        if (this.onAddRequestResult) await this.onAddRequestResult(result);
        // NOTE there is no await on purpose to avoid blocking for 2fa
        this.deleteUnconfirmedRequests();
        return result;
    }
    async deleteUnconfirmedRequests() {
        // TODO: Delete in batch, don't delete unexpired
        // TODO: Delete in batch, don't delete unexpired (can reduce gas usage dramatically)
        const request_ids = await this.getRequestIds();
        const { requestId: requestId  } = this.getRequest();
        for (const requestIdToDelete of request_ids){
            if (requestIdToDelete == requestId) continue;
            try {
                await super.signAndSendTransaction({
                    receiverId: this.accountId,
                    actions: [
                        $7Z5VI.functionCall('delete_request', {
                            request_id: requestIdToDelete
                        }, module.exports.MULTISIG_GAS, module.exports.MULTISIG_DEPOSIT)
                    ]
                });
            } catch (e) {
                console.warn('Attempt to delete an earlier request before 15 minutes failed. Will try again.');
            }
        }
    }
    // helpers
    async getRequestIds() {
        // TODO: Read requests from state to allow filtering by expiration time
        // TODO: https://github.com/near/core-contracts/blob/305d1db4f4f2cf5ce4c1ef3479f7544957381f11/multisig/src/lib.rs#L84
        return this.viewFunction(this.accountId, 'list_request_ids');
    }
    getRequest() {
        if (this.storage) return JSON.parse(this.storage.getItem(module.exports.MULTISIG_STORAGE_KEY) || '{}');
        return $d4e1911f79db7d53$var$storageFallback[module.exports.MULTISIG_STORAGE_KEY];
    }
    setRequest(data) {
        if (this.storage) return this.storage.setItem(module.exports.MULTISIG_STORAGE_KEY, JSON.stringify(data));
        $d4e1911f79db7d53$var$storageFallback[module.exports.MULTISIG_STORAGE_KEY] = data;
    }
}
module.exports.AccountMultisig = $d4e1911f79db7d53$var$AccountMultisig;
class $d4e1911f79db7d53$var$Account2FA extends $d4e1911f79db7d53$var$AccountMultisig {
    constructor(connection1, accountId1, options1){
        super(connection1, accountId1, options1);
        this.helperUrl = 'https://helper.testnet.near.org';
        this.helperUrl = options1.helperUrl || this.helperUrl;
        this.storage = options1.storage;
        this.sendCode = options1.sendCode || this.sendCodeDefault;
        this.getCode = options1.getCode || this.getCodeDefault;
        this.verifyCode = options1.verifyCode || this.verifyCodeDefault;
        this.onConfirmResult = options1.onConfirmResult;
    }
    async signAndSendTransaction(...args) {
        if (typeof args[0] === 'string') {
            const deprecate = $d4e1911f79db7d53$var$depd_1.default('Account.signAndSendTransaction(receiverId, actions');
            deprecate('use `Account2FA.signAndSendTransaction(SignAndSendTransactionOptions)` instead');
            return this.__signAndSendTransaction({
                receiverId: args[0],
                actions: args[1]
            });
        } else return this.__signAndSendTransaction(args[0]);
    }
    async __signAndSendTransaction({ receiverId: receiverId , actions: actions  }) {
        await super.signAndSendTransaction({
            receiverId: receiverId,
            actions: actions
        });
        // TODO: Should following override onRequestResult in superclass instead of doing custom signAndSendTransaction?
        await this.sendCode();
        const result = await this.promptAndVerify();
        if (this.onConfirmResult) await this.onConfirmResult(result);
        return result;
    }
    // default helpers for CH deployments of multisig
    async deployMultisig(contractBytes) {
        const { accountId: accountId2  } = this;
        const seedOrLedgerKey = (await this.getRecoveryMethods()).data.filter(({ kind: kind , publicKey: publicKey  })=>(kind === 'phrase' || kind === 'ledger') && publicKey !== null
        ).map((rm)=>rm.publicKey
        );
        const fak2lak = (await this.getAccessKeys()).filter(({ public_key: public_key , access_key: { permission: permission  }  })=>permission === 'FullAccess' && !seedOrLedgerKey.includes(public_key)
        ).map((ak)=>ak.public_key
        ).map($d4e1911f79db7d53$var$toPK);
        const confirmOnlyKey = $d4e1911f79db7d53$var$toPK((await this.postSignedJson('/2fa/getAccessKey', {
            accountId: accountId2
        })).publicKey);
        const newArgs = $d4e1911f79db7d53$require$Buffer.from(JSON.stringify({
            'num_confirmations': 2
        }));
        const actions = [
            ...fak2lak.map((pk)=>$7Z5VI.deleteKey(pk)
            ),
            ...fak2lak.map((pk)=>$7Z5VI.addKey(pk, $7Z5VI.functionCallAccessKey(accountId2, module.exports.MULTISIG_CHANGE_METHODS, null))
            ),
            $7Z5VI.addKey(confirmOnlyKey, $7Z5VI.functionCallAccessKey(accountId2, module.exports.MULTISIG_CONFIRM_METHODS, null)),
            $7Z5VI.deployContract(contractBytes), 
        ];
        if ((await this.state()).code_hash === '11111111111111111111111111111111') actions.push($7Z5VI.functionCall('new', newArgs, module.exports.MULTISIG_GAS, module.exports.MULTISIG_DEPOSIT));
        console.log('deploying multisig contract for', accountId2);
        return await super.signAndSendTransactionWithAccount(accountId2, actions);
    }
    async disable(contractBytes) {
        const { accountId: accountId2  } = this;
        const accessKeys = await this.getAccessKeys();
        const lak2fak = accessKeys.filter(({ access_key: access_key  })=>access_key.permission !== 'FullAccess'
        ).filter(({ access_key: access_key  })=>{
            const perm = access_key.permission.FunctionCall;
            return perm.receiver_id === accountId2 && perm.method_names.length === 4 && perm.method_names.includes('add_request_and_confirm');
        });
        const confirmOnlyKey = $bqi77.PublicKey.from((await this.postSignedJson('/2fa/getAccessKey', {
            accountId: accountId2
        })).publicKey);
        const actions = [
            $7Z5VI.deleteKey(confirmOnlyKey),
            ...lak2fak.map(({ public_key: public_key  })=>$7Z5VI.deleteKey($bqi77.PublicKey.from(public_key))
            ),
            ...lak2fak.map(({ public_key: public_key  })=>$7Z5VI.addKey($bqi77.PublicKey.from(public_key), null)
            ),
            $7Z5VI.deployContract(contractBytes), 
        ];
        console.log('disabling 2fa for', accountId2);
        return await this.signAndSendTransaction({
            receiverId: accountId2,
            actions: actions
        });
    }
    async sendCodeDefault() {
        const { accountId: accountId2  } = this;
        const { requestId: requestId  } = this.getRequest();
        const method = await this.get2faMethod();
        await this.postSignedJson('/2fa/send', {
            accountId: accountId2,
            method: method,
            requestId: requestId
        });
        return requestId;
    }
    async getCodeDefault(method) {
        throw new Error('There is no getCode callback provided. Please provide your own in AccountMultisig constructor options. It has a parameter method where method.kind is "email" or "phone".');
    }
    async promptAndVerify() {
        const method = await this.get2faMethod();
        const securityCode = await this.getCode(method);
        try {
            const result = await this.verifyCode(securityCode);
            // TODO: Parse error from result for real (like in normal account.signAndSendTransaction)
            return result;
        } catch (e) {
            console.warn('Error validating security code:', e);
            if (e.toString().includes('invalid 2fa code provided') || e.toString().includes('2fa code not valid')) return await this.promptAndVerify();
            throw e;
        }
    }
    async verifyCodeDefault(securityCode) {
        const { accountId: accountId2  } = this;
        const request = this.getRequest();
        if (!request) throw new Error('no request pending');
        const { requestId: requestId  } = request;
        return await this.postSignedJson('/2fa/verify', {
            accountId: accountId2,
            securityCode: securityCode,
            requestId: requestId
        });
    }
    async getRecoveryMethods() {
        const { accountId: accountId2  } = this;
        return {
            accountId: accountId2,
            data: await this.postSignedJson('/account/recoveryMethods', {
                accountId: accountId2
            })
        };
    }
    async get2faMethod() {
        let { data: data  } = await this.getRecoveryMethods();
        if (data && data.length) data = data.find((m)=>m.kind.indexOf('2fa-') === 0
        );
        if (!data) return null;
        const { kind: kind , detail: detail  } = data;
        return {
            kind: kind,
            detail: detail
        };
    }
    async signatureFor() {
        const { accountId: accountId2  } = this;
        const block = await this.connection.provider.block({
            finality: 'final'
        });
        const blockNumber = block.header.height.toString();
        const signed = await this.connection.signer.signMessage($d4e1911f79db7d53$require$Buffer.from(blockNumber), accountId2, this.connection.networkId);
        const blockNumberSignature = $d4e1911f79db7d53$require$Buffer.from(signed.signature).toString('base64');
        return {
            blockNumber: blockNumber,
            blockNumberSignature: blockNumberSignature
        };
    }
    async postSignedJson(path, body) {
        return await $4iS3f.fetchJson(this.helperUrl + path, JSON.stringify({
            ...body,
            ...await this.signatureFor()
        }));
    }
}
module.exports.Account2FA = $d4e1911f79db7d53$var$Account2FA;
// helpers
const $d4e1911f79db7d53$var$toPK = (pk)=>$bqi77.PublicKey.from(pk)
;
const $d4e1911f79db7d53$var$convertPKForContract = (pk)=>pk.toString().replace('ed25519:', '')
;
const $d4e1911f79db7d53$var$convertActions = (actions, accountId2, receiverId)=>actions.map((a)=>{
        const type = a.enum;
        const { gas: gas , publicKey: publicKey , methodName: methodName , args: args , deposit: deposit , accessKey: accessKey , code: code  } = a[type];
        const action = {
            type: type[0].toUpperCase() + type.substr(1),
            gas: gas && gas.toString() || undefined,
            public_key: publicKey && $d4e1911f79db7d53$var$convertPKForContract(publicKey) || undefined,
            method_name: methodName,
            args: args && $d4e1911f79db7d53$require$Buffer.from(args).toString('base64') || undefined,
            code: code && $d4e1911f79db7d53$require$Buffer.from(code).toString('base64') || undefined,
            amount: deposit && deposit.toString() || undefined,
            deposit: deposit && deposit.toString() || '0',
            permission: undefined
        };
        if (accessKey) {
            if (receiverId === accountId2 && accessKey.permission.enum !== 'fullAccess') action.permission = {
                receiver_id: accountId2,
                allowance: module.exports.MULTISIG_ALLOWANCE.toString(),
                method_names: module.exports.MULTISIG_CHANGE_METHODS
            };
            if (accessKey.permission.enum === 'functionCall') {
                const { receiverId: receiver_id , methodNames: method_names , allowance: allowance  } = accessKey.permission.functionCall;
                action.permission = {
                    receiver_id: receiver_id,
                    allowance: allowance && allowance.toString() || undefined,
                    method_names: method_names
                };
            }
        }
        return action;
    })
;

});

parcelRequire.register("lIRwQ", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.UrlAccountCreator = module.exports.LocalAccountCreator = module.exports.AccountCreator = void 0;

var $4iS3f = parcelRequire("4iS3f");
/**
 * Account creator provides an interface for implementations to actually create accounts
 */ class $fd073ac13896e4af$var$AccountCreator {
}
module.exports.AccountCreator = $fd073ac13896e4af$var$AccountCreator;
class $fd073ac13896e4af$var$LocalAccountCreator extends $fd073ac13896e4af$var$AccountCreator {
    constructor(masterAccount, initialBalance){
        super();
        this.masterAccount = masterAccount;
        this.initialBalance = initialBalance;
    }
    /**
     * Creates an account using a masterAccount, meaning the new account is created from an existing account
     * @param newAccountId The name of the NEAR account to be created
     * @param publicKey The public key from the masterAccount used to create this account
     * @returns {Promise<void>}
     */ async createAccount(newAccountId, publicKey) {
        await this.masterAccount.createAccount(newAccountId, publicKey, this.initialBalance);
    }
}
module.exports.LocalAccountCreator = $fd073ac13896e4af$var$LocalAccountCreator;
class $fd073ac13896e4af$var$UrlAccountCreator extends $fd073ac13896e4af$var$AccountCreator {
    constructor(connection, helperUrl){
        super();
        this.connection = connection;
        this.helperUrl = helperUrl;
    }
    /**
     * Creates an account using a helperUrl
     * This is [hosted here](https://helper.nearprotocol.com) or set up locally with the [near-contract-helper](https://github.com/nearprotocol/near-contract-helper) repository
     * @param newAccountId The name of the NEAR account to be created
     * @param publicKey The public key from the masterAccount used to create this account
     * @returns {Promise<void>}
     */ async createAccount(newAccountId, publicKey) {
        await $4iS3f.fetchJson(`${this.helperUrl}/account`, JSON.stringify({
            newAccountId: newAccountId,
            newAccountPublicKey: publicKey.toString()
        }));
    }
}
module.exports.UrlAccountCreator = $fd073ac13896e4af$var$UrlAccountCreator;

});

parcelRequire.register("kDTDJ", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.Connection = void 0;

var $2drwM = parcelRequire("2drwM");

var $jcKrI = parcelRequire("jcKrI");
/**
 * @param config Contains connection info details
 * @returns {Provider}
 */ function $f0729c133eccf796$var$getProvider(config) {
    switch(config.type){
        case undefined:
            return config;
        case 'JsonRpcProvider':
            return new $2drwM.JsonRpcProvider(config.args.url);
        default:
            throw new Error(`Unknown provider type ${config.type}`);
    }
}
/**
 * @param config Contains connection info details
 * @returns {Signer}
 */ function $f0729c133eccf796$var$getSigner(config) {
    switch(config.type){
        case undefined:
            return config;
        case 'InMemorySigner':
            return new $jcKrI.InMemorySigner(config.keyStore);
        default:
            throw new Error(`Unknown signer type ${config.type}`);
    }
}
/**
 * Connects an account to a given network via a given provider
 */ class $f0729c133eccf796$var$Connection {
    constructor(networkId, provider, signer){
        this.networkId = networkId;
        this.provider = provider;
        this.signer = signer;
    }
    /**
     * @param config Contains connection info details
     */ static fromConfig(config) {
        const provider1 = $f0729c133eccf796$var$getProvider(config.provider);
        const signer1 = $f0729c133eccf796$var$getSigner(config.signer);
        return new $f0729c133eccf796$var$Connection(config.networkId, provider1, signer1);
    }
}
module.exports.Connection = $f0729c133eccf796$var$Connection;

});
parcelRequire.register("jcKrI", function(module, exports) {
"use strict";
var $dfb32a86139836c8$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.InMemorySigner = module.exports.Signer = void 0;

const $dfb32a86139836c8$var$js_sha256_1 = $dfb32a86139836c8$var$__importDefault((parcelRequire("hILnw")));

var $bqi77 = parcelRequire("bqi77");

var $8bEHX = parcelRequire("8bEHX");
/**
 * General signing interface, can be used for in memory signing, RPC singing, external wallet, HSM, etc.
 */ class $dfb32a86139836c8$var$Signer {
}
module.exports.Signer = $dfb32a86139836c8$var$Signer;
/**
 * Signs using in memory key store.
 */ class $dfb32a86139836c8$var$InMemorySigner extends $dfb32a86139836c8$var$Signer {
    constructor(keyStore){
        super();
        this.keyStore = keyStore;
    }
    /**
     * Creates a single account Signer instance with account, network and keyPair provided.
     *
     * Intended to be useful for temporary keys (e.g. claiming a Linkdrop).
     *
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @param accountId The NEAR account to assign the key pair to
     * @param keyPair The keyPair to use for signing
     */ static async fromKeyPair(networkId, accountId, keyPair) {
        const keyStore1 = new $8bEHX.InMemoryKeyStore();
        await keyStore1.setKey(networkId, accountId, keyPair);
        return new $dfb32a86139836c8$var$InMemorySigner(keyStore1);
    }
    /**
     * Creates a public key for the account given
     * @param accountId The NEAR account to assign a public key to
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @returns {Promise<PublicKey>}
     */ async createKey(accountId, networkId) {
        const keyPair = $bqi77.KeyPair.fromRandom('ed25519');
        await this.keyStore.setKey(networkId, accountId, keyPair);
        return keyPair.getPublicKey();
    }
    /**
     * Gets the existing public key for a given account
     * @param accountId The NEAR account to assign a public key to
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @returns {Promise<PublicKey>} Returns the public key or null if not found
     */ async getPublicKey(accountId, networkId) {
        const keyPair = await this.keyStore.getKey(networkId, accountId);
        if (keyPair === null) return null;
        return keyPair.getPublicKey();
    }
    /**
     * @param message A message to be signed, typically a serialized transaction
     * @param accountId the NEAR account signing the message
     * @param networkId The targeted network. (ex. default, betanet, etc…)
     * @returns {Promise<Signature>}
     */ async signMessage(message, accountId, networkId) {
        const hash = new Uint8Array($dfb32a86139836c8$var$js_sha256_1.default.sha256.array(message));
        if (!accountId) throw new Error('InMemorySigner requires provided account id');
        const keyPair = await this.keyStore.getKey(networkId, accountId);
        if (keyPair === null) throw new Error(`Key for ${accountId} not found in ${networkId}`);
        return keyPair.sign(hash);
    }
    toString() {
        return `InMemorySigner(${this.keyStore})`;
    }
}
module.exports.InMemorySigner = $dfb32a86139836c8$var$InMemorySigner;

});


parcelRequire.register("8wIEw", function(module, exports) {
"use strict";
var $6353f2f5c5d278b3$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.Contract = void 0;

const $6353f2f5c5d278b3$var$bn_js_1 = $6353f2f5c5d278b3$var$__importDefault((parcelRequire("euZho")));

const $6353f2f5c5d278b3$var$depd_1 = $6353f2f5c5d278b3$var$__importDefault((parcelRequire("9NoLj")));

var $2drwM = parcelRequire("2drwM");

var $9ZP4J = parcelRequire("9ZP4J");
// Makes `function.name` return given name
function $6353f2f5c5d278b3$var$nameFunction(name, body) {
    return ({
        [name] (...args) {
            return body(...args);
        }
    })[name];
}
const $6353f2f5c5d278b3$var$isUint8Array = (x)=>x && x.byteLength !== undefined && x.byteLength === x.length
;
const $6353f2f5c5d278b3$var$isObject = (x)=>Object.prototype.toString.call(x) === '[object Object]'
;
/**
 * Defines a smart contract on NEAR including the change (mutable) and view (non-mutable) methods
 *
 * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#contract}
 * @example
 * ```js
 * import { Contract } from 'near-api-js';
 *
 * async function contractExample() {
 *   const methodOptions = {
 *     viewMethods: ['getMessageByAccountId'],
 *     changeMethods: ['addMessage']
 *   };
 *   const contract = new Contract(
 *     wallet.account(),
 *     'contract-id.testnet',
 *     methodOptions
 *   );
 *
 *   // use a contract view method
 *   const messages = await contract.getMessages({
 *     accountId: 'example-account.testnet'
 *   });
 *
 *   // use a contract change method
 *   await contract.addMessage({
 *      meta: 'some info',
 *      callbackUrl: 'https://example.com/callback',
 *      args: { text: 'my message' },
 *      amount: 1
 *   })
 * }
 * ```
 */ class $6353f2f5c5d278b3$var$Contract {
    /**
     * @param account NEAR account to sign change method transactions
     * @param contractId NEAR account id where the contract is deployed
     * @param options NEAR smart contract methods that your application will use. These will be available as `contract.methodName`
     */ constructor(account, contractId, options){
        this.account = account;
        this.contractId = contractId;
        const { viewMethods: viewMethods = [] , changeMethods: changeMethods = []  } = options;
        viewMethods.forEach((methodName)=>{
            Object.defineProperty(this, methodName, {
                writable: false,
                enumerable: true,
                value: $6353f2f5c5d278b3$var$nameFunction(methodName, async (args = {
                }, options1 = {
                }, ...ignored)=>{
                    if (ignored.length || !($6353f2f5c5d278b3$var$isObject(args) || $6353f2f5c5d278b3$var$isUint8Array(args)) || !$6353f2f5c5d278b3$var$isObject(options1)) throw new $9ZP4J.PositionalArgsError();
                    return this.account.viewFunction(this.contractId, methodName, args, options1);
                })
            });
        });
        changeMethods.forEach((methodName)=>{
            Object.defineProperty(this, methodName, {
                writable: false,
                enumerable: true,
                value: $6353f2f5c5d278b3$var$nameFunction(methodName, async (...args)=>{
                    if (args.length && (args.length > 3 || !($6353f2f5c5d278b3$var$isObject(args[0]) || $6353f2f5c5d278b3$var$isUint8Array(args[0])))) throw new $9ZP4J.PositionalArgsError();
                    if (args.length > 1 || !(args[0] && args[0].args)) {
                        const deprecate = $6353f2f5c5d278b3$var$depd_1.default('contract.methodName(args, gas, amount)');
                        deprecate('use `contract.methodName({ args, gas?, amount?, callbackUrl?, meta? })` instead');
                        return this._changeMethod({
                            methodName: methodName,
                            args: args[0],
                            gas: args[1],
                            amount: args[2]
                        });
                    }
                    return this._changeMethod({
                        methodName: methodName,
                        ...args[0]
                    });
                })
            });
        });
    }
    async _changeMethod({ args: args , methodName: methodName , gas: gas , amount: amount , meta: meta , callbackUrl: callbackUrl  }) {
        $6353f2f5c5d278b3$var$validateBNLike({
            gas: gas,
            amount: amount
        });
        const rawResult = await this.account.functionCall({
            contractId: this.contractId,
            methodName: methodName,
            args: args,
            gas: gas,
            attachedDeposit: amount,
            walletMeta: meta,
            walletCallbackUrl: callbackUrl
        });
        return $2drwM.getTransactionLastResult(rawResult);
    }
}
module.exports.Contract = $6353f2f5c5d278b3$var$Contract;
/**
 * Validation on arguments being a big number from bn.js
 * Throws if an argument is not in BN format or otherwise invalid
 * @param argMap
 */ function $6353f2f5c5d278b3$var$validateBNLike(argMap) {
    const bnLike = 'number, decimal string or BN';
    for (const argName of Object.keys(argMap)){
        const argValue = argMap[argName];
        if (argValue && !$6353f2f5c5d278b3$var$bn_js_1.default.isBN(argValue) && isNaN(argValue)) throw new $9ZP4J.ArgumentTypeError(argName, bnLike, argValue);
    }
}

});

parcelRequire.register("9MD2d", function(module, exports) {
"use strict";
var $71f6e0426e4206ab$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.Near = void 0;

/**
 * This module contains the main class developers will use to interact with NEAR.
 * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.
 * It is configured via the {@link NearConfig}.
 *
 * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}
 *
 * @module near
 */ const $71f6e0426e4206ab$var$bn_js_1 = $71f6e0426e4206ab$var$__importDefault((parcelRequire("euZho")));

var $gwyhm = parcelRequire("gwyhm");

var $kDTDJ = parcelRequire("kDTDJ");

var $8wIEw = parcelRequire("8wIEw");

var $lIRwQ = parcelRequire("lIRwQ");
/**
 * This is the main class developers should use to interact with NEAR.
 * @example
 * ```js
 * const near = new Near(config);
 * ```
 */ class $71f6e0426e4206ab$var$Near {
    constructor(config){
        this.config = config;
        this.connection = $kDTDJ.Connection.fromConfig({
            networkId: config.networkId,
            provider: {
                type: 'JsonRpcProvider',
                args: {
                    url: config.nodeUrl
                }
            },
            signer: config.signer || {
                type: 'InMemorySigner',
                keyStore: config.keyStore || config.deps.keyStore
            }
        });
        if (config.masterAccount) {
            // TODO: figure out better way of specifiying initial balance.
            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times
            const initialBalance = config.initialBalance ? new $71f6e0426e4206ab$var$bn_js_1.default(config.initialBalance) : new $71f6e0426e4206ab$var$bn_js_1.default('500000000000000000000000000');
            this.accountCreator = new $lIRwQ.LocalAccountCreator(new $gwyhm.Account(this.connection, config.masterAccount), initialBalance);
        } else if (config.helperUrl) this.accountCreator = new $lIRwQ.UrlAccountCreator(this.connection, config.helperUrl);
        else this.accountCreator = null;
    }
    /**
     * @param accountId near accountId used to interact with the network.
     */ async account(accountId) {
        const account = new $gwyhm.Account(this.connection, accountId);
        return account;
    }
    /**
     * Create an account using the {@link AccountCreator}. Either:
     * * using a masterAccount with {@link LocalAccountCreator}
     * * using the helperUrl with {@link UrlAccountCreator}
     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-
     *
     * @param accountId
     * @param publicKey
     */ async createAccount(accountId, publicKey) {
        if (!this.accountCreator) throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');
        await this.accountCreator.createAccount(accountId, publicKey);
        return new $gwyhm.Account(this.connection, accountId);
    }
    /**
     * @deprecated Use {@link Contract} instead.
     * @param contractId
     * @param options
     */ async loadContract(contractId, options) {
        const account = new $gwyhm.Account(this.connection, options.sender);
        return new $8wIEw.Contract(account, contractId, options);
    }
    /**
     * @deprecated Use {@link Account.sendMoney} instead.
     * @param amount
     * @param originator
     * @param receiver
     */ async sendTokens(amount, originator, receiver) {
        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');
        const account = new $gwyhm.Account(this.connection, originator);
        const result = await account.sendMoney(receiver, amount);
        return result.transaction_outcome.id;
    }
}
module.exports.Near = $71f6e0426e4206ab$var$Near;

});

parcelRequire.register("1Bput", function(module, exports) {

var $12ad050bcc8411aa$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
"use strict";
var $12ad050bcc8411aa$var$__importDefault = module.exports && module.exports.__importDefault || function(mod) {
    return mod && mod.__esModule ? mod : {
        "default": mod
    };
};
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.ConnectedWalletAccount = module.exports.WalletAccount = module.exports.WalletConnection = void 0;

/**
 * The classes in this module are used in conjunction with the {@link BrowserLocalStorageKeyStore}. This module exposes two classes:
 * * {@link WalletConnection} which redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.
 * * {@link ConnectedWalletAccount} is an {@link Account} implementation that uses {@link WalletConnection} to get keys
 *
 * @module walletAccount
 */ const $12ad050bcc8411aa$var$depd_1 = $12ad050bcc8411aa$var$__importDefault((parcelRequire("9NoLj")));

var $gwyhm = parcelRequire("gwyhm");

var $7Z5VI = parcelRequire("7Z5VI");

var $6JjgF = parcelRequire("6JjgF");

var $6CyfS = parcelRequire("6CyfS");

var $6CyfS = parcelRequire("6CyfS");
const $12ad050bcc8411aa$var$LOGIN_WALLET_URL_SUFFIX = '/login/';
const $12ad050bcc8411aa$var$MULTISIG_HAS_METHOD = 'add_request_and_confirm';
const $12ad050bcc8411aa$var$LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';
const $12ad050bcc8411aa$var$PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)
/**
 * This class is used in conjunction with the {@link BrowserLocalStorageKeyStore}.
 * It redirects users to {@link https://docs.near.org/docs/tools/near-wallet | NEAR Wallet} for key management.
 *
 * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#wallet}
 * @example
 * ```js
 * // create new WalletConnection instance
 * const wallet = new WalletConnection(near, 'my-app');
 *
 * // If not signed in redirect to the NEAR wallet to sign in
 * // keys will be stored in the BrowserLocalStorageKeyStore
 * if(!wallet.isSingnedIn()) return wallet.requestSignIn()
 * ```
 */ class $12ad050bcc8411aa$var$WalletConnection {
    constructor(near, appKeyPrefix){
        this._near = near;
        const authDataKey = appKeyPrefix + $12ad050bcc8411aa$var$LOCAL_STORAGE_KEY_SUFFIX;
        const authData = JSON.parse(window.localStorage.getItem(authDataKey));
        this._networkId = near.config.networkId;
        this._walletBaseUrl = near.config.walletUrl;
        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';
        this._keyStore = near.connection.signer.keyStore;
        this._authData = authData || {
            allKeys: []
        };
        this._authDataKey = authDataKey;
        if (!this.isSignedIn()) this._completeSignInWithAccessKey();
    }
    /**
     * Returns true, if this WalletAccount is authorized with the wallet.
     * @example
     * ```js
     * const wallet = new WalletConnection(near, 'my-app');
     * wallet.isSignedIn();
     * ```
     */ isSignedIn() {
        return !!this._authData.accountId;
    }
    /**
     * Returns authorized Account ID.
     * @example
     * ```js
     * const wallet = new WalletConnection(near, 'my-app');
     * wallet.getAccountId();
     * ```
     */ getAccountId() {
        return this._authData.accountId || '';
    }
    /**
     * Redirects current page to the wallet authentication page.
     * @param options An optional options object
     * @param options.contractId The NEAR account where the contract is deployed
     * @param options.successUrl URL to redirect upon success. Default: current url
     * @param options.failureUrl URL to redirect upon failure. Default: current url
     *
     * @example
     * ```js
     * const wallet = new WalletConnection(near, 'my-app');
     * // redirects to the NEAR Wallet
     * wallet.requestSignIn('account-with-deploy-contract.near');
     * ```
     */ async requestSignIn(contractIdOrOptions = {
    }, title, successUrl, failureUrl) {
        let options;
        if (typeof contractIdOrOptions === 'string') {
            const deprecate = $12ad050bcc8411aa$var$depd_1.default('requestSignIn(contractId, title)');
            deprecate('`title` ignored; use `requestSignIn({ contractId, successUrl, failureUrl })` instead');
            options = {
                contractId: contractIdOrOptions,
                successUrl: successUrl,
                failureUrl: failureUrl
            };
        } else options = contractIdOrOptions;
        const currentUrl = new URL(window.location.href);
        const newUrl = new URL(this._walletBaseUrl + $12ad050bcc8411aa$var$LOGIN_WALLET_URL_SUFFIX);
        newUrl.searchParams.set('success_url', options.successUrl || currentUrl.href);
        newUrl.searchParams.set('failure_url', options.failureUrl || currentUrl.href);
        if (options.contractId) {
            /* Throws exception if contract account does not exist */ const contractAccount = await this._near.account(options.contractId);
            await contractAccount.state();
            newUrl.searchParams.set('contract_id', options.contractId);
            const accessKey = $6JjgF.KeyPair.fromRandom('ed25519');
            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());
            await this._keyStore.setKey(this._networkId, $12ad050bcc8411aa$var$PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);
        }
        if (options.methodNames) options.methodNames.forEach((methodName)=>{
            newUrl.searchParams.append('methodNames', methodName);
        });
        window.location.assign(newUrl.toString());
    }
    async requestSignTransactions(...args) {
        if (Array.isArray(args[0])) {
            const deprecate = $12ad050bcc8411aa$var$depd_1.default('WalletConnection.requestSignTransactions(transactions, callbackUrl, meta)');
            deprecate('use `WalletConnection.requestSignTransactions(RequestSignTransactionsOptions)` instead');
            return this._requestSignTransactions({
                transactions: args[0],
                callbackUrl: args[1],
                meta: args[2]
            });
        }
        return this._requestSignTransactions(args[0]);
    }
    async _requestSignTransactions({ transactions: transactions , meta: meta , callbackUrl: callbackUrl  }) {
        const currentUrl = new URL(window.location.href);
        const newUrl = new URL('sign', this._walletBaseUrl);
        newUrl.searchParams.set('transactions', transactions.map((transaction)=>$6CyfS.serialize($7Z5VI.SCHEMA, transaction)
        ).map((serialized)=>$12ad050bcc8411aa$require$Buffer.from(serialized).toString('base64')
        ).join(','));
        newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);
        if (meta) newUrl.searchParams.set('meta', meta);
        window.location.assign(newUrl.toString());
    }
    /**
     * @hidden
     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.
     */ async _completeSignInWithAccessKey() {
        const currentUrl = new URL(window.location.href);
        const publicKey = currentUrl.searchParams.get('public_key') || '';
        const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');
        const accountId = currentUrl.searchParams.get('account_id') || '';
        // TODO: Handle errors during login
        if (accountId) {
            this._authData = {
                accountId: accountId,
                allKeys: allKeys
            };
            window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));
            if (publicKey) await this._moveKeyFromTempToPermanent(accountId, publicKey);
        }
        currentUrl.searchParams.delete('public_key');
        currentUrl.searchParams.delete('all_keys');
        currentUrl.searchParams.delete('account_id');
        window.history.replaceState({
        }, document.title, currentUrl.toString());
    }
    /**
     * @hidden
     * @param accountId The NEAR account owning the given public key
     * @param publicKey The public key being set to the key store
     */ async _moveKeyFromTempToPermanent(accountId, publicKey) {
        const keyPair = await this._keyStore.getKey(this._networkId, $12ad050bcc8411aa$var$PENDING_ACCESS_KEY_PREFIX + publicKey);
        await this._keyStore.setKey(this._networkId, accountId, keyPair);
        await this._keyStore.removeKey(this._networkId, $12ad050bcc8411aa$var$PENDING_ACCESS_KEY_PREFIX + publicKey);
    }
    /**
     * Sign out from the current account
     * @example
     * walletAccount.signOut();
     */ signOut() {
        this._authData = {
        };
        window.localStorage.removeItem(this._authDataKey);
    }
    /**
     * Returns the current connected wallet account
     */ account() {
        if (!this._connectedAccount) this._connectedAccount = new $12ad050bcc8411aa$var$ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);
        return this._connectedAccount;
    }
}
module.exports.WalletConnection = $12ad050bcc8411aa$var$WalletConnection;
module.exports.WalletAccount = $12ad050bcc8411aa$var$WalletConnection;
/**
 * {@link Account} implementation which redirects to wallet using {@link WalletConnection} when no local key is available.
 */ class $12ad050bcc8411aa$var$ConnectedWalletAccount extends $gwyhm.Account {
    constructor(walletConnection, connection, accountId){
        super(connection, accountId);
        this.walletConnection = walletConnection;
    }
    // Overriding Account methods
    /**
     * Sign a transaction by redirecting to the NEAR Wallet
     * @see {@link WalletConnection.requestSignTransactions}
     */ signAndSendTransaction(...args) {
        if (typeof args[0] === 'string') return this._signAndSendTransaction({
            receiverId: args[0],
            actions: args[1]
        });
        return this._signAndSendTransaction(args[0]);
    }
    async _signAndSendTransaction({ receiverId: receiverId , actions: actions , walletMeta: walletMeta , walletCallbackUrl: walletCallbackUrl = window.location.href  }) {
        const localKey = await this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);
        let accessKey = await this.accessKeyForTransaction(receiverId, actions, localKey);
        if (!accessKey) throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);
        if (localKey && localKey.toString() === accessKey.public_key) try {
            return await super.signAndSendTransaction({
                receiverId: receiverId,
                actions: actions
            });
        } catch (e) {
            if (e.type === 'NotEnoughAllowance') accessKey = await this.accessKeyForTransaction(receiverId, actions);
            else throw e;
        }
        const block = await this.connection.provider.block({
            finality: 'final'
        });
        const blockHash = $6CyfS.baseDecode(block.header.hash);
        const publicKey = $6JjgF.PublicKey.from(accessKey.public_key);
        // TODO: Cache & listen for nonce updates for given access key
        const nonce = accessKey.access_key.nonce + 1;
        const transaction = $7Z5VI.createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);
        await this.walletConnection.requestSignTransactions({
            transactions: [
                transaction
            ],
            meta: walletMeta,
            callbackUrl: walletCallbackUrl
        });
        return new Promise((resolve, reject)=>{
            setTimeout(()=>{
                reject(new Error('Failed to redirect to sign transaction'));
            }, 1000);
        });
    // TODO: Aggregate multiple transaction request with "debounce".
    // TODO: Introduce TrasactionQueue which also can be used to watch for status?
    }
    /**
     * Check if given access key allows the function call or method attempted in transaction
     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items
     * @param receiverId The NEAR account attempting to have access
     * @param actions The action(s) needed to be checked for access
     */ async accessKeyMatchesTransaction(accessKey, receiverId, actions) {
        const { access_key: { permission: permission  }  } = accessKey;
        if (permission === 'FullAccess') return true;
        if (permission.FunctionCall) {
            const { receiver_id: allowedReceiverId , method_names: allowedMethods  } = permission.FunctionCall;
            /********************************
            Accept multisig access keys and let wallets attempt to signAndSendTransaction
            If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153
            ********************************/ if (allowedReceiverId === this.accountId && allowedMethods.includes($12ad050bcc8411aa$var$MULTISIG_HAS_METHOD)) return true;
            if (allowedReceiverId === receiverId) {
                if (actions.length !== 1) return false;
                const [{ functionCall: functionCall  }] = actions;
                return functionCall && (!functionCall.deposit || functionCall.deposit.toString() === '0') && (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));
            // TODO: Handle cases when allowance doesn't have enough to pay for gas
            }
        }
        // TODO: Support other permissions than FunctionCall
        return false;
    }
    /**
     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission
     * @param receiverId The NEAR account seeking the access key for a transaction
     * @param actions The action(s) sought to gain access to
     * @param localKey A local public key provided to check for access
     * @returns Promise<any>
     */ async accessKeyForTransaction(receiverId, actions, localKey) {
        const accessKeys = await this.getAccessKeys();
        if (localKey) {
            const accessKey = accessKeys.find((key)=>key.public_key.toString() === localKey.toString()
            );
            if (accessKey && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) return accessKey;
        }
        const walletKeys = this.walletConnection._authData.allKeys;
        for (const accessKey of accessKeys){
            if (walletKeys.indexOf(accessKey.public_key) !== -1 && await this.accessKeyMatchesTransaction(accessKey, receiverId, actions)) return accessKey;
        }
        return null;
    }
}
module.exports.ConnectedWalletAccount = $12ad050bcc8411aa$var$ConnectedWalletAccount;

});



$eed45acf6a4b99e3$var$__exportStar((parcelRequire("54fqz")), $eed45acf6a4b99e3$exports);
parcelRequire.register("TkCqU", function(module, exports) {
"use strict";
Object.defineProperty(module.exports, "__esModule", {
    value: true
});
module.exports.connect = void 0;

var $9MD2d = parcelRequire("9MD2d");
/**
 * Initialize connection to Near network.
 */ async function $0a6521a6810328b6$var$connect(config) {
    return new $9MD2d.Near(config);
}
module.exports.connect = $0a6521a6810328b6$var$connect;

});


$eed45acf6a4b99e3$var$__exportStar((parcelRequire("TkCqU")), $eed45acf6a4b99e3$exports);
var $e41970959b254257$exports = {};
parcelRequire.register("auSAY", function(module, exports) {
parcelRequire("6X8Tn");

var $bcAWS = parcelRequire("bcAWS");
var $7a470e38df4125ae$var$polyfill;



if ($bcAWS("Error.captureStackTrace")) $7a470e38df4125ae$var$polyfill = (parcelRequire("6Q8sz"));
else if ($bcAWS("Error.prototype.stack")) $7a470e38df4125ae$var$polyfill = (parcelRequire("a8ACK"));
else $7a470e38df4125ae$var$polyfill = (parcelRequire("lKSCd"));
module.exports = $7a470e38df4125ae$var$polyfill();

});
parcelRequire.register("6X8Tn", function(module, exports) {

(parcelRequire("bcAWS")).check("es5");

});
parcelRequire.register("bcAWS", function(module, exports) {
parcelRequire("jatF8");

module.exports = (parcelRequire("3cboN"));

});
parcelRequire.register("jatF8", function(module, exports) {

var $3cboN = parcelRequire("3cboN");
var $df45f5d6df502988$var$define = $3cboN.define, $df45f5d6df502988$var$test = $3cboN.test;
$df45f5d6df502988$var$define("strict mode", function() {
    return this === undefined;
});
$df45f5d6df502988$var$define("arguments.callee.caller", function() {
    try {
        return (function() {
            return arguments.callee.caller;
        })() === arguments.callee;
    } catch (strictModeIsEnforced) {
        return false;
    }
});
$df45f5d6df502988$var$define("es5", function() {
    return $df45f5d6df502988$var$test("Array.prototype.forEach") && $df45f5d6df502988$var$test("Array.prototype.map") && $df45f5d6df502988$var$test("Function.prototype.bind") && $df45f5d6df502988$var$test("Object.create") && $df45f5d6df502988$var$test("Object.defineProperties") && $df45f5d6df502988$var$test("Object.defineProperty") && $df45f5d6df502988$var$test("Object.prototype.hasOwnProperty");
});
$df45f5d6df502988$var$define("Array.prototype.forEach", function() {
    return Array.prototype.forEach;
});
$df45f5d6df502988$var$define("Array.prototype.map", function() {
    return Array.prototype.map;
});
$df45f5d6df502988$var$define("Function.prototype.bind", function() {
    return Function.prototype.bind;
});
$df45f5d6df502988$var$define("Object.create", function() {
    return Object.create;
});
$df45f5d6df502988$var$define("Object.defineProperties", function() {
    return Object.defineProperties;
});
$df45f5d6df502988$var$define("Object.defineProperty", function() {
    return Object.defineProperty;
});
$df45f5d6df502988$var$define("Object.prototype.hasOwnProperty", function() {
    return Object.prototype.hasOwnProperty;
});
$df45f5d6df502988$var$define("Error.captureStackTrace", function() {
    return Error.captureStackTrace;
});
$df45f5d6df502988$var$define("Error.prototype.stack", function() {
    try {
        throw new Error();
    } catch (e) {
        return e.stack || e.stacktrace;
    }
});

});
parcelRequire.register("3cboN", function(module, exports) {

var $3lsm2 = parcelRequire("3lsm2");
var $253b55a957f2c2b7$var$detector = new $3lsm2();
var $253b55a957f2c2b7$var$capability = function(name) {
    return $253b55a957f2c2b7$var$detector.test(name);
};
$253b55a957f2c2b7$var$capability.define = function(name, test) {
    $253b55a957f2c2b7$var$detector.define(name, test);
};
$253b55a957f2c2b7$var$capability.check = function(name) {
    $253b55a957f2c2b7$var$detector.check(name);
};
$253b55a957f2c2b7$var$capability.test = $253b55a957f2c2b7$var$capability;
module.exports = $253b55a957f2c2b7$var$capability;

});
parcelRequire.register("3lsm2", function(module, exports) {
var $26f953db5a7d6d2e$var$CapabilityDetector = function() {
    this.tests = {
    };
    this.cache = {
    };
};
$26f953db5a7d6d2e$var$CapabilityDetector.prototype = {
    constructor: $26f953db5a7d6d2e$var$CapabilityDetector,
    define: function(name, test) {
        if (typeof name != "string" || !(test instanceof Function)) throw new Error("Invalid capability definition.");
        if (this.tests[name]) throw new Error('Duplicated capability definition by "' + name + '".');
        this.tests[name] = test;
    },
    check: function(name) {
        if (!this.test(name)) throw new Error('The current environment does not support "' + name + '", therefore we cannot continue.');
    },
    test: function(name) {
        if (this.cache[name] !== undefined) return this.cache[name];
        if (!this.tests[name]) throw new Error('Unknown capability with name "' + name + '".');
        var test = this.tests[name];
        this.cache[name] = !!test();
        return this.cache[name];
    }
};
module.exports = $26f953db5a7d6d2e$var$CapabilityDetector;

});





parcelRequire.register("6Q8sz", function(module, exports) {

var $jOJk6 = parcelRequire("jOJk6");
module.exports = function() {
    Error.getStackTrace = function(throwable) {
        return throwable.stack;
    };
    return {
        prepareStackTrace: $jOJk6
    };
};

});
parcelRequire.register("jOJk6", function(module, exports) {
var $e6d5d81025e2ef00$var$prepareStackTrace = function(throwable, frames, warnings) {
    var string = "";
    string += throwable.name || "Error";
    string += ": " + (throwable.message || "");
    if (warnings instanceof Array) for(var warningIndex in warnings){
        var warning = warnings[warningIndex];
        string += "\n   # " + warning;
    }
    for(var frameIndex in frames){
        var frame = frames[frameIndex];
        string += "\n   at " + frame.toString();
    }
    return string;
};
module.exports = $e6d5d81025e2ef00$var$prepareStackTrace;

});


parcelRequire.register("a8ACK", function(module, exports) {

var $hY7jk = parcelRequire("hY7jk");

var $kY0r6 = parcelRequire("kY0r6");

var $3NDCO = parcelRequire("3NDCO");
var $76170f847d8d8112$require$cache = $3NDCO.cache;

var $jOJk6 = parcelRequire("jOJk6");
module.exports = function() {
    Error.captureStackTrace = function captureStackTrace(throwable, terminator) {
        var warnings;
        var frameShifts = [
            captureStackTrace
        ];
        if (terminator) // additional frames can come here if arguments.callee.caller is supported
        // otherwise it is hard to identify the terminator
        frameShifts.push(terminator);
        var captured = $hY7jk.getInstance().captureFrameStrings(frameShifts);
        Object.defineProperties(throwable, {
            stack: {
                configurable: true,
                get: $76170f847d8d8112$require$cache(function() {
                    var frames = $kY0r6.getInstance().getFrames(captured.frameStrings, captured.functionValues);
                    return (Error.prepareStackTrace || $jOJk6)(throwable, frames, warnings);
                })
            },
            cachedStack: {
                configurable: true,
                writable: true,
                enumerable: false,
                value: true
            }
        });
    };
    Error.getStackTrace = function(throwable) {
        if (throwable.cachedStack) return throwable.stack;
        var frameStrings = $hY7jk.getInstance().getFrameStrings(throwable), frames = [], warnings;
        if (frameStrings) frames = $kY0r6.getInstance().getFrames(frameStrings, []);
        else warnings = [
            "The stack is not readable by unthrown errors in this environment."
        ];
        var stack = (Error.prepareStackTrace || $jOJk6)(throwable, frames, warnings);
        if (frameStrings) try {
            Object.defineProperties(throwable, {
                stack: {
                    configurable: true,
                    writable: true,
                    enumerable: false,
                    value: stack
                },
                cachedStack: {
                    configurable: true,
                    writable: true,
                    enumerable: false,
                    value: true
                }
            });
        } catch (nonConfigurableError) {
        }
        return stack;
    };
    return {
        prepareStackTrace: $jOJk6
    };
};

});
parcelRequire.register("hY7jk", function(module, exports) {

var $hpyIO = parcelRequire("hpyIO");
var $d14db60bcba2ca4c$require$Class = $hpyIO.Class;

var $hpyIO = parcelRequire("hpyIO");
var $d14db60bcba2ca4c$require$abstractMethod = $hpyIO.abstractMethod;

var $3NDCO = parcelRequire("3NDCO");
var $d14db60bcba2ca4c$require$eachCombination = $3NDCO.eachCombination;

var $3NDCO = parcelRequire("3NDCO");
var $d14db60bcba2ca4c$require$cache = $3NDCO.cache;

var $bcAWS = parcelRequire("bcAWS");
var $d14db60bcba2ca4c$var$AbstractFrameStringSource = $d14db60bcba2ca4c$require$Class(Object, {
    prototype: {
        captureFrameStrings: function(frameShifts) {
            var error = this.createError();
            frameShifts.unshift(this.captureFrameStrings);
            frameShifts.unshift(this.createError);
            var capturedFrameStrings = this.getFrameStrings(error);
            var frameStrings = capturedFrameStrings.slice(frameShifts.length), functionValues = [];
            if ($bcAWS("arguments.callee.caller")) {
                var capturedFunctionValues = [
                    this.createError,
                    this.captureFrameStrings
                ];
                try {
                    var aCaller = arguments.callee;
                    while(aCaller = aCaller.caller)capturedFunctionValues.push(aCaller);
                } catch (useStrictError) {
                }
                functionValues = capturedFunctionValues.slice(frameShifts.length);
            }
            return {
                frameStrings: frameStrings,
                functionValues: functionValues
            };
        },
        getFrameStrings: function(error) {
            var message = error.message || "";
            var name = error.name || "";
            var stackString = this.getStackString(error);
            if (stackString === undefined) return;
            var stackStringChunks = stackString.split("\n");
            var fromPosition = 0;
            var toPosition = stackStringChunks.length;
            if (this.hasHeader) fromPosition += name.split("\n").length + message.split("\n").length - 1;
            if (this.hasFooter) toPosition -= 1;
            return stackStringChunks.slice(fromPosition, toPosition);
        },
        createError: $d14db60bcba2ca4c$require$abstractMethod,
        getStackString: $d14db60bcba2ca4c$require$abstractMethod,
        hasHeader: undefined,
        hasFooter: undefined
    }
});
var $d14db60bcba2ca4c$var$FrameStringSourceCalibrator = $d14db60bcba2ca4c$require$Class(Object, {
    prototype: {
        calibrateClass: function(FrameStringSource) {
            return this.calibrateMethods(FrameStringSource) && this.calibrateEnvelope(FrameStringSource);
        },
        calibrateMethods: function(FrameStringSource) {
            try {
                $d14db60bcba2ca4c$require$eachCombination([
                    [
                        function(message) {
                            return new Error(message);
                        },
                        function(message) {
                            try {
                                throw new Error(message);
                            } catch (error) {
                                return error;
                            }
                        }
                    ],
                    [
                        function(error) {
                            return error.stack;
                        },
                        function(error) {
                            return error.stacktrace;
                        }
                    ]
                ], function(createError, getStackString) {
                    if (getStackString(createError())) throw {
                        getStackString: getStackString,
                        createError: createError
                    };
                });
            } catch (workingImplementation) {
                $d14db60bcba2ca4c$require$Class.merge.call(FrameStringSource, {
                    prototype: workingImplementation
                });
                return true;
            }
            return false;
        },
        calibrateEnvelope: function(FrameStringSource) {
            var getStackString = FrameStringSource.prototype.getStackString;
            var createError = FrameStringSource.prototype.createError;
            var calibratorStackString = getStackString(createError("marker"));
            var calibratorFrameStrings = calibratorStackString.split("\n");
            $d14db60bcba2ca4c$require$Class.merge.call(FrameStringSource, {
                prototype: {
                    hasHeader: /marker/.test(calibratorFrameStrings[0]),
                    hasFooter: calibratorFrameStrings[calibratorFrameStrings.length - 1] === ""
                }
            });
            return true;
        }
    }
});
module.exports = {
    getClass: $d14db60bcba2ca4c$require$cache(function() {
        var FrameStringSource;
        if (FrameStringSource) return FrameStringSource;
        FrameStringSource = $d14db60bcba2ca4c$require$Class($d14db60bcba2ca4c$var$AbstractFrameStringSource, {
        });
        var calibrator = new $d14db60bcba2ca4c$var$FrameStringSourceCalibrator();
        if (!calibrator.calibrateClass(FrameStringSource)) throw new Error("Cannot read Error.prototype.stack in this environment.");
        return FrameStringSource;
    }),
    getInstance: $d14db60bcba2ca4c$require$cache(function() {
        var FrameStringSource = this.getClass();
        var instance = new FrameStringSource();
        return instance;
    })
};

});
parcelRequire.register("hpyIO", function(module, exports) {
parcelRequire("6X8Tn");

module.exports = (parcelRequire("cmNu5"));

});
parcelRequire.register("cmNu5", function(module, exports) {


module.exports = {
    Class: (parcelRequire("8Kb7k")),
    abstractMethod: (parcelRequire("2AKwN"))
};

});
parcelRequire.register("8Kb7k", function(module, exports) {
var $65db3e41996a1cbf$var$Class = function() {
    var options = Object.create({
        Source: Object,
        config: {
        },
        buildArgs: []
    });
    function checkOption(option) {
        var key = "config";
        if (option instanceof Function) key = "Source";
        else if (option instanceof Array) key = "buildArgs";
        else if (option instanceof Object) key = "config";
        else throw new Error("Invalid configuration option.");
        if (options.hasOwnProperty(key)) throw new Error("Duplicated configuration option: " + key + ".");
        options[key] = option;
    }
    for(var index = 0, length = arguments.length; index < length; ++index)checkOption(arguments[index]);
    var Source = options.Source, config = options.config, buildArgs = options.buildArgs;
    return (Source.extend || $65db3e41996a1cbf$var$Class.extend).call(Source, config, buildArgs);
};
$65db3e41996a1cbf$var$Class.factory = function() {
    var Source = this;
    return function() {
        var instance = this;
        if (instance.build instanceof Function) instance.build.apply(instance, arguments);
        if (instance.init instanceof Function) instance.init.apply(instance, arguments);
    };
};
$65db3e41996a1cbf$var$Class.extend = function(config, buildArgs) {
    var Source = this;
    if (!config) config = {
    };
    var Subject;
    if (config.prototype instanceof Object && config.prototype.constructor !== Object) Subject = config.prototype.constructor;
    else if (config.factory instanceof Function) Subject = config.factory.call(Source);
    Subject = (Source.clone || $65db3e41996a1cbf$var$Class.clone).call(Source, Subject, buildArgs);
    (Subject.merge || $65db3e41996a1cbf$var$Class.merge).call(Subject, config);
    return Subject;
};
$65db3e41996a1cbf$var$Class.prototype.extend = function(config, buildArgs) {
    var subject = this;
    var instance = (subject.clone || $65db3e41996a1cbf$var$Class.prototype.clone).apply(subject, buildArgs);
    (instance.merge || $65db3e41996a1cbf$var$Class.prototype.merge).call(instance, config);
    return instance;
};
$65db3e41996a1cbf$var$Class.clone = function(Subject, buildArgs) {
    var Source = this;
    if (!(Subject instanceof Function)) Subject = (Source.factory || $65db3e41996a1cbf$var$Class.factory).call(Source);
    Subject.prototype = (Source.prototype.clone || $65db3e41996a1cbf$var$Class.prototype.clone).apply(Source.prototype, buildArgs || []);
    Subject.prototype.constructor = Subject;
    for(var staticProperty in Source)if (staticProperty !== "prototype") Subject[staticProperty] = Source[staticProperty];
    return Subject;
};
$65db3e41996a1cbf$var$Class.prototype.clone = function() {
    var subject = this;
    var instance = Object.create(subject);
    if (instance.build instanceof Function) instance.build.apply(instance, arguments);
    return instance;
};
$65db3e41996a1cbf$var$Class.merge = function(config) {
    var Subject = this;
    for(var staticProperty in config)if (staticProperty !== "prototype") Subject[staticProperty] = config[staticProperty];
    if (config.prototype instanceof Object) (Subject.prototype.merge || $65db3e41996a1cbf$var$Class.prototype.merge).call(Subject.prototype, config.prototype);
    return Subject;
};
$65db3e41996a1cbf$var$Class.prototype.merge = function(config) {
    var subject = this;
    for(var property in config)if (property !== "constructor") subject[property] = config[property];
    return subject;
};
$65db3e41996a1cbf$var$Class.absorb = function(config) {
    var Subject = this;
    for(var staticProperty in config)if (staticProperty !== "prototype" && (Subject[staticProperty] === undefined || Subject[staticProperty] === Function.prototype[staticProperty])) Subject[staticProperty] = config[staticProperty];
    if (config.prototype instanceof Object) (Subject.prototype.absorb || $65db3e41996a1cbf$var$Class.prototype.absorb).call(Subject.prototype, config.prototype);
    return Subject;
};
$65db3e41996a1cbf$var$Class.prototype.absorb = function(config) {
    var subject = this;
    for(var property in config)if (property !== "constructor" && (subject[property] === undefined || subject[property] === Object.prototype[property])) subject[property] = config[property];
    return subject;
};
$65db3e41996a1cbf$var$Class.getAncestor = function() {
    var Source = this;
    if (Source !== Source.prototype.constructor) return Source.prototype.constructor;
};
$65db3e41996a1cbf$var$Class.newInstance = function() {
    var Subject = this;
    var instance = Object.create(this.prototype);
    Subject.apply(instance, arguments);
    return instance;
};
module.exports = $65db3e41996a1cbf$var$Class;

});

parcelRequire.register("2AKwN", function(module, exports) {
module.exports = function() {
    throw new Error("Not implemented.");
};

});



parcelRequire.register("3NDCO", function(module, exports) {

module.exports = (parcelRequire("6QSMP"));

});
parcelRequire.register("6QSMP", function(module, exports) {


module.exports = {
    cache: (parcelRequire("7ZxRV")),
    eachCombination: (parcelRequire("1YuIW"))
};

});
parcelRequire.register("7ZxRV", function(module, exports) {
var $5d18808e3d437452$var$cache = function(fn) {
    var called = false, store;
    if (!(fn instanceof Function)) {
        called = true;
        store = fn;
        fn = null;
    }
    return function() {
        if (!called) {
            called = true;
            store = fn.apply(this, arguments);
            fn = null;
        }
        return store;
    };
};
module.exports = $5d18808e3d437452$var$cache;

});

parcelRequire.register("1YuIW", function(module, exports) {
module.exports = function eachCombination(alternativesByDimension, callback, combination) {
    if (!combination) combination = [];
    if (combination.length < alternativesByDimension.length) {
        var alternatives = alternativesByDimension[combination.length];
        for(var index in alternatives){
            combination[combination.length] = alternatives[index];
            eachCombination(alternativesByDimension, callback, combination);
            --combination.length;
        }
    } else callback.apply(null, combination);
};

});




parcelRequire.register("kY0r6", function(module, exports) {

var $hpyIO = parcelRequire("hpyIO");
var $f439bfdae740bbfe$require$Class = $hpyIO.Class;

var $cJW8q = parcelRequire("cJW8q");

var $3NDCO = parcelRequire("3NDCO");
var $f439bfdae740bbfe$require$cache = $3NDCO.cache;
var $f439bfdae740bbfe$var$FrameStringParser = $f439bfdae740bbfe$require$Class(Object, {
    prototype: {
        stackParser: null,
        frameParser: null,
        locationParsers: null,
        constructor: function(options) {
            $f439bfdae740bbfe$require$Class.prototype.merge.call(this, options);
        },
        getFrames: function(frameStrings, functionValues) {
            var frames = [];
            for(var index = 0, length = frameStrings.length; index < length; ++index)frames[index] = this.getFrame(frameStrings[index], functionValues[index]);
            return frames;
        },
        getFrame: function(frameString, functionValue) {
            var config = {
                frameString: frameString,
                functionValue: functionValue
            };
            return new $cJW8q(config);
        }
    }
});
module.exports = {
    getClass: $f439bfdae740bbfe$require$cache(function() {
        return $f439bfdae740bbfe$var$FrameStringParser;
    }),
    getInstance: $f439bfdae740bbfe$require$cache(function() {
        var FrameStringParser = this.getClass();
        var instance = new FrameStringParser();
        return instance;
    })
};

});
parcelRequire.register("cJW8q", function(module, exports) {

var $hpyIO = parcelRequire("hpyIO");
var $9466c860ee0dcbed$require$Class = $hpyIO.Class;

var $hpyIO = parcelRequire("hpyIO");
var $9466c860ee0dcbed$require$abstractMethod = $hpyIO.abstractMethod;
var $9466c860ee0dcbed$var$Frame = $9466c860ee0dcbed$require$Class(Object, {
    prototype: {
        init: $9466c860ee0dcbed$require$Class.prototype.merge,
        frameString: undefined,
        toString: function() {
            return this.frameString;
        },
        functionValue: undefined,
        getThis: $9466c860ee0dcbed$require$abstractMethod,
        getTypeName: $9466c860ee0dcbed$require$abstractMethod,
        getFunction: function() {
            return this.functionValue;
        },
        getFunctionName: $9466c860ee0dcbed$require$abstractMethod,
        getMethodName: $9466c860ee0dcbed$require$abstractMethod,
        getFileName: $9466c860ee0dcbed$require$abstractMethod,
        getLineNumber: $9466c860ee0dcbed$require$abstractMethod,
        getColumnNumber: $9466c860ee0dcbed$require$abstractMethod,
        getEvalOrigin: $9466c860ee0dcbed$require$abstractMethod,
        isTopLevel: $9466c860ee0dcbed$require$abstractMethod,
        isEval: $9466c860ee0dcbed$require$abstractMethod,
        isNative: $9466c860ee0dcbed$require$abstractMethod,
        isConstructor: $9466c860ee0dcbed$require$abstractMethod
    }
});
module.exports = $9466c860ee0dcbed$var$Frame;

});



parcelRequire.register("lKSCd", function(module, exports) {

var $3NDCO = parcelRequire("3NDCO");
var $fd684253d1e91109$require$cache = $3NDCO.cache;

var $jOJk6 = parcelRequire("jOJk6");
module.exports = function() {
    Error.captureStackTrace = function(throwable, terminator) {
        Object.defineProperties(throwable, {
            stack: {
                configurable: true,
                get: $fd684253d1e91109$require$cache(function() {
                    return (Error.prepareStackTrace || $jOJk6)(throwable, []);
                })
            },
            cachedStack: {
                configurable: true,
                writable: true,
                enumerable: false,
                value: true
            }
        });
    };
    Error.getStackTrace = function(throwable) {
        if (throwable.cachedStack) return throwable.stack;
        var stack = (Error.prepareStackTrace || $jOJk6)(throwable, []);
        try {
            Object.defineProperties(throwable, {
                stack: {
                    configurable: true,
                    writable: true,
                    enumerable: false,
                    value: stack
                },
                cachedStack: {
                    configurable: true,
                    writable: true,
                    enumerable: false,
                    value: true
                }
            });
        } catch (nonConfigurableError) {
        }
        return stack;
    };
    return {
        prepareStackTrace: $jOJk6
    };
};

});



$e41970959b254257$exports = (parcelRequire("auSAY"));




const $2bad41ff5d606875$export$7eb84799c931fe91 = (k, d = {
})=>{
    let v = localStorage.getItem(k);
    if (typeof d !== 'object') return v;
    try {
        return JSON.parse(v || JSON.stringify(d));
    } catch (e) {
        return v;
    }
};
const $2bad41ff5d606875$export$77f8d2fc923b14e3 = (k, v)=>localStorage.setItem(k, typeof v === 'string' ? v : JSON.stringify(v))
;
const $2bad41ff5d606875$export$45a0724300749e67 = (k)=>localStorage.removeItem(k)
;




var $3bd9a49ae04a48f2$require$Buffer = $2c3d64c621547c03$export$74954538e33d2f49;
const { GAS: $3bd9a49ae04a48f2$export$6524288a10693741 , networkId: $3bd9a49ae04a48f2$export$8467e494e9f29b84 , nodeUrl: $3bd9a49ae04a48f2$export$95db625c01b5a436 , walletUrl: $3bd9a49ae04a48f2$export$2d0db0b153519770 , nameSuffix: $3bd9a49ae04a48f2$export$cc6691edcaed75d7 , contractName: $3bd9a49ae04a48f2$export$28ab4f5e2751bba0 , contractMethods: $3bd9a49ae04a48f2$export$70128423cf450601  } = (/*@__PURE__*/$parcel$interopDefault($1d6eb0f4506d516f$exports))('testnet');
const $3bd9a49ae04a48f2$export$26e127ad90ece907 = async (account, key)=>{
    const { accountId: accountId  } = account;
    const block = await account.connection.provider.block({
        finality: 'final'
    });
    const blockNumber = block.header.height.toString();
    const signer = account.inMemorySigner || account.connection.signer;
    const signed = await signer.signMessage($3bd9a49ae04a48f2$require$Buffer.from(blockNumber), accountId, $3bd9a49ae04a48f2$export$8467e494e9f29b84);
    const blockNumberSignature = $3bd9a49ae04a48f2$require$Buffer.from(signed.signature).toString('base64');
    return {
        blockNumber: blockNumber,
        blockNumberSignature: blockNumberSignature
    };
};
const $3bd9a49ae04a48f2$export$a0fe1123f9ed413c = async (account, contractId, body)=>{
    console.log(account, contractId, body);
    return {
        ...body,
        accountId: account.accountId,
        contractId: contractId,
        ...await $3bd9a49ae04a48f2$export$26e127ad90ece907(account)
    };
};
const $3bd9a49ae04a48f2$export$162c2285c5d6555d = ({ url: url , method: method , body: body  })=>{
    const accessToken = $2bad41ff5d606875$export$7eb84799c931fe91('accessToken', null);
    if (!accessToken) return;
    return $3bd9a49ae04a48f2$export$e9ae7d5904da977e({
        url: url + '?accessToken=' + accessToken,
        method: method,
        body: body
    });
};
const $3bd9a49ae04a48f2$export$e9ae7d5904da977e = ({ url: url , method: method = 'GET' , body: body = {
}  })=>fetch($0dd9b89baba6b3ad$export$195bacc64738e867 + url, {
        method: method,
        headers: new Headers({
            'content-type': 'application/json'
        }),
        body: method === 'POST' ? JSON.stringify(body) : undefined
    }).then(async (res)=>{
        const { ok: ok , status: status  } = res;
        if (!ok) {
            let error = await res.text();
            try {
                error = JSON.parse(error);
            } catch (e) {
                console.warn(e);
            }
            throw {
                status: status,
                error: error
            };
        }
        if (status === 204) return null;
        return await res.json();
    })
;



// example
const $0dd9b89baba6b3ad$var$initialState = {
    app: {
        user: null,
        dialog: null,
        loading: true,
        mounted: false,
        clicked: false,
        event: {
        }
    },
    item: null,
    near: {
    }
};
const $0dd9b89baba6b3ad$export$195bacc64738e867 = 'https://near-api-satori.near.workers.dev/v1';
const $0dd9b89baba6b3ad$export$d78e5ff9a821db74 = $0dd9b89baba6b3ad$export$195bacc64738e867 + '/ipfs/';
const $0dd9b89baba6b3ad$export$b1d6d4d0ada7f373 = undefined;
const $0dd9b89baba6b3ad$export$ba0a4679c20cc02c = '__CALLBACK_ID';
const { appStore: $0dd9b89baba6b3ad$export$cceeb3b33cbfc293 , AppProvider: $0dd9b89baba6b3ad$export$a1942a4e81210c61  } = $6c9985528be6e21a$export$9a41e7f313711121($0dd9b89baba6b3ad$var$initialState, 'app');
const $0dd9b89baba6b3ad$export$22b8d566c072d9e8 = (code)=>async ({ update: update , getState: getState , dispatch: dispatch  })=>{
        /// TODO should we throw this in a post with body call so logs don't scoop it?
        const res = await $3bd9a49ae04a48f2$export$e9ae7d5904da977e({
            url: `/claim/${code}/get`
        });
        update('item', res);
        return res;
    }
;
const $0dd9b89baba6b3ad$export$8d609ae8d9df9580 = ({ path: path , args: args , pathArgs: pathArgs  })=>async ({ update: update , getState: getState , dispatch: dispatch  })=>{
        let { accessToken: accessToken  } = args;
        if (accessToken && accessToken.length) {
            $2bad41ff5d606875$export$77f8d2fc923b14e3('accessToken', accessToken);
            // history.push(path)
            window.location.href = window.location.origin + '/#/r/' + $2bad41ff5d606875$export$7eb84799c931fe91($0dd9b89baba6b3ad$export$ba0a4679c20cc02c);
            window.location.reload();
        }
        if (!accessToken) accessToken = $2bad41ff5d606875$export$7eb84799c931fe91('accessToken', null);
        let user;
        if (accessToken) {
            const res = await $3bd9a49ae04a48f2$export$162c2285c5d6555d({
                url: '/profile'
            });
            user = res.user;
        }
        update('app', {
            user: user,
            loading: false
        });
    }
;
const $0dd9b89baba6b3ad$export$608ff948b201cb3c = (id)=>async ({ update: update  })=>{
        let event = await $3bd9a49ae04a48f2$export$e9ae7d5904da977e({
            url: '/event/' + id
        });
        if (!event) event = {
        };
        update('app', {
            event: event
        });
    }
;
const $0dd9b89baba6b3ad$export$77f6294e9b7e6816 = (dialog)=>async ({ update: update  })=>{
        return new Promise((resolve, reject)=>{
            dialog.resolve = async (res)=>{
                resolve(res);
                update('app', {
                    dialog: null
                });
            };
            dialog.reject = async ()=>{
                // reject('closed by user')
                update('app', {
                    dialog: null
                });
            };
            update('app', {
                dialog: dialog
            });
        });
    }
; /// helpers



parcelRequire("gctDA");

const $26747e3dc6aa0498$export$9b1da5323aebab6a = ({ className: className = 'bg'  })=>/*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
        className: [
            "loading",
            className
        ].join(' '),
        children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
            className: "lds-loader",
            children: [
                /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                }),
                /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                }),
                /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                })
            ]
        })
    })
;



parcelRequire("gctDA");
var $1529469d73e68f31$exports = {};

$1529469d73e68f31$exports = new URL((parcelRequire("010HX")).resolve("1vayL"), import.meta.url).toString();


var $0fdaa970e307ef31$exports = {};

$0fdaa970e307ef31$exports = new URL((parcelRequire("010HX")).resolve("646C5"), import.meta.url).toString();



const $f2ff65b1c4d10ad3$export$37d11458069ee565 = ()=>{
    return(/*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("section", {
        className: "footer",
        children: [
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("img", {
                src: (/*@__PURE__*/$parcel$interopDefault($1529469d73e68f31$exports))
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("span", {
                children: "By"
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("img", {
                src: (/*@__PURE__*/$parcel$interopDefault($0fdaa970e307ef31$exports))
            })
        ]
    }));
};




var $gctDA = parcelRequire("gctDA");






const { GAS: $16278e2df873b352$export$6524288a10693741 , networkId: $16278e2df873b352$export$8467e494e9f29b84 , nodeUrl: $16278e2df873b352$export$95db625c01b5a436 , walletUrl: $16278e2df873b352$export$2d0db0b153519770 , nameSuffix: $16278e2df873b352$export$cc6691edcaed75d7 , contractId: $16278e2df873b352$export$bcc6dc58ee27361c , contractMethods: $16278e2df873b352$export$70128423cf450601  } = (/*@__PURE__*/$parcel$interopDefault($1d6eb0f4506d516f$exports))('testnet');
const { Near: $16278e2df873b352$var$Near , Account: $16278e2df873b352$var$Account , Contract: $16278e2df873b352$var$Contract , InMemorySigner: $16278e2df873b352$var$InMemorySigner ,  } = $eed45acf6a4b99e3$exports;
const $16278e2df873b352$var$near = new $16278e2df873b352$var$Near({
    networkId: $16278e2df873b352$export$8467e494e9f29b84,
    nodeUrl: $16278e2df873b352$export$95db625c01b5a436,
    walletUrl: $16278e2df873b352$export$2d0db0b153519770,
    deps: {
        keyStore: new $eed45acf6a4b99e3$exports.keyStores.BrowserLocalStorageKeyStore()
    }
});
function $16278e2df873b352$export$a05b04600834f412(accountId) {
    return new $16278e2df873b352$var$Account($16278e2df873b352$var$near.connection, accountId);
}
function $16278e2df873b352$export$841ed6b3d91f99f5(account) {
    return new $16278e2df873b352$var$Contract(account, $16278e2df873b352$export$bcc6dc58ee27361c, {
        ...$16278e2df873b352$export$70128423cf450601
    });
}
const $16278e2df873b352$export$24c21eca3154b50a = async ()=>{
    const wallet = new $eed45acf6a4b99e3$exports.WalletAccount($16278e2df873b352$var$near);
    return {
        near: $16278e2df873b352$var$near,
        wallet: wallet
    };
};
const $16278e2df873b352$export$c708d7c82fbb96a9 = (near, key)=>{
    key.toString = ()=>key.secretKey
    ;
    near.connection.signer.keyStore.setKey($16278e2df873b352$export$8467e494e9f29b84, $16278e2df873b352$export$bcc6dc58ee27361c, key);
    const account = new $16278e2df873b352$var$Account(near.connection, $16278e2df873b352$export$bcc6dc58ee27361c);
    return account;
};
const $16278e2df873b352$export$5c039078ca21abbe = async (near, accountId, publicKey)=>{
    const pubKeyStr = publicKey.toString();
    const account = new $eed45acf6a4b99e3$exports.Account(near.connection, accountId);
    try {
        const accessKeys = await account.getAccessKeys();
        if (accessKeys.length > 0 && accessKeys.find(({ public_key: public_key  })=>public_key === pubKeyStr
        )) return true;
    } catch (e) {
        console.warn(e);
    }
    return false;
};
const $16278e2df873b352$export$1d80951271e5e368 = async (accountId)=>{
    const account = new $eed45acf6a4b99e3$exports.Account($16278e2df873b352$var$near.connection, accountId);
    try {
        await account.state();
        return true;
    } catch (e) {
        if (!/does not exist/.test(e.toString())) throw e;
    }
    return false;
};
const $16278e2df873b352$export$1d4d08afa6b6c47f = async ({ keyPair: keyPair  })=>{
    const signer = await $16278e2df873b352$var$InMemorySigner.fromKeyPair($16278e2df873b352$export$8467e494e9f29b84, $16278e2df873b352$export$bcc6dc58ee27361c, keyPair);
    const near = await $eed45acf6a4b99e3$exports.connect({
        networkId: $16278e2df873b352$export$8467e494e9f29b84,
        nodeUrl: $16278e2df873b352$export$95db625c01b5a436,
        walletUrl: $16278e2df873b352$export$2d0db0b153519770,
        deps: {
            keyStore: signer.keyStore
        }
    });
    const account = new $eed45acf6a4b99e3$exports.Account(near.connection, $16278e2df873b352$export$bcc6dc58ee27361c);
    const contract = await new $eed45acf6a4b99e3$exports.Contract(account, $16278e2df873b352$export$bcc6dc58ee27361c, {
        changeMethods: [
            'send',
            'claim',
            'create_account_and_claim'
        ],
        sender: account
    });
    return {
        contract: contract
    };
};


const { GAS: $ed54bbeeac7bebcb$export$6524288a10693741 , networkId: $ed54bbeeac7bebcb$export$8467e494e9f29b84 , nodeUrl: $ed54bbeeac7bebcb$export$95db625c01b5a436 , walletUrl: $ed54bbeeac7bebcb$export$2d0db0b153519770 , nameSuffix: $ed54bbeeac7bebcb$export$cc6691edcaed75d7 , contractId: $ed54bbeeac7bebcb$export$bcc6dc58ee27361c ,  } = (/*@__PURE__*/$parcel$interopDefault($1d6eb0f4506d516f$exports))('testnet');
const { Account: $ed54bbeeac7bebcb$export$223573602aaf60d1 , utils: { format: { formatNearAmount: $ed54bbeeac7bebcb$export$6db1dfd450cf3141 , parseNearAmount: $ed54bbeeac7bebcb$export$fdd56f1b550e2522  }  }  } = $eed45acf6a4b99e3$exports;
const $ed54bbeeac7bebcb$export$3a8270e8b53ae72 = ()=>async ({ update: update , getState: getState , dispatch: dispatch  })=>{
        const { near: near , wallet: wallet  } = await $16278e2df873b352$export$24c21eca3154b50a();
        wallet.signIn = ()=>{
            console.log($ed54bbeeac7bebcb$export$bcc6dc58ee27361c);
            wallet.requestSignIn($ed54bbeeac7bebcb$export$bcc6dc58ee27361c, 'Blah Blah');
        };
        const signOut = wallet.signOut;
        wallet.signOut = ()=>{
            signOut.call(wallet);
            update('near', {
                wallet: null,
                account: null
            });
        };
        wallet.signedIn = wallet.isSignedIn();
        let account;
        if (wallet.signedIn) {
            account = wallet.account();
            wallet.balance = $ed54bbeeac7bebcb$export$6db1dfd450cf3141((await wallet.account().getAccountBalance()).available, 2);
            await update('near', {
                near: near,
                wallet: wallet,
                account: account
            });
        }
        await update('near', {
            near: near,
            wallet: wallet,
            account: account
        });
        return {
            near: near,
            wallet: wallet,
            account: account
        };
    }
;
const $ed54bbeeac7bebcb$export$7b6695599253d7ba = async (contractId, token_type_title)=>{
    const account = await $16278e2df873b352$export$a05b04600834f412(contractId);
    try {
        return await account.viewFunction(contractId, 'nft_get_type', {
            token_type_title: token_type_title
        });
    } catch (e) {
        console.warn('error getType', e);
        return null;
    }
};
const $ed54bbeeac7bebcb$export$bc2430b890fa08b9 = async (contractId, token_type_title)=>{
    const account = await $16278e2df873b352$export$a05b04600834f412(contractId);
    try {
        return await account.viewFunction(contractId, 'nft_supply_for_type', {
            token_type_title: token_type_title
        });
    } catch (e) {
        console.warn('error getTypeSupply', e);
        return 0;
    }
};



// canvas-confetti v1.4.0 built on 2021-03-10T12:32:33.488Z
var $8a2c3ff112445212$var$module = {
};
(function main(global, module, isWorker, workerSize) {
    var canUseWorker = !!(global.Worker && global.Blob && global.Promise && global.OffscreenCanvas && global.OffscreenCanvasRenderingContext2D && global.HTMLCanvasElement && global.HTMLCanvasElement.prototype.transferControlToOffscreen && global.URL && global.URL.createObjectURL);
    function noop() {
    }
    // create a promise if it exists, otherwise, just
    // call the function directly
    function promise(func) {
        var ModulePromise = module.exports.Promise;
        var Prom = ModulePromise !== void 0 ? ModulePromise : global.Promise;
        if (typeof Prom === 'function') return new Prom(func);
        func(noop, noop);
        return null;
    }
    var raf = function() {
        var TIME = Math.floor(1000 / 60);
        var frame, cancel;
        var frames = {
        };
        var lastFrameTime = 0;
        if (typeof requestAnimationFrame === 'function' && typeof cancelAnimationFrame === 'function') {
            frame = function(cb) {
                var id = Math.random();
                frames[id] = requestAnimationFrame(function onFrame(time) {
                    if (lastFrameTime === time || lastFrameTime + TIME - 1 < time) {
                        lastFrameTime = time;
                        delete frames[id];
                        cb();
                    } else frames[id] = requestAnimationFrame(onFrame);
                });
                return id;
            };
            cancel = function(id) {
                if (frames[id]) cancelAnimationFrame(frames[id]);
            };
        } else {
            frame = function(cb) {
                return setTimeout(cb, TIME);
            };
            cancel = function(timer) {
                return clearTimeout(timer);
            };
        }
        return {
            frame: frame,
            cancel: cancel
        };
    }();
    var getWorker = function() {
        var worker;
        var prom;
        var resolves = {
        };
        function decorate(worker1) {
            function execute(options, callback) {
                worker1.postMessage({
                    options: options || {
                    },
                    callback: callback
                });
            }
            worker1.init = function initWorker(canvas) {
                var offscreen = canvas.transferControlToOffscreen();
                worker1.postMessage({
                    canvas: offscreen
                }, [
                    offscreen
                ]);
            };
            worker1.fire = function fireWorker(options, size, done) {
                if (prom) {
                    execute(options, null);
                    return prom;
                }
                var id = Math.random().toString(36).slice(2);
                prom = promise(function(resolve) {
                    function workerDone(msg) {
                        if (msg.data.callback !== id) return;
                        delete resolves[id];
                        worker1.removeEventListener('message', workerDone);
                        prom = null;
                        done();
                        resolve();
                    }
                    worker1.addEventListener('message', workerDone);
                    execute(options, id);
                    resolves[id] = workerDone.bind(null, {
                        data: {
                            callback: id
                        }
                    });
                });
                return prom;
            };
            worker1.reset = function resetWorker() {
                worker1.postMessage({
                    reset: true
                });
                for(var id in resolves){
                    resolves[id]();
                    delete resolves[id];
                }
            };
        }
        return function() {
            if (worker) return worker;
            if (!isWorker && canUseWorker) {
                var code = [
                    'var CONFETTI, SIZE = {}, module = {};',
                    '(' + main.toString() + ')(this, module, true, SIZE);',
                    'onmessage = function(msg) {',
                    '  if (msg.data.options) {',
                    '    CONFETTI(msg.data.options).then(function () {',
                    '      if (msg.data.callback) {',
                    '        postMessage({ callback: msg.data.callback });',
                    '      }',
                    '    });',
                    '  } else if (msg.data.reset) {',
                    '    CONFETTI.reset();',
                    '  } else if (msg.data.resize) {',
                    '    SIZE.width = msg.data.resize.width;',
                    '    SIZE.height = msg.data.resize.height;',
                    '  } else if (msg.data.canvas) {',
                    '    SIZE.width = msg.data.canvas.width;',
                    '    SIZE.height = msg.data.canvas.height;',
                    '    CONFETTI = module.exports.create(msg.data.canvas);',
                    '  }',
                    '}', 
                ].join('\n');
                try {
                    worker = new Worker(URL.createObjectURL(new Blob([
                        code
                    ])));
                } catch (e) {
                    // eslint-disable-next-line no-console
                    typeof console.warn === 'function' && console.warn('🎊 Could not load worker', e);
                    return null;
                }
                decorate(worker);
            }
            return worker;
        };
    }();
    var defaults = {
        particleCount: 50,
        angle: 90,
        spread: 45,
        startVelocity: 45,
        decay: 0.9,
        gravity: 1,
        drift: 0,
        ticks: 200,
        x: 0.5,
        y: 0.5,
        shapes: [
            'square',
            'circle'
        ],
        zIndex: 100,
        colors: [
            '#26ccff',
            '#a25afd',
            '#ff5e7e',
            '#88ff5a',
            '#fcff42',
            '#ffa62d',
            '#ff36ff'
        ],
        // probably should be true, but back-compat
        disableForReducedMotion: false,
        scalar: 1
    };
    function convert(val, transform) {
        return transform ? transform(val) : val;
    }
    function isOk(val) {
        return !(val === null || val === undefined);
    }
    function prop(options, name, transform) {
        return convert(options && isOk(options[name]) ? options[name] : defaults[name], transform);
    }
    function onlyPositiveInt(number) {
        return number < 0 ? 0 : Math.floor(number);
    }
    function randomInt(min, max) {
        // [min, max)
        return Math.floor(Math.random() * (max - min)) + min;
    }
    function toDecimal(str) {
        return parseInt(str, 16);
    }
    function colorsToRgb(colors) {
        return colors.map(hexToRgb);
    }
    function hexToRgb(str) {
        var val = String(str).replace(/[^0-9a-f]/gi, '');
        if (val.length < 6) val = val[0] + val[0] + val[1] + val[1] + val[2] + val[2];
        return {
            r: toDecimal(val.substring(0, 2)),
            g: toDecimal(val.substring(2, 4)),
            b: toDecimal(val.substring(4, 6))
        };
    }
    function getOrigin(options) {
        var origin = prop(options, 'origin', Object);
        origin.x = prop(origin, 'x', Number);
        origin.y = prop(origin, 'y', Number);
        return origin;
    }
    function setCanvasWindowSize(canvas) {
        canvas.width = document.documentElement.clientWidth;
        canvas.height = document.documentElement.clientHeight;
    }
    function setCanvasRectSize(canvas) {
        var rect = canvas.getBoundingClientRect();
        canvas.width = rect.width;
        canvas.height = rect.height;
    }
    function getCanvas(zIndex) {
        var canvas = document.createElement('canvas');
        canvas.style.position = 'fixed';
        canvas.style.top = '0px';
        canvas.style.left = '0px';
        canvas.style.pointerEvents = 'none';
        canvas.style.zIndex = zIndex;
        return canvas;
    }
    function ellipse(context, x, y, radiusX, radiusY, rotation, startAngle, endAngle, antiClockwise) {
        context.save();
        context.translate(x, y);
        context.rotate(rotation);
        context.scale(radiusX, radiusY);
        context.arc(0, 0, 1, startAngle, endAngle, antiClockwise);
        context.restore();
    }
    function randomPhysics(opts) {
        var radAngle = opts.angle * (Math.PI / 180);
        var radSpread = opts.spread * (Math.PI / 180);
        return {
            x: opts.x,
            y: opts.y,
            wobble: Math.random() * 10,
            velocity: opts.startVelocity * 0.5 + Math.random() * opts.startVelocity,
            angle2D: -radAngle + (0.5 * radSpread - Math.random() * radSpread),
            tiltAngle: Math.random() * Math.PI,
            color: opts.color,
            shape: opts.shape,
            tick: 0,
            totalTicks: opts.ticks,
            decay: opts.decay,
            drift: opts.drift,
            random: Math.random() + 5,
            tiltSin: 0,
            tiltCos: 0,
            wobbleX: 0,
            wobbleY: 0,
            gravity: opts.gravity * 3,
            ovalScalar: 0.6,
            scalar: opts.scalar
        };
    }
    function updateFetti(context, fetti) {
        fetti.x += Math.cos(fetti.angle2D) * fetti.velocity + fetti.drift;
        fetti.y += Math.sin(fetti.angle2D) * fetti.velocity + fetti.gravity;
        fetti.wobble += 0.1;
        fetti.velocity *= fetti.decay;
        fetti.tiltAngle += 0.1;
        fetti.tiltSin = Math.sin(fetti.tiltAngle);
        fetti.tiltCos = Math.cos(fetti.tiltAngle);
        fetti.random = Math.random() + 5;
        fetti.wobbleX = fetti.x + 10 * fetti.scalar * Math.cos(fetti.wobble);
        fetti.wobbleY = fetti.y + 10 * fetti.scalar * Math.sin(fetti.wobble);
        var progress = (fetti.tick++) / fetti.totalTicks;
        var x1 = fetti.x + fetti.random * fetti.tiltCos;
        var y1 = fetti.y + fetti.random * fetti.tiltSin;
        var x2 = fetti.wobbleX + fetti.random * fetti.tiltCos;
        var y2 = fetti.wobbleY + fetti.random * fetti.tiltSin;
        context.fillStyle = 'rgba(' + fetti.color.r + ', ' + fetti.color.g + ', ' + fetti.color.b + ', ' + (1 - progress) + ')';
        context.beginPath();
        if (fetti.shape === 'circle') context.ellipse ? context.ellipse(fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI) : ellipse(context, fetti.x, fetti.y, Math.abs(x2 - x1) * fetti.ovalScalar, Math.abs(y2 - y1) * fetti.ovalScalar, Math.PI / 10 * fetti.wobble, 0, 2 * Math.PI);
        else {
            context.moveTo(Math.floor(fetti.x), Math.floor(fetti.y));
            context.lineTo(Math.floor(fetti.wobbleX), Math.floor(y1));
            context.lineTo(Math.floor(x2), Math.floor(y2));
            context.lineTo(Math.floor(x1), Math.floor(fetti.wobbleY));
        }
        context.closePath();
        context.fill();
        return fetti.tick < fetti.totalTicks;
    }
    function animate(canvas, fettis, resizer, size, done) {
        var animatingFettis = fettis.slice();
        var context = canvas.getContext('2d');
        var animationFrame;
        var destroy;
        var prom = promise(function(resolve) {
            function onDone() {
                animationFrame = destroy = null;
                context.clearRect(0, 0, size.width, size.height);
                done();
                resolve();
            }
            function update() {
                if (isWorker && !(size.width === workerSize.width && size.height === workerSize.height)) {
                    size.width = canvas.width = workerSize.width;
                    size.height = canvas.height = workerSize.height;
                }
                if (!size.width && !size.height) {
                    resizer(canvas);
                    size.width = canvas.width;
                    size.height = canvas.height;
                }
                context.clearRect(0, 0, size.width, size.height);
                animatingFettis = animatingFettis.filter(function(fetti) {
                    return updateFetti(context, fetti);
                });
                if (animatingFettis.length) animationFrame = raf.frame(update);
                else onDone();
            }
            animationFrame = raf.frame(update);
            destroy = onDone;
        });
        return {
            addFettis: function(fettis1) {
                animatingFettis = animatingFettis.concat(fettis1);
                return prom;
            },
            canvas: canvas,
            promise: prom,
            reset: function() {
                if (animationFrame) raf.cancel(animationFrame);
                if (destroy) destroy();
            }
        };
    }
    function confettiCannon(canvas, globalOpts) {
        var isLibCanvas = !canvas;
        var allowResize = !!prop(globalOpts || {
        }, 'resize');
        var globalDisableForReducedMotion = prop(globalOpts, 'disableForReducedMotion', Boolean);
        var shouldUseWorker = canUseWorker && !!prop(globalOpts || {
        }, 'useWorker');
        var worker = shouldUseWorker ? getWorker() : null;
        var resizer = isLibCanvas ? setCanvasWindowSize : setCanvasRectSize;
        var initialized = canvas && worker ? !!canvas.__confetti_initialized : false;
        var preferLessMotion = typeof matchMedia === 'function' && matchMedia('(prefers-reduced-motion)').matches;
        var animationObj;
        function fireLocal(options, size, done) {
            var particleCount = prop(options, 'particleCount', onlyPositiveInt);
            var angle = prop(options, 'angle', Number);
            var spread = prop(options, 'spread', Number);
            var startVelocity = prop(options, 'startVelocity', Number);
            var decay = prop(options, 'decay', Number);
            var gravity = prop(options, 'gravity', Number);
            var drift = prop(options, 'drift', Number);
            var colors = prop(options, 'colors', colorsToRgb);
            var ticks = prop(options, 'ticks', Number);
            var shapes = prop(options, 'shapes');
            var scalar = prop(options, 'scalar');
            var origin = getOrigin(options);
            var temp = particleCount;
            var fettis = [];
            var startX = canvas.width * origin.x;
            var startY = canvas.height * origin.y;
            while(temp--)fettis.push(randomPhysics({
                x: startX,
                y: startY,
                angle: angle,
                spread: spread,
                startVelocity: startVelocity,
                color: colors[temp % colors.length],
                shape: shapes[randomInt(0, shapes.length)],
                ticks: ticks,
                decay: decay,
                gravity: gravity,
                drift: drift,
                scalar: scalar
            }));
            // if we have a previous canvas already animating,
            // add to it
            if (animationObj) return animationObj.addFettis(fettis);
            animationObj = animate(canvas, fettis, resizer, size, done);
            return animationObj.promise;
        }
        function fire(options) {
            var disableForReducedMotion = globalDisableForReducedMotion || prop(options, 'disableForReducedMotion', Boolean);
            var zIndex = prop(options, 'zIndex', Number);
            if (disableForReducedMotion && preferLessMotion) return promise(function(resolve) {
                resolve();
            });
            if (isLibCanvas && animationObj) // use existing canvas from in-progress animation
            canvas = animationObj.canvas;
            else if (isLibCanvas && !canvas) {
                // create and initialize a new canvas
                canvas = getCanvas(zIndex);
                document.body.appendChild(canvas);
            }
            if (allowResize && !initialized) // initialize the size of a user-supplied canvas
            resizer(canvas);
            var size = {
                width: canvas.width,
                height: canvas.height
            };
            if (worker && !initialized) worker.init(canvas);
            initialized = true;
            if (worker) canvas.__confetti_initialized = true;
            function onResize() {
                if (worker) {
                    // TODO this really shouldn't be immediate, because it is expensive
                    var obj = {
                        getBoundingClientRect: function() {
                            if (!isLibCanvas) return canvas.getBoundingClientRect();
                        }
                    };
                    resizer(obj);
                    worker.postMessage({
                        resize: {
                            width: obj.width,
                            height: obj.height
                        }
                    });
                    return;
                }
                // don't actually query the size here, since this
                // can execute frequently and rapidly
                size.width = size.height = null;
            }
            function done() {
                animationObj = null;
                if (allowResize) global.removeEventListener('resize', onResize);
                if (isLibCanvas && canvas) {
                    document.body.removeChild(canvas);
                    canvas = null;
                    initialized = false;
                }
            }
            if (allowResize) global.addEventListener('resize', onResize, false);
            if (worker) return worker.fire(options, size, done);
            return fireLocal(options, size, done);
        }
        fire.reset = function() {
            if (worker) worker.reset();
            if (animationObj) animationObj.reset();
        };
        return fire;
    }
    module.exports = confettiCannon(null, {
        useWorker: true,
        resize: true
    });
    module.exports.create = confettiCannon;
})(function() {
    if (typeof window !== 'undefined') return window;
    if (typeof self !== 'undefined') return self;
    return this || {
    };
}(), $8a2c3ff112445212$var$module, false);
var // end source content
$8a2c3ff112445212$export$9099ad97b570f7c = $8a2c3ff112445212$var$module.exports;
var $8a2c3ff112445212$export$83abccee78a744ce = $8a2c3ff112445212$var$module.exports.create;




var $gctDA = parcelRequire("gctDA");



var $gctDA = parcelRequire("gctDA");
var $b419092792ce86fd$exports = {};

$b419092792ce86fd$exports = new URL((parcelRequire("010HX")).resolve("br2X8"), import.meta.url).toString();


const $9a495da225c68baa$export$d64e687ef4853cae = ({ resolve: resolve , reject: reject , msg: msg , choices: choices , input: input , acceptLabel: acceptLabel = 'Accept' , onClose: onClose , onCloseButton: onCloseButton , onCancelled: onCancelled , info: info = false ,  })=>{
    $gctDA.useEffect(()=>{
        window.scrollTo(0, 0);
        if (input) document.querySelector('#dialog-input-0').focus();
    }, []);
    const resolveInput = ()=>{
        resolve(input.map((_, i)=>document.querySelector('#dialog-input-' + i).value
        ));
    };
    const handleClose = (cancelled = false)=>{
        reject();
        if (cancelled === true && onCancelled) return onCancelled();
        if (onClose) onClose();
        if (onCloseButton) Object.values(onCloseButton)[0]();
    };
    return(/*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("section", {
        className: "modal",
        onClick: ()=>handleClose(true)
        ,
        children: [
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                className: "background"
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                className: "content",
                children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
                    className: "wrap",
                    onClick: (e)=>{
                        e.stopPropagation();
                        return false;
                    },
                    children: [
                        /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                            className: "close",
                            onClick: ()=>handleClose(true)
                            ,
                            children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("img", {
                                src: (/*@__PURE__*/$parcel$interopDefault($b419092792ce86fd$exports))
                            })
                        }),
                        /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                            children: msg
                        }),
                        input && input.map(({ placeholder: placeholder , type: type = 'text'  }, i)=>/*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                                children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("input", {
                                    id: "dialog-input-" + i,
                                    type: type,
                                    placeholder: placeholder,
                                    onKeyUp: (e)=>e.key === 'Enter' && resolveInput()
                                })
                            }, i)
                        ),
                        choices && choices.map((label, i)=>/*#__PURE__*/ $8873ccd5938d9111$exports.jsx("button", {
                                onClick: ()=>resolve(label)
                                ,
                                children: label
                            }, i)
                        ),
                        !info && !choices && /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("button", {
                            className: "center",
                            onClick: resolveInput,
                            children: acceptLabel
                        }),
                        onCloseButton && /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("button", {
                            className: "center",
                            onClick: handleClose,
                            children: Object.keys(onCloseButton)[0]
                        })
                    ]
                })
            })
        ]
    }));
};



const $5fbf0765a27e7042$var$ipfsGateway = 'https://cloudflare-ipfs.com/ipfs/';
const $5fbf0765a27e7042$var$Layout = ({ media: media , title: title , paras: paras , buttons: buttons  })=>/*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
        className: "layout",
        children: [
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("img", {
                    src: media,
                    crossOrigin: "*"
                })
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
                children: [
                    title && /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("h1", {
                        children: title
                    }),
                    paras.length && paras.map((p, i)=>/*#__PURE__*/ $8873ccd5938d9111$exports.jsx("p", {
                            children: p
                        }, i)
                    ),
                    buttons.length && buttons.map(({ label: label , className: className , onClick: onClick  }, i)=>label && /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($8873ccd5938d9111$exports.Fragment, {
                            children: [
                                /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("button", {
                                    className: className,
                                    onClick: onClick,
                                    children: label
                                }, i)
                            ]
                        })
                    )
                ]
            })
        ]
    })
;
const $5fbf0765a27e7042$export$3a08ebe9569943e3 = (props)=>{
    const { item: item , loading: loading , createdAccount: createdAccount , claimedItem: claimedItem , accountId: accountId , walletUrl: walletUrl , dialog: dialog , wallet: wallet , handleCreateWallet: handleCreateWallet , handleClaimNFT: handleClaimNFT ,  } = props;
    const [media, setMedia] = $gctDA.useState(null);
    const loadItem = async ()=>{
        if (!item) return;
        const { contractId: contractId , title: title  } = item;
        setMedia($5fbf0765a27e7042$var$ipfsGateway + (await $ed54bbeeac7bebcb$export$7b6695599253d7ba(contractId, title)).metadata.media);
    };
    $gctDA.useEffect(loadItem, [
        item
    ]);
    if (claimedItem) return accountId ? /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
        className: "claim",
        children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($5fbf0765a27e7042$var$Layout, {
            title: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("span", {
                children: [
                    "Congratulations ",
                    /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("span", {
                        className: "sparkle",
                        children: [
                            accountId,
                            "!"
                        ]
                    })
                ]
            }),
            media: media,
            paras: [
                'You claimed your NFT!'
            ],
            buttons: [
                {
                    label: 'View NFT in NEAR Wallet',
                    onClick: ()=>window.open(walletUrl + '/?tab=collectibles')
                }
            ]
        })
    }) : /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
        className: "claim",
        children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
            children: [
                /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("h1", {
                    children: "NFT claimed!"
                }),
                media && /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("img", {
                    src: media
                }),
                /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("p", {
                    children: "This NFT was already claimed!"
                })
            ]
        })
    });
    if (!item) return !loading && /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
        children: [
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("h1", {
                children: "Satori"
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("p", {
                children: "Check the link sent to you and try again."
            })
        ]
    });
    return(/*#__PURE__*/ $8873ccd5938d9111$exports.jsxs($8873ccd5938d9111$exports.Fragment, {
        children: [
            dialog && /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($9a495da225c68baa$export$d64e687ef4853cae, {
                ...dialog
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("div", {
                className: "claim",
                children: !accountId ? /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($5fbf0765a27e7042$var$Layout, {
                    title: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("span", {
                        children: [
                            "Congratulations you ",
                            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("span", {
                                className: "sparkle",
                                children: "rock!"
                            })
                        ]
                    }),
                    media: media,
                    paras: [
                        'You need to connect or create a NEAR Wallet so we know where to send your NFT!'
                    ],
                    buttons: [
                        {
                            label: 'Connect Wallet',
                            onClick: ()=>wallet.signIn()
                        },
                        !createdAccount ? {
                            label: 'Create Wallet',
                            className: 'outline',
                            onClick: handleCreateWallet
                        } : {
                        }
                    ]
                }) : /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($5fbf0765a27e7042$var$Layout, {
                    title: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("span", {
                        children: [
                            "Wallet ",
                            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("span", {
                                className: "sparkle",
                                children: accountId
                            }),
                            " connected!"
                        ]
                    }),
                    media: media,
                    paras: [
                        'You can now claim your NFT!'
                    ],
                    buttons: [
                        {
                            label: 'Claim NFT',
                            onClick: handleClaimNFT
                        },
                        !createdAccount ? {
                            label: 'Or Change Wallet',
                            className: 'text',
                            onClick: ()=>{
                                wallet.signOut();
                                window.location.href = window.location.href.split('?')[0];
                            }
                        } : {
                        }
                    ]
                })
            })
        ]
    }));
};



const $231918bd11620367$var$launchConfetti = ()=>$8a2c3ff112445212$export$9099ad97b570f7c({
        spread: 90,
        startVelocity: 50,
        gravity: 2,
        colors: [
            '#2FD2E9',
            '#3A90F4',
            '#B950E3'
        ]
    })
;
const $231918bd11620367$export$e4d2c949362e5ba4 = (props)=>{
    var ref;
    const { state: state , dispatch: dispatch , update: update  } = props;
    const { item: item  } = state;
    const { wallet: wallet , account: account  } = state.near;
    const { dialog: dialog , loading: loading  } = state.app;
    const { path: path , args: args , pathArgs: pathArgs  } = $eacf32db4b77f181$export$74d16f6678e5592b();
    console.log(pathArgs);
    let accountId = (ref = window.location.href.split('?accountId=')[1]) === null || ref === void 0 ? void 0 : ref.split('&')[0];
    if (account) accountId = account.accountId;
    const code = pathArgs[0];
    $eacf32db4b77f181$export$91086302b3863684(()=>{
        window.scrollTo(0, 0);
        update('app', {
            href: window.location.href,
            isMenuOpen: false,
            isEditionOpen: false
        });
    }, true);
    const onMount = async ()=>{
        dispatch($ed54bbeeac7bebcb$export$3a8270e8b53ae72());
        if (code && code.length) {
            update('app.loading', true);
            const item1 = await dispatch($0dd9b89baba6b3ad$export$22b8d566c072d9e8(code));
            update('app.loading', false);
            if (!item1) dispatch($0dd9b89baba6b3ad$export$77f6294e9b7e6816({
                msg: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
                    children: [
                        /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("p", {
                            children: "There was an issue finding your item."
                        }),
                        /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("p", {
                            children: "Please check the link that was sent to you and try again."
                        })
                    ]
                }),
                choices: [
                    'Ok'
                ]
            }));
        }
    };
    $gctDA.useEffect(onMount, []);
    const handleCreateWallet = async ()=>{
        update('app.loading', true);
        let response;
        try {
            response = await $3bd9a49ae04a48f2$export$e9ae7d5904da977e({
                url: '/claim/body-code/linkdrop',
                method: 'POST',
                body: {
                    code: code,
                    redirectUrl: encodeURIComponent(window.location.href)
                }
            });
        } catch (e) {
            console.warn(e);
        }
        update('app.loading', false);
        if (!response.linkdrop) return dispatch($0dd9b89baba6b3ad$export$77f6294e9b7e6816({
            msg: /*#__PURE__*/ $8873ccd5938d9111$exports.jsxs("div", {
                children: [
                    /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("p", {
                        children: "There was an issue setting up your NEAR Account."
                    }),
                    /*#__PURE__*/ $8873ccd5938d9111$exports.jsx("p", {
                        children: "Please try again."
                    })
                ]
            }),
            choices: [
                'Ok'
            ]
        }));
        window.location = response.linkdrop;
    };
    const handleClaimNFT = async ()=>{
        update('app.loading', true);
        const { contractId: contractId , title: title  } = item;
        let response;
        try {
            response = await $3bd9a49ae04a48f2$export$e9ae7d5904da977e({
                url: `/claim/body-code/nft/${contractId}/${encodeURIComponent(title)}`,
                method: 'POST',
                body: {
                    code: code,
                    receiverId: accountId
                }
            });
        } catch (e) {
            console.warn(e);
        }
        dispatch($0dd9b89baba6b3ad$export$22b8d566c072d9e8(code));
        update('app.loading', false);
        $231918bd11620367$var$launchConfetti();
    };
    console.log(item);
    const { ldHash: createdAccount , nftHash: claimedItem  } = item || {
    };
    return(/*#__PURE__*/ $8873ccd5938d9111$exports.jsx($5fbf0765a27e7042$export$3a08ebe9569943e3, {
        item: item,
        loading: loading,
        createdAccount: createdAccount,
        claimedItem: claimedItem,
        accountId: accountId,
        walletUrl: $ed54bbeeac7bebcb$export$2d0db0b153519770,
        dialog: dialog,
        wallet: wallet,
        handleCreateWallet: handleCreateWallet,
        handleClaimNFT: handleClaimNFT
    }));
};



const $abd3c3aeb088edbc$var$App = ()=>{
    const { state: state , dispatch: dispatch , update: update  } = $gctDA.useContext($0dd9b89baba6b3ad$export$cceeb3b33cbfc293);
    const { dialog: dialog , loading: loading , event: event  } = state.app;
    $eacf32db4b77f181$export$91086302b3863684(()=>{
        window.scrollTo(0, 0);
        update('app', {
            href: window.location.href,
            isMenuOpen: false,
            isEditionOpen: false
        });
    }, true);
    const pathVars = $eacf32db4b77f181$export$74d16f6678e5592b();
    const { path: path  } = pathVars;
    const onMount = async ()=>{
        await dispatch($0dd9b89baba6b3ad$export$8d609ae8d9df9580(pathVars));
    };
    $gctDA.useEffect(onMount, []);
    const props = {
        state: state,
        dispatch: dispatch,
        update: update,
        ...pathVars
    };
    return(/*#__PURE__*/ $8873ccd5938d9111$exports.jsxs($8873ccd5938d9111$exports.Fragment, {
        children: [
            loading && /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($26747e3dc6aa0498$export$9b1da5323aebab6a, {
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($231918bd11620367$export$e4d2c949362e5ba4, {
                ...props
            }),
            /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($f2ff65b1c4d10ad3$export$37d11458069ee565, {
            })
        ]
    }));
};
var $abd3c3aeb088edbc$export$9099ad97b570f7c = $abd3c3aeb088edbc$var$App;



(/*@__PURE__*/$parcel$interopDefault($657d346a63c24e23$exports)).render(/*#__PURE__*/ $8873ccd5938d9111$exports.jsx($0dd9b89baba6b3ad$export$a1942a4e81210c61, {
    children: /*#__PURE__*/ $8873ccd5938d9111$exports.jsx($abd3c3aeb088edbc$export$9099ad97b570f7c, {
    })
}), document.getElementById('root'));


//# sourceMappingURL=index.f3aad014.js.map
